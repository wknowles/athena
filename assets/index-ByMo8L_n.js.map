{"version":3,"file":"index-ByMo8L_n.js","sources":["../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Event.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/Collection.js","../../node_modules/ol/asserts.js","../../node_modules/ol/Feature.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/math.js","../../node_modules/ol/sphere.js","../../node_modules/ol/console.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/proj/utm.js","../../node_modules/ol/proj.js","../../node_modules/ol/transform.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/has.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/dom.js","../../node_modules/ol/color.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/css.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/Circle.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/render/Feature.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/size.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/ZIndexContext.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/easing.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/View.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/layer/Layer.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/ImageCanvas.js","../../node_modules/ol/TileState.js","../../node_modules/ol/Tile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/Key.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/Map.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/VectorRenderTile.js","../../node_modules/ol/VectorTile.js","../../node_modules/ol/control/ScaleLine.js","../../node_modules/ol/interaction/Link.js","../../node_modules/ol/DataTile.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/layer/Tile.js","../../node_modules/@maplibre/maplibre-gl-style-spec/dist/index.mjs","../../node_modules/mapbox-to-css-font/index.js","../../node_modules/ol-mapbox-style/src/mapbox.js","../../node_modules/ol-mapbox-style/src/util.js","../../node_modules/ol-mapbox-style/src/text.js","../../node_modules/ol-mapbox-style/src/stylefunction.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/format/JSONFeature.js","../../node_modules/ol/format/GeoJSON.js","../../node_modules/pbf/index.js","../../node_modules/ol/format/MVT.js","../../node_modules/ol/renderer/canvas/ImageLayer.js","../../node_modules/ol/layer/BaseImage.js","../../node_modules/ol/layer/Image.js","../../node_modules/ol/renderer/canvas/VectorTileLayer.js","../../node_modules/ol/layer/VectorTile.js","../../node_modules/ol/resolution.js","../../node_modules/ol/reproj/Image.js","../../node_modules/ol/source/common.js","../../node_modules/ol/source/Image.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/source/Raster.js","../../node_modules/ol/net.js","../../node_modules/ol/uri.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/TileJSON.js","../../node_modules/ol/source/VectorTile.js","../../node_modules/ol-mapbox-style/src/shaders.js","../../node_modules/ol-mapbox-style/src/apply.js","../../node_modules/ol/interaction/Draw.js","../../main.js"],"sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType|null} Closest feature (or `null` if none found).\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      this.instructions.push(createFill.call(this, state));\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      applyStroke.call(this, state);\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    this.updateFillStyle(state, this.createFill);\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    if (!instruction[1]) {\n      return;\n    }\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      // Refrain from adding a 'willReadFrequently' hint in the options here.\n      // While it will remove the \"Canvas2D: Multiple readback operations using\n      // getImageData are faster with the willReadFrequently attribute set\n      // to true\" warnings in the console, it makes hitDetection extremely\n      // slow in Chrome when there are many features on the map\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + ALL.indexOf(builderType);\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1 && this.targetContext_) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageWrapper from './Image.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * @return {string} Tile url.\n   */\n  getTileUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport Control from './Control.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount = 0;\n    let previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/interaction/Link\n */\nimport MapEventType from '../MapEventType.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {function(string):void} Callback\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {},\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    /**\n     * @private\n     */\n    this.updateState_ = this.updateState_.bind(this);\n\n    /**\n     * The tracked parameter callbacks.\n     * @private\n     * @type {Object<string, Callback>}\n     */\n    this.trackedCallbacks_ = {};\n\n    /**\n     * The tracked parameter values.\n     * @private\n     * @type {Object<string, string|null>}\n     */\n    this.trackedValues_ = {};\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this),\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    for (const key in this.trackedCallbacks_) {\n      const value = params.get(key);\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\n        this.trackedValues_[key] = value;\n        this.trackedCallbacks_[key](value);\n      }\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\n   *\n   * @param {string} key The URL search parameter.\n   * @param {Callback} callback The function to call when the search parameter changes.\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\n   * @api\n   */\n  track(key, callback) {\n    this.trackedCallbacks_[key] = callback;\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const value = params.get(key);\n    this.trackedValues_[key] = value;\n    return value;\n  }\n\n  /**\n   * Update the URL with a new search parameter value.  If the value is null, it will be\n   * deleted from the search parameters.\n   *\n   * @param {string} key The URL search parameter.\n   * @param {string|null} value The updated value (or null to remove it from the URL).\n   * @api\n   */\n  update(key, value) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    if (value === null) {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n    if (key in this.trackedValues_) {\n      this.trackedValues_[key] = value;\n    }\n    this.updateHistory_(url);\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    this.updateHistory_(url);\n    this.initial_ = false;\n  }\n\n  /**\n   * @private\n   * @param {URL} url The URL.\n   */\n  updateHistory_(url) {\n    if (url.href !== window.location.href) {\n      if (this.initial_ || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","var $version = 8;\nvar $root = {\n\tversion: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: [\n\t\t\t8\n\t\t]\n\t},\n\tname: {\n\t\ttype: \"string\"\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tcenter: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\"\n\t},\n\tcenterAltitude: {\n\t\ttype: \"number\"\n\t},\n\tzoom: {\n\t\ttype: \"number\"\n\t},\n\tbearing: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\"\n\t},\n\tpitch: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\troll: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\tstate: {\n\t\ttype: \"state\",\n\t\t\"default\": {\n\t\t}\n\t},\n\tlight: {\n\t\ttype: \"light\"\n\t},\n\tsky: {\n\t\ttype: \"sky\"\n\t},\n\tprojection: {\n\t\ttype: \"projection\"\n\t},\n\tterrain: {\n\t\ttype: \"terrain\"\n\t},\n\tsources: {\n\t\trequired: true,\n\t\ttype: \"sources\"\n\t},\n\tsprite: {\n\t\ttype: \"sprite\"\n\t},\n\tglyphs: {\n\t\ttype: \"string\"\n\t},\n\ttransition: {\n\t\ttype: \"transition\"\n\t},\n\tlayers: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"layer\"\n\t}\n};\nvar sources = {\n\t\"*\": {\n\t\ttype: \"source\"\n\t}\n};\nvar source = [\n\t\"source_vector\",\n\t\"source_raster\",\n\t\"source_raster_dem\",\n\t\"source_geojson\",\n\t\"source_video\",\n\t\"source_image\"\n];\nvar source_vector = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvector: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\traster: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster_dem = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\t\"raster-dem\": {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tencoding: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tterrarium: {\n\t\t\t},\n\t\t\tmapbox: {\n\t\t\t},\n\t\t\tcustom: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"mapbox\"\n\t},\n\tredFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tblueFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tgreenFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tbaseShift: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_geojson = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tgeojson: {\n\t\t\t}\n\t\t}\n\t},\n\tdata: {\n\t\trequired: true,\n\t\ttype: \"*\"\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 18\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tbuffer: {\n\t\ttype: \"number\",\n\t\t\"default\": 128,\n\t\tmaximum: 512,\n\t\tminimum: 0\n\t},\n\tfilter: {\n\t\ttype: \"*\"\n\t},\n\ttolerance: {\n\t\ttype: \"number\",\n\t\t\"default\": 0.375\n\t},\n\tcluster: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tclusterRadius: {\n\t\ttype: \"number\",\n\t\t\"default\": 50,\n\t\tminimum: 0\n\t},\n\tclusterMaxZoom: {\n\t\ttype: \"number\"\n\t},\n\tclusterMinPoints: {\n\t\ttype: \"number\"\n\t},\n\tclusterProperties: {\n\t\ttype: \"*\"\n\t},\n\tlineMetrics: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tgenerateId: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t}\n};\nvar source_video = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvideo: {\n\t\t\t}\n\t\t}\n\t},\n\turls: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar source_image = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\timage: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\trequired: true,\n\t\ttype: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar layer = {\n\tid: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tfill: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\tsymbol: {\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t},\n\t\t\theatmap: {\n\t\t\t},\n\t\t\t\"fill-extrusion\": {\n\t\t\t},\n\t\t\traster: {\n\t\t\t},\n\t\t\thillshade: {\n\t\t\t},\n\t\t\t\"color-relief\": {\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t}\n\t\t},\n\t\trequired: true\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tsource: {\n\t\ttype: \"string\"\n\t},\n\t\"source-layer\": {\n\t\ttype: \"string\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tfilter: {\n\t\ttype: \"filter\"\n\t},\n\tlayout: {\n\t\ttype: \"layout\"\n\t},\n\tpaint: {\n\t\ttype: \"paint\"\n\t}\n};\nvar layout = [\n\t\"layout_fill\",\n\t\"layout_line\",\n\t\"layout_circle\",\n\t\"layout_heatmap\",\n\t\"layout_fill-extrusion\",\n\t\"layout_symbol\",\n\t\"layout_raster\",\n\t\"layout_hillshade\",\n\t\"layout_color-relief\",\n\t\"layout_background\"\n];\nvar layout_background = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_fill = {\n\t\"fill-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_circle = {\n\t\"circle-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_heatmap = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_line = {\n\t\"line-cap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbutt: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tsquare: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"butt\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-join\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbevel: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tmiter: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"miter\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-miter-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"miter\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-round-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.05,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"round\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_symbol = {\n\t\"symbol-placement\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tpoint: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\t\"line-center\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"point\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 250,\n\t\tminimum: 1,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"symbol-placement\": \"line\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-avoid-edges\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"symbol-z-order\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\t\"viewport-y\": {\n\t\t\t},\n\t\t\tsource: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"!\": \"icon-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tunits: \"factor of the original icon size\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-text-fit\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\twidth: {\n\t\t\t},\n\t\t\theight: {\n\t\t\t},\n\t\t\tboth: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-text-fit-padding\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"icon-text-fit\": [\n\t\t\t\t\t\"both\",\n\t\t\t\t\t\"width\",\n\t\t\t\t\t\"height\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-image\": {\n\t\ttype: \"resolvedImage\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-padding\": {\n\t\ttype: \"padding\",\n\t\t\"default\": [\n\t\t\t2\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"icon-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\t\"viewport-glyph\": {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-field\": {\n\t\ttype: \"formatted\",\n\t\t\"default\": \"\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-font\": {\n\t\ttype: \"array\",\n\t\tvalue: \"string\",\n\t\t\"default\": [\n\t\t\t\"Open Sans Regular\",\n\t\t\t\"Arial Unicode MS Regular\"\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 16,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 10,\n\t\tminimum: 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-line-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.2,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-letter-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-justify\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-radial-offset\": {\n\t\ttype: \"number\",\n\t\tunits: \"ems\",\n\t\t\"default\": 0,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\t\"property-type\": \"data-driven\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t}\n\t},\n\t\"text-variable-anchor\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-variable-anchor-offset\": {\n\t\ttype: \"variableAnchorOffsetCollection\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-variable-anchor\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-angle\": {\n\t\ttype: \"number\",\n\t\t\"default\": 45,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-writing-mode\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\thorizontal: {\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-padding\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"text-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-transform\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\tuppercase: {\n\t\t\t},\n\t\t\tlowercase: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tunits: \"ems\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-radial-offset\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_raster = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_hillshade = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar filter = {\n\ttype: \"array\",\n\tvalue: \"*\"\n};\nvar filter_operator = {\n\ttype: \"enum\",\n\tvalues: {\n\t\t\"==\": {\n\t\t},\n\t\t\"!=\": {\n\t\t},\n\t\t\">\": {\n\t\t},\n\t\t\">=\": {\n\t\t},\n\t\t\"<\": {\n\t\t},\n\t\t\"<=\": {\n\t\t},\n\t\t\"in\": {\n\t\t},\n\t\t\"!in\": {\n\t\t},\n\t\tall: {\n\t\t},\n\t\tany: {\n\t\t},\n\t\tnone: {\n\t\t},\n\t\thas: {\n\t\t},\n\t\t\"!has\": {\n\t\t}\n\t}\n};\nvar geometry_type = {\n\ttype: \"enum\",\n\tvalues: {\n\t\tPoint: {\n\t\t},\n\t\tLineString: {\n\t\t},\n\t\tPolygon: {\n\t\t}\n\t}\n};\nvar function_stop = {\n\ttype: \"array\",\n\tminimum: 0,\n\tmaximum: 24,\n\tvalue: [\n\t\t\"number\",\n\t\t\"color\"\n\t],\n\tlength: 2\n};\nvar expression$1 = {\n\ttype: \"array\",\n\tvalue: \"*\",\n\tminimum: 1\n};\nvar light = {\n\tanchor: {\n\t\ttype: \"enum\",\n\t\t\"default\": \"viewport\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tposition: {\n\t\ttype: \"array\",\n\t\t\"default\": [\n\t\t\t1.15,\n\t\t\t210,\n\t\t\t30\n\t\t],\n\t\tlength: 3,\n\t\tvalue: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tcolor: {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\tintensity: {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar sky = {\n\t\"sky-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#88C6FC\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-ground-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-fog-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"sky-horizon-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"atmosphere-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar terrain = {\n\tsource: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\texaggeration: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\t\"default\": 1\n\t}\n};\nvar projection = {\n\ttype: {\n\t\ttype: \"projectionDefinition\",\n\t\t\"default\": \"mercator\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t}\n};\nvar paint = [\n\t\"paint_fill\",\n\t\"paint_line\",\n\t\"paint_circle\",\n\t\"paint_heatmap\",\n\t\"paint_fill-extrusion\",\n\t\"paint_symbol\",\n\t\"paint_raster\",\n\t\"paint_hillshade\",\n\t\"paint_color-relief\",\n\t\"paint_background\"\n];\nvar paint_fill = {\n\t\"fill-antialias\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-outline-color\": {\n\t\ttype: \"color\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"fill-antialias\": true\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t}\n};\nvar paint_line = {\n\t\"line-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"line-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-gap-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-offset\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-dasharray\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"line widths\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"line-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"line-gradient\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-dasharray\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsource: \"geojson\",\n\t\t\t\thas: {\n\t\t\t\t\tlineMetrics: true\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"line-progress\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n};\nvar paint_circle = {\n\t\"circle-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 5,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"circle-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-scale\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-stroke-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t}\n};\nvar paint_heatmap = {\n\t\"heatmap-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 30,\n\t\tminimum: 1,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-weight\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-intensity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"heatmap-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": [\n\t\t\t\"interpolate\",\n\t\t\t[\n\t\t\t\t\"linear\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"heatmap-density\"\n\t\t\t],\n\t\t\t0,\n\t\t\t\"rgba(0, 0, 255, 0)\",\n\t\t\t0.1,\n\t\t\t\"royalblue\",\n\t\t\t0.3,\n\t\t\t\"cyan\",\n\t\t\t0.5,\n\t\t\t\"lime\",\n\t\t\t0.7,\n\t\t\t\"yellow\",\n\t\t\t1,\n\t\t\t\"red\"\n\t\t],\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"heatmap-density\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t},\n\t\"heatmap-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_symbol = {\n\t\"icon-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"icon-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\toverridable: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"text-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_raster = {\n\t\"raster-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-hue-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\ttransition: true,\n\t\tunits: \"degrees\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-min\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-max\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-saturation\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-contrast\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-resampling\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tlinear: {\n\t\t\t},\n\t\t\tnearest: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"linear\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-fade-duration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\tunits: \"milliseconds\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_hillshade = {\n\t\"hillshade-illumination-direction\": {\n\t\ttype: \"numberArray\",\n\t\t\"default\": 335,\n\t\tminimum: 0,\n\t\tmaximum: 359,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-altitude\": {\n\t\ttype: \"numberArray\",\n\t\t\"default\": 45,\n\t\tminimum: 0,\n\t\tmaximum: 90,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-exaggeration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-shadow-color\": {\n\t\ttype: \"colorArray\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-highlight-color\": {\n\t\ttype: \"colorArray\",\n\t\t\"default\": \"#FFFFFF\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-accent-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-method\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tstandard: {\n\t\t\t},\n\t\t\tbasic: {\n\t\t\t},\n\t\t\tcombined: {\n\t\t\t},\n\t\t\tigor: {\n\t\t\t},\n\t\t\tmultidirectional: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"standard\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_background = {\n\t\"background-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"background-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"background-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"background-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar transition = {\n\tduration: {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t},\n\tdelay: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t}\n};\nvar promoteId = {\n\t\"*\": {\n\t\ttype: \"string\"\n\t}\n};\nvar v8Spec = {\n\t$version: $version,\n\t$root: $root,\n\tsources: sources,\n\tsource: source,\n\tsource_vector: source_vector,\n\tsource_raster: source_raster,\n\tsource_raster_dem: source_raster_dem,\n\tsource_geojson: source_geojson,\n\tsource_video: source_video,\n\tsource_image: source_image,\n\tlayer: layer,\n\tlayout: layout,\n\tlayout_background: layout_background,\n\tlayout_fill: layout_fill,\n\tlayout_circle: layout_circle,\n\tlayout_heatmap: layout_heatmap,\n\t\"layout_fill-extrusion\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tlayout_line: layout_line,\n\tlayout_symbol: layout_symbol,\n\tlayout_raster: layout_raster,\n\tlayout_hillshade: layout_hillshade,\n\t\"layout_color-relief\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tfilter: filter,\n\tfilter_operator: filter_operator,\n\tgeometry_type: geometry_type,\n\t\"function\": {\n\texpression: {\n\t\ttype: \"expression\"\n\t},\n\tstops: {\n\t\ttype: \"array\",\n\t\tvalue: \"function_stop\"\n\t},\n\tbase: {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0\n\t},\n\tproperty: {\n\t\ttype: \"string\",\n\t\t\"default\": \"$zoom\"\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tidentity: {\n\t\t\t},\n\t\t\texponential: {\n\t\t\t},\n\t\t\tinterval: {\n\t\t\t},\n\t\t\tcategorical: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"exponential\"\n\t},\n\tcolorSpace: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\trgb: {\n\t\t\t},\n\t\t\tlab: {\n\t\t\t},\n\t\t\thcl: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"rgb\"\n\t},\n\t\"default\": {\n\t\ttype: \"*\",\n\t\trequired: false\n\t}\n},\n\tfunction_stop: function_stop,\n\texpression: expression$1,\n\tlight: light,\n\tsky: sky,\n\tterrain: terrain,\n\tprojection: projection,\n\tpaint: paint,\n\tpaint_fill: paint_fill,\n\t\"paint_fill-extrusion\": {\n\t\"fill-extrusion-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-extrusion-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-extrusion-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"fill-extrusion-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-base\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"fill-extrusion-height\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-vertical-gradient\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n},\n\tpaint_line: paint_line,\n\tpaint_circle: paint_circle,\n\tpaint_heatmap: paint_heatmap,\n\tpaint_symbol: paint_symbol,\n\tpaint_raster: paint_raster,\n\tpaint_hillshade: paint_hillshade,\n\t\"paint_color-relief\": {\n\t\"color-relief-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"color-relief-color\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"elevation\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n},\n\tpaint_background: paint_background,\n\ttransition: transition,\n\t\"property-type\": {\n\t\"data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded-data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"color-ramp\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"data-constant\": {\n\t\ttype: \"property-type\"\n\t},\n\tconstant: {\n\t\ttype: \"property-type\"\n\t}\n},\n\tpromoteId: promoteId\n};\n\nconst refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a, b) {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object'))\n            return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length)\n            return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\n/**\n * The main reason for this method is to allow type check when adding a command to the array.\n * @param commands - The commands array to add to\n * @param command - The command to add\n */\nfunction addCommand(commands, command) {\n    commands.push(command);\n}\nfunction addSource(sourceId, after, commands) {\n    addCommand(commands, { command: 'addSource', args: [sourceId, after[sourceId]] });\n}\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    addCommand(commands, { command: 'removeSource', args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n    let sourceId;\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        }\n        else if (!deepEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                addCommand(commands, { command: 'setGeoJSONSourceData', args: [sourceId, after[sourceId].data] });\n            }\n            else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n    for (const prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (const prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n    let layerId;\n    let beforeLayer;\n    let afterLayer;\n    let insertBeforeLayerId;\n    let prop;\n    // remove layers\n    for (let i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n    // add/reorder layers\n    for (let i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n        if (tracker[tracker.length - 1 - i] === layerId)\n            continue;\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        addCommand(commands, { command: 'addLayer', args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n    // update layers\n    for (let i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || deepEqual(beforeLayer, afterLayer))\n            continue;\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!deepEqual(beforeLayer.source, afterLayer.source) || !deepEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !deepEqual(beforeLayer.type, afterLayer.type)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            addCommand(commands, { command: 'addLayer', args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, 'setLayoutProperty');\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, 'setPaintProperty');\n        if (!deepEqual(beforeLayer.filter, afterLayer.filter)) {\n            addCommand(commands, { command: 'setFilter', args: [layerId, afterLayer.filter] });\n        }\n        if (!deepEqual(beforeLayer.minzoom, afterLayer.minzoom) || !deepEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            addCommand(commands, { command: 'setLayerZoomRange', args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diff(before, after) {\n    if (!before)\n        return [{ command: 'setStyle', args: [after] }];\n    let commands = [];\n    try {\n        // Handle changes to top-level properties\n        if (!deepEqual(before.version, after.version)) {\n            return [{ command: 'setStyle', args: [after] }];\n        }\n        if (!deepEqual(before.center, after.center)) {\n            commands.push({ command: 'setCenter', args: [after.center] });\n        }\n        if (!deepEqual(before.state, after.state)) {\n            commands.push({ command: 'setGlobalState', args: [after.state] });\n        }\n        if (!deepEqual(before.centerAltitude, after.centerAltitude)) {\n            commands.push({ command: 'setCenterAltitude', args: [after.centerAltitude] });\n        }\n        if (!deepEqual(before.zoom, after.zoom)) {\n            commands.push({ command: 'setZoom', args: [after.zoom] });\n        }\n        if (!deepEqual(before.bearing, after.bearing)) {\n            commands.push({ command: 'setBearing', args: [after.bearing] });\n        }\n        if (!deepEqual(before.pitch, after.pitch)) {\n            commands.push({ command: 'setPitch', args: [after.pitch] });\n        }\n        if (!deepEqual(before.roll, after.roll)) {\n            commands.push({ command: 'setRoll', args: [after.roll] });\n        }\n        if (!deepEqual(before.sprite, after.sprite)) {\n            commands.push({ command: 'setSprite', args: [after.sprite] });\n        }\n        if (!deepEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: 'setGlyphs', args: [after.glyphs] });\n        }\n        if (!deepEqual(before.transition, after.transition)) {\n            commands.push({ command: 'setTransition', args: [after.transition] });\n        }\n        if (!deepEqual(before.light, after.light)) {\n            commands.push({ command: 'setLight', args: [after.light] });\n        }\n        if (!deepEqual(before.terrain, after.terrain)) {\n            commands.push({ command: 'setTerrain', args: [after.terrain] });\n        }\n        if (!deepEqual(before.sky, after.sky)) {\n            commands.push({ command: 'setSky', args: [after.sky] });\n        }\n        if (!deepEqual(before.projection, after.projection)) {\n            commands.push({ command: 'setProjection', args: [after.projection] });\n        }\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if ('source' in layer && sourcesRemoved[layer.source]) {\n                    commands.push({ command: 'removeLayer', args: [layer.id] });\n                }\n                else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    }\n    catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: 'setStyle', args: [after] }];\n    }\n    return commands;\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier)\n            this.identifier = identifier;\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ParsingError {\n    constructor(error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n\nfunction extendBy(output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n\nclass ExpressionParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${name} not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ProjectionDefinitionType = { kind: 'projectionDefinition' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst PaddingType = { kind: 'padding' };\nconst ColorArrayType = { kind: 'colorArray' };\nconst NumberArrayType = { kind: 'numberArray' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nconst VariableAnchorOffsetCollectionType = { kind: 'variableAnchorOffsetCollection' };\nfunction array(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction typeToString(type) {\n    if (type.kind === 'array') {\n        const itemType = typeToString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    }\n    else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ProjectionDefinitionType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    PaddingType,\n    NumberArrayType,\n    ColorArrayType,\n    ResolvedImageType,\n    VariableAnchorOffsetCollectionType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    }\n    else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    }\n    else if (expected.kind === t.kind) {\n        return null;\n    }\n    else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${typeToString(expected)} but found ${typeToString(t)} instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        }\n        else if (t === 'array') {\n            return Array.isArray(provided);\n        }\n        else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        }\n        else {\n            return t === typeof provided;\n        }\n    });\n}\n/**\n * Verify whether the specified type is of the same type as the specified sample.\n *\n * @param provided Type to verify\n * @param sample Sample type to reference\n * @returns `true` if both objects are of the same type, `false` otherwise\n * @example basic types\n * if (verifyType(outputType, ValueType)) {\n *     // type narrowed to:\n *     outputType.kind; // 'value'\n * }\n * @example array types\n * if (verifyType(outputType, array(NumberType))) {\n *     // type narrowed to:\n *     outputType.kind; // 'array'\n *     outputType.itemType; // NumberTypeT\n *     outputType.itemType.kind; // 'number'\n * }\n */\nfunction verifyType(provided, sample) {\n    if (provided.kind === 'array' && sample.kind === 'array') {\n        return provided.itemType.kind === sample.itemType.kind && typeof provided.N === 'number';\n    }\n    return provided.kind === sample.kind;\n}\n\n// See https://observablehq.com/@mbostock/lab-and-rgb\nconst Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI;\nfunction constrainAngle(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nfunction rgbToLab([r, g, b, alpha]) {\n    r = rgb2xyz(r);\n    g = rgb2xyz(g);\n    b = rgb2xyz(b);\n    let x, z;\n    const y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn);\n    if (r === g && g === b) {\n        x = z = y;\n    }\n    else {\n        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    const l = 116 * y - 16;\n    return [(l < 0) ? 0 : l, 500 * (x - y), 200 * (y - z), alpha];\n}\nfunction rgb2xyz(x) {\n    return (x <= 0.04045) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\nfunction xyz2lab(t) {\n    return (t > t3) ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction labToRgb([l, a, b, alpha]) {\n    let y = (l + 16) / 116, x = isNaN(a) ? y : y + a / 500, z = isNaN(b) ? y : y - b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return [\n        xyz2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), // D50 -> sRGB\n        xyz2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n        xyz2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n        alpha,\n    ];\n}\nfunction xyz2rgb(x) {\n    x = (x <= 0.00304) ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n    return (x < 0) ? 0 : (x > 1) ? 1 : x; // clip to 0..1 range\n}\nfunction lab2xyz(t) {\n    return (t > t1) ? t * t * t : t2 * (t - t0);\n}\nfunction rgbToHcl(rgbColor) {\n    const [l, a, b, alpha] = rgbToLab(rgbColor);\n    const c = Math.sqrt(a * a + b * b);\n    const h = Math.round(c * 10000) ? constrainAngle(Math.atan2(b, a) * rad2deg) : NaN;\n    return [h, c, l, alpha];\n}\nfunction hclToRgb([h, c, l, alpha]) {\n    h = isNaN(h) ? 0 : h * deg2rad;\n    return labToRgb([l, Math.cos(h) * c, Math.sin(h) * c, alpha]);\n}\n// https://drafts.csswg.org/css-color-4/#hsl-to-rgb\nfunction hslToRgb([h, s, l, alpha]) {\n    h = constrainAngle(h);\n    s /= 100;\n    l /= 100;\n    function f(n) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n    return [f(0), f(8), f(4), alpha];\n}\n\n// polyfill for Object.hasOwn\nconst hasOwnProperty = Object.hasOwn ||\n    function hasOwnProperty(object, key) {\n        return Object.prototype.hasOwnProperty.call(object, key);\n    };\nfunction getOwn(object, key) {\n    return hasOwnProperty(object, key) ? object[key] : undefined;\n}\n\n/**\n * CSS color parser compliant with CSS Color 4 Specification.\n * Supports: named colors, `transparent` keyword, all rgb hex notations,\n * rgb(), rgba(), hsl() and hsla() functions.\n * Does not round the parsed values to integers from the range 0..255.\n *\n * Syntax:\n *\n * <alpha-value> = <number> | <percentage>\n *         <hue> = <number> | <angle>\n *\n *         rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? )\n *         rgb() = rgb( <percentage>#{3} , <alpha-value>? )    | rgb( <number>#{3} , <alpha-value>? )\n *\n *         hsl() = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? )\n *         hsl() = hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\n *\n * Caveats:\n *   - <angle> - <number> with optional `deg` suffix; `grad`, `rad`, `turn` are not supported\n *   - `none` keyword is not supported\n *   - comments inside rgb()/hsl() are not supported\n *   - legacy color syntax rgba() is supported with an identical grammar and behavior to rgb()\n *   - legacy color syntax hsla() is supported with an identical grammar and behavior to hsl()\n *\n * @param input CSS color string to parse.\n * @returns Color in sRGB color space, with `red`, `green`, `blue`\n * and `alpha` channels normalized to the range 0..1,\n * or `undefined` if the input is not a valid color string.\n */\nfunction parseCssColor(input) {\n    input = input.toLowerCase().trim();\n    if (input === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n    // 'white', 'black', 'blue'\n    const namedColorsMatch = getOwn(namedColors, input);\n    if (namedColorsMatch) {\n        const [r, g, b] = namedColorsMatch;\n        return [r / 255, g / 255, b / 255, 1];\n    }\n    // #f0c, #f0cf, #ff00cc, #ff00ccff\n    if (input.startsWith('#')) {\n        const hexRegexp = /^#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/;\n        if (hexRegexp.test(input)) {\n            const step = input.length < 6 ? 1 : 2;\n            let i = 1;\n            return [\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i + step) || 'ff'),\n            ];\n        }\n    }\n    // rgb(128 0 0), rgb(50% 0% 0%), rgba(255,0,255,0.6), rgb(255 0 255 / 60%), rgb(100% 0% 100% /.6)\n    if (input.startsWith('rgb')) {\n        const rgbRegExp = /^rgba?\\(\\s*([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n        const rgbMatch = input.match(rgbRegExp);\n        if (rgbMatch) {\n            const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n            r, // <numeric>\n            rp, // %         (optional)\n            f1, // ,         (optional)\n            g, // <numeric>\n            gp, // %         (optional)\n            f2, // ,         (optional)\n            b, // <numeric>\n            bp, // %         (optional)\n            f3, // ,|/       (optional)\n            a, // <numeric> (optional)\n            ap, // %         (optional)\n            ] = rgbMatch;\n            const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n            if (argFormat === '  ' ||\n                argFormat === '  /' ||\n                argFormat === ',,' ||\n                argFormat === ',,,') {\n                const valFormat = [rp, gp, bp].join('');\n                const maxValue = (valFormat === '%%%') ? 100 :\n                    (valFormat === '') ? 255 : 0;\n                if (maxValue) {\n                    const rgba = [\n                        clamp(+r / maxValue, 0, 1),\n                        clamp(+g / maxValue, 0, 1),\n                        clamp(+b / maxValue, 0, 1),\n                        a ? parseAlpha(+a, ap) : 1,\n                    ];\n                    if (validateNumbers(rgba)) {\n                        return rgba;\n                    }\n                    // invalid numbers\n                }\n                // values must be all numbers or all percentages\n            }\n            return; // comma optional syntax requires no commas at all\n        }\n    }\n    // hsl(120 50% 80%), hsla(120deg,50%,80%,.9), hsl(12e1 50% 80% / 90%)\n    const hslRegExp = /^hsla?\\(\\s*([\\de.+-]+)(?:deg)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n    const hslMatch = input.match(hslRegExp);\n    if (hslMatch) {\n        const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n        h, // <numeric>\n        f1, // ,         (optional)\n        s, // <numeric>\n        f2, // ,         (optional)\n        l, // <numeric>\n        f3, // ,|/       (optional)\n        a, // <numeric> (optional)\n        ap, // %         (optional)\n        ] = hslMatch;\n        const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n        if (argFormat === '  ' ||\n            argFormat === '  /' ||\n            argFormat === ',,' ||\n            argFormat === ',,,') {\n            const hsla = [\n                +h,\n                clamp(+s, 0, 100),\n                clamp(+l, 0, 100),\n                a ? parseAlpha(+a, ap) : 1,\n            ];\n            if (validateNumbers(hsla)) {\n                return hslToRgb(hsla);\n            }\n            // invalid numbers\n        }\n        // comma optional syntax requires no commas at all\n    }\n}\nfunction parseHex(hex) {\n    return parseInt(hex.padEnd(2, hex), 16) / 255;\n}\nfunction parseAlpha(a, asPercentage) {\n    return clamp(asPercentage ? (a / 100) : a, 0, 1);\n}\nfunction clamp(n, min, max) {\n    return Math.min(Math.max(min, n), max);\n}\n/**\n * The regular expression for numeric values is not super specific, and it may\n * happen that it will accept a value that is not a valid number. In order to\n * detect and eliminate such values this function exists.\n *\n * @param array Array of uncertain numbers.\n * @returns `true` if the specified array contains only valid numbers, `false` otherwise.\n */\nfunction validateNumbers(array) {\n    return !array.some(Number.isNaN);\n}\n/**\n * To generate:\n * - visit {@link https://www.w3.org/TR/css-color-4/#named-colors}\n * - run in the console:\n * @example\n * copy(`{\\n${[...document.querySelector('.named-color-table tbody').children].map((tr) => `${tr.cells[2].textContent.trim()}: [${tr.cells[4].textContent.trim().split(/\\s+/).join(', ')}],`).join('\\n')}\\n}`);\n */\nconst namedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n};\n\nfunction interpolateNumber(from, to, t) {\n    return from + t * (to - from);\n}\nfunction interpolateArray(from, to, t) {\n    return from.map((d, i) => {\n        return interpolateNumber(d, to[i], t);\n    });\n}\n\n/**\n * Checks whether the specified color space is one of the supported interpolation color spaces.\n *\n * @param colorSpace Color space key to verify.\n * @returns `true` if the specified color space is one of the supported\n * interpolation color spaces, `false` otherwise\n */\nfunction isSupportedInterpolationColorSpace(colorSpace) {\n    return colorSpace === 'rgb' || colorSpace === 'hcl' || colorSpace === 'lab';\n}\n/**\n * Color representation used by WebGL.\n * Defined in sRGB color space and pre-blended with alpha.\n * @private\n */\nclass Color {\n    /**\n     * @param r Red component premultiplied by `alpha` 0..1\n     * @param g Green component premultiplied by `alpha` 0..1\n     * @param b Blue component premultiplied by `alpha` 0..1\n     * @param [alpha=1] Alpha component 0..1\n     * @param [premultiplied=true] Whether the `r`, `g` and `b` values have already\n     * been multiplied by alpha. If `true` nothing happens if `false` then they will\n     * be multiplied automatically.\n     */\n    constructor(r, g, b, alpha = 1, premultiplied = true) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = alpha;\n        if (!premultiplied) {\n            this.r *= alpha;\n            this.g *= alpha;\n            this.b *= alpha;\n            if (!alpha) {\n                // alpha = 0 erases completely rgb channels. This behavior is not desirable\n                // if this particular color is later used in color interpolation.\n                // Because of that, a reference to original color is saved.\n                this.overwriteGetter('rgb', [r, g, b, alpha]);\n            }\n        }\n    }\n    /**\n     * Parses CSS color strings and converts colors to sRGB color space if needed.\n     * Officially supported color formats:\n     * - keyword, e.g. 'aquamarine' or 'steelblue'\n     * - hex (with 3, 4, 6 or 8 digits), e.g. '#f0f' or '#e9bebea9'\n     * - rgb and rgba, e.g. 'rgb(0,240,120)' or 'rgba(0%,94%,47%,0.1)' or 'rgb(0 240 120 / .3)'\n     * - hsl and hsla, e.g. 'hsl(0,0%,83%)' or 'hsla(0,0%,83%,.5)' or 'hsl(0 0% 83% / 20%)'\n     *\n     * @param input CSS color string to parse.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        // in zoom-and-property function input could be an instance of Color class\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return;\n        }\n        const rgba = parseCssColor(input);\n        if (rgba) {\n            return new Color(...rgba, false);\n        }\n    }\n    /**\n     * Used in color interpolation and by 'to-rgba' expression.\n     *\n     * @returns Gien color, with reversed alpha blending, in sRGB color space.\n     */\n    get rgb() {\n        const { r, g, b, a } = this;\n        const f = a || Infinity; // reverse alpha blending factor\n        return this.overwriteGetter('rgb', [r / f, g / f, b / f, a]);\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in HCL color space.\n     */\n    get hcl() {\n        return this.overwriteGetter('hcl', rgbToHcl(this.rgb));\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in LAB color space.\n     */\n    get lab() {\n        return this.overwriteGetter('lab', rgbToLab(this.rgb));\n    }\n    /**\n     * Lazy getter pattern. When getter is called for the first time lazy value\n     * is calculated and then overwrites getter function in given object instance.\n     *\n     * @example:\n     * const redColor = Color.parse('red');\n     * let x = redColor.hcl; // this will invoke `get hcl()`, which will calculate\n     * // the value of red in HCL space and invoke this `overwriteGetter` function\n     * // which in turn will set a field with a key 'hcl' in the `redColor` object.\n     * // In other words it will override `get hcl()` from its `Color` prototype\n     * // with its own property: hcl = [calculated red value in hcl].\n     * let y = redColor.hcl; // next call will no longer invoke getter but simply\n     * // return the previously calculated value\n     * x === y; // true - `x` is exactly the same object as `y`\n     *\n     * @param getterKey Getter key\n     * @param lazyValue Lazily calculated value to be memoized by current instance\n     * @private\n     */\n    overwriteGetter(getterKey, lazyValue) {\n        Object.defineProperty(this, getterKey, { value: lazyValue });\n        return lazyValue;\n    }\n    /**\n     * Used by 'to-string' expression.\n     *\n     * @returns Serialized color in format `rgba(r,g,b,a)`\n     * where r,g,b are numbers within 0..255 and alpha is number within 1..0\n     *\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.rgb;\n        return `rgba(${[r, g, b].map(n => Math.round(n * 255)).join(',')},${a})`;\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        switch (spaceKey) {\n            case 'rgb': {\n                const [r, g, b, alpha] = interpolateArray(from.rgb, to.rgb, t);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'hcl': {\n                const [hue0, chroma0, light0, alphaF] = from.hcl;\n                const [hue1, chroma1, light1, alphaT] = to.hcl;\n                // https://github.com/gka/chroma.js/blob/cd1b3c0926c7a85cbdc3b1453b3a94006de91a92/src/interpolator/_hsx.js\n                let hue, chroma;\n                if (!isNaN(hue0) && !isNaN(hue1)) {\n                    let dh = hue1 - hue0;\n                    if (hue1 > hue0 && dh > 180) {\n                        dh -= 360;\n                    }\n                    else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                        dh += 360;\n                    }\n                    hue = hue0 + t * dh;\n                }\n                else if (!isNaN(hue0)) {\n                    hue = hue0;\n                    if (light1 === 1 || light1 === 0)\n                        chroma = chroma0;\n                }\n                else if (!isNaN(hue1)) {\n                    hue = hue1;\n                    if (light0 === 1 || light0 === 0)\n                        chroma = chroma1;\n                }\n                else {\n                    hue = NaN;\n                }\n                const [r, g, b, alpha] = hclToRgb([\n                    hue,\n                    chroma !== null && chroma !== void 0 ? chroma : interpolateNumber(chroma0, chroma1, t),\n                    interpolateNumber(light0, light1, t),\n                    interpolateNumber(alphaF, alphaT, t),\n                ]);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'lab': {\n                const [r, g, b, alpha] = labToRgb(interpolateArray(from.lab, to.lab, t));\n                return new Color(r, g, b, alpha, false);\n            }\n        }\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], { sensitivity: this.sensitivity, usage: 'search' });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n\nconst VERTICAL_ALIGN_OPTIONS = ['bottom', 'center', 'top'];\nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor, verticalAlign) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n        this.verticalAlign = verticalAlign;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n            (section.image && section.image.name.length !== 0));\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        }\n        else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n}\n\n/**\n * A set of four numbers representing padding around a box. Create instances from\n * bare arrays or numeric values using the static method `Padding.parse`.\n * @private\n */\nclass Padding {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric padding values\n     * @param input A padding value\n     * @returns A `Padding` instance, or `undefined` if the input is not a valid padding value.\n     */\n    static parse(input) {\n        if (input instanceof Padding) {\n            return input;\n        }\n        // Backwards compatibility: bare number is treated the same as array with single value.\n        // Padding applies to all four sides.\n        if (typeof input === 'number') {\n            return new Padding([input, input, input, input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        if (input.length < 1 || input.length > 4) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        // Expand shortcut properties into explicit 4-sided values\n        switch (input.length) {\n            case 1:\n                input = [input[0], input[0], input[0], input[0]];\n                break;\n            case 2:\n                input = [input[0], input[1], input[0], input[1]];\n                break;\n            case 3:\n                input = [input[0], input[1], input[2], input[1]];\n                break;\n        }\n        return new Padding(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new Padding(interpolateArray(from.values, to.values, t));\n    }\n}\n\n/**\n * An array of numbers. Create instances from\n * bare arrays or numeric values using the static method `NumberArray.parse`.\n * @private\n */\nclass NumberArray {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric NumberArray values\n     * @param input A NumberArray value\n     * @returns A `NumberArray` instance, or `undefined` if the input is not a valid NumberArray value.\n     */\n    static parse(input) {\n        if (input instanceof NumberArray) {\n            return input;\n        }\n        // Backwards compatibility (e.g. hillshade-illumination-direction): bare number is treated the same as array with single value.\n        if (typeof input === 'number') {\n            return new NumberArray([input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        return new NumberArray(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new NumberArray(interpolateArray(from.values, to.values, t));\n    }\n}\n\n/**\n * An array of colors. Create instances from\n * bare arrays or strings using the static method `ColorArray.parse`.\n * @private\n */\nclass ColorArray {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * ColorArray values\n     * @param input A ColorArray value\n     * @returns A `ColorArray` instance, or `undefined` if the input is not a valid ColorArray value.\n     */\n    static parse(input) {\n        if (input instanceof ColorArray) {\n            return input;\n        }\n        // Backwards compatibility (e.g. hillshade-shadow-color): bare Color is treated the same as array with single value.\n        if (typeof input === 'string') {\n            const parsed_val = Color.parse(input);\n            if (!parsed_val) {\n                return undefined;\n            }\n            return new ColorArray([parsed_val]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        const colors = [];\n        for (const val of input) {\n            if (typeof val !== 'string') {\n                return undefined;\n            }\n            const parsed_val = Color.parse(val);\n            if (!parsed_val) {\n                return undefined;\n            }\n            colors.push(parsed_val);\n        }\n        return new ColorArray(colors);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        const colors = [];\n        if (from.values.length != to.values.length) {\n            throw new Error(`colorArray: Arrays have mismatched length (${from.values.length} vs. ${to.values.length}), cannot interpolate.`);\n        }\n        for (let i = 0; i < from.values.length; i++) {\n            colors.push(Color.interpolate(from.values[i], to.values[i], t, spaceKey));\n        }\n        return new ColorArray(colors);\n    }\n}\n\nclass RuntimeError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'RuntimeError';\n    }\n    toJSON() {\n        return this.message;\n    }\n}\n\n/** Set of valid anchor positions, as a set for validation */\nconst anchors = new Set(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'top-right', 'bottom-left', 'bottom-right']);\n/**\n * Utility class to assist managing values for text-variable-anchor-offset property. Create instances from\n * bare arrays using the static method `VariableAnchorOffsetCollection.parse`.\n * @private\n */\nclass VariableAnchorOffsetCollection {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    static parse(input) {\n        if (input instanceof VariableAnchorOffsetCollection) {\n            return input;\n        }\n        if (!Array.isArray(input) ||\n            input.length < 1 ||\n            input.length % 2 !== 0) {\n            return undefined;\n        }\n        for (let i = 0; i < input.length; i += 2) {\n            // Elements in even positions should be anchor positions; Elements in odd positions should be offset values\n            const anchorValue = input[i];\n            const offsetValue = input[i + 1];\n            if (typeof anchorValue !== 'string' || !anchors.has(anchorValue)) {\n                return undefined;\n            }\n            if (!Array.isArray(offsetValue) || offsetValue.length !== 2 || typeof offsetValue[0] !== 'number' || typeof offsetValue[1] !== 'number') {\n                return undefined;\n            }\n        }\n        return new VariableAnchorOffsetCollection(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        const fromValues = from.values;\n        const toValues = to.values;\n        if (fromValues.length !== toValues.length) {\n            throw new RuntimeError(`Cannot interpolate values of different length. from: ${from.toString()}, to: ${to.toString()}`);\n        }\n        const output = [];\n        for (let i = 0; i < fromValues.length; i += 2) {\n            // Anchor entries must match\n            if (fromValues[i] !== toValues[i]) {\n                throw new RuntimeError(`Cannot interpolate values containing mismatched anchors. from[${i}]: ${fromValues[i]}, to[${i}]: ${toValues[i]}`);\n            }\n            output.push(fromValues[i]);\n            // Interpolate the offset values for each anchor\n            const [fx, fy] = fromValues[i + 1];\n            const [tx, ty] = toValues[i + 1];\n            output.push([interpolateNumber(fx, tx, t), interpolateNumber(fy, ty, t)]);\n        }\n        return new VariableAnchorOffsetCollection(output);\n    }\n}\n\nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null; // treat empty values as no image\n        return new ResolvedImage({ name, available: false });\n    }\n}\n\nclass ProjectionDefinition {\n    constructor(from, to, transition) {\n        this.from = from;\n        this.to = to;\n        this.transition = transition;\n    }\n    static interpolate(from, to, t) {\n        return new ProjectionDefinition(from, to, t);\n    }\n    static parse(input) {\n        if (input instanceof ProjectionDefinition) {\n            return input;\n        }\n        if (Array.isArray(input) && input.length === 3 && typeof input[0] === 'string' && typeof input[1] === 'string' && typeof input[2] === 'number') {\n            return new ProjectionDefinition(input[0], input[1], input[2]);\n        }\n        if (typeof input === 'object' && typeof input.from === 'string' && typeof input.to === 'string' && typeof input.transition === 'number') {\n            return new ProjectionDefinition(input.from, input.to, input.transition);\n        }\n        if (typeof input === 'string') {\n            return new ProjectionDefinition(input, input, 1);\n        }\n        return undefined;\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1))) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null ||\n        typeof mixed === 'string' ||\n        typeof mixed === 'boolean' ||\n        typeof mixed === 'number' ||\n        mixed instanceof ProjectionDefinition ||\n        mixed instanceof Color ||\n        mixed instanceof Collator ||\n        mixed instanceof Formatted ||\n        mixed instanceof Padding ||\n        mixed instanceof NumberArray ||\n        mixed instanceof ColorArray ||\n        mixed instanceof VariableAnchorOffsetCollection ||\n        mixed instanceof ResolvedImage) {\n        return true;\n    }\n    else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    }\n    else if (typeof value === 'string') {\n        return StringType;\n    }\n    else if (typeof value === 'boolean') {\n        return BooleanType;\n    }\n    else if (typeof value === 'number') {\n        return NumberType;\n    }\n    else if (value instanceof Color) {\n        return ColorType;\n    }\n    else if (value instanceof ProjectionDefinition) {\n        return ProjectionDefinitionType;\n    }\n    else if (value instanceof Collator) {\n        return CollatorType;\n    }\n    else if (value instanceof Formatted) {\n        return FormattedType;\n    }\n    else if (value instanceof Padding) {\n        return PaddingType;\n    }\n    else if (value instanceof NumberArray) {\n        return NumberArrayType;\n    }\n    else if (value instanceof ColorArray) {\n        return ColorArrayType;\n    }\n    else if (value instanceof VariableAnchorOffsetCollection) {\n        return VariableAnchorOffsetCollectionType;\n    }\n    else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    }\n    else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            }\n            else if (itemType === t) {\n                continue;\n            }\n            else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array(itemType || ValueType, length);\n    }\n    else {\n        return ObjectType;\n    }\n}\nfunction valueToString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    }\n    else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    }\n    else if (value instanceof Color || value instanceof ProjectionDefinition || value instanceof Formatted || value instanceof Padding || value instanceof NumberArray || value instanceof ColorArray || value instanceof VariableAnchorOffsetCollection || value instanceof ResolvedImage) {\n        return value.toString();\n    }\n    else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (!isValue(args[1]))\n            return context.error('invalid value');\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst types$1 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$1) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$1[type];\n                i++;\n            }\n            else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array(itemType, N);\n        }\n        else {\n            if (!types$1[name])\n                throw new Error(`Types doesn't contain name = ${name}`);\n            type = types$1[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            }\n            else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${typeToString(this.type)}, but found ${typeToString(typeOf(value))} instead.`);\n            }\n        }\n        throw new Error();\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        const name = args[0];\n        if (!types[name])\n            throw new Error(`Can't parse ${name} as it is not part of the known types`);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.');\n        const type = types[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        switch (this.type.kind) {\n            case 'boolean':\n                return Boolean(this.args[0].evaluate(ctx));\n            case 'color': {\n                let input;\n                let error;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    error = null;\n                    if (input instanceof Color) {\n                        return input;\n                    }\n                    else if (typeof input === 'string') {\n                        const c = ctx.parseColor(input);\n                        if (c)\n                            return c;\n                    }\n                    else if (Array.isArray(input)) {\n                        if (input.length < 3 || input.length > 4) {\n                            error = `Invalid rgba value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                        }\n                        else {\n                            error = validateRGBA(input[0], input[1], input[2], input[3]);\n                        }\n                        if (!error) {\n                            return new Color(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                        }\n                    }\n                }\n                throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'padding': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const pad = Padding.parse(input);\n                    if (pad) {\n                        return pad;\n                    }\n                }\n                throw new RuntimeError(`Could not parse padding from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'numberArray': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const val = NumberArray.parse(input);\n                    if (val) {\n                        return val;\n                    }\n                }\n                throw new RuntimeError(`Could not parse numberArray from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'colorArray': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const val = ColorArray.parse(input);\n                    if (val) {\n                        return val;\n                    }\n                }\n                throw new RuntimeError(`Could not parse colorArray from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'variableAnchorOffsetCollection': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const coll = VariableAnchorOffsetCollection.parse(input);\n                    if (coll) {\n                        return coll;\n                    }\n                }\n                throw new RuntimeError(`Could not parse variableAnchorOffsetCollection from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'number': {\n                let value = null;\n                for (const arg of this.args) {\n                    value = arg.evaluate(ctx);\n                    if (value === null)\n                        return 0;\n                    const num = Number(value);\n                    if (isNaN(num))\n                        continue;\n                    return num;\n                }\n                throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n            }\n            case 'formatted':\n                // There is no explicit 'to-formatted' but this coercion can be implicitly\n                // created by properties that expect the 'formatted' type.\n                return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'resolvedImage':\n                return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'projectionDefinition':\n                return this.args[0].evaluate(ctx);\n            default:\n                return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = new Map();\n        this.availableImages = null;\n        this.canonical = null;\n    }\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache.get(input);\n        if (!cached) {\n            cached = Color.parse(input);\n            this._parseColorCache.set(input, cached);\n        }\n        return cached;\n    }\n}\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    constructor(registry, isConstantFunc, path = [], expectedType, scope = new Scope(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._isConstant = isConstantFunc;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            }\n            else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            }\n            else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].');\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    }\n                    else if (('projectionDefinition' === expected.kind && ['string', 'array'].includes(actual.kind)) ||\n                        ((['color', 'formatted', 'resolvedImage'].includes(expected.kind)) && ['value', 'string'].includes(actual.kind)) ||\n                        ((['padding', 'numberArray'].includes(expected.kind)) && ['value', 'number', 'array'].includes(actual.kind)) ||\n                        ('colorArray' === expected.kind && ['value', 'string', 'array'].includes(actual.kind)) ||\n                        ('variableAnchorOffsetCollection' === expected.kind && ['value', 'array'].includes(actual.kind))) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && this._isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    }\n                    catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.');\n        }\n        else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.');\n        }\n        else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, this._isConstant, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ExpressionParsingError(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     * @param expected The expected type\n     * @param t The actual type\n     * @returns null if `t` is a subtype of `expected`; otherwise returns an error message\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\n\nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([name, value]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n}\n\nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.');\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!haystack)\n            return false;\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        }\n        else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        let fromIndex;\n        if (this.fromIndex) {\n            fromIndex = this.fromIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(haystack, ['string'])) {\n            const rawIndex = haystack.indexOf(needle, fromIndex);\n            if (rawIndex === -1) {\n                return -1;\n            }\n            else {\n                // The index may be affected by surrogate pairs, so get the length of the preceding substring.\n                return [...haystack.slice(0, rawIndex)].length;\n            }\n        }\n        else if (isValidNativeType(haystack, ['array'])) {\n            return haystack.indexOf(needle, fromIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.');\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.');\n                }\n                else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n                }\n                else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.');\n                }\n                else if (!inputType) {\n                    inputType = typeOf(label);\n                }\n                else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.');\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([test, result]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (!outputType)\n            throw new Error('Can\\'t infer output type');\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${typeToString(input.type)} instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        }\n        else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        let endIndex;\n        if (this.endIndex) {\n            endIndex = this.endIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(input, ['string'])) {\n            // Indices may be affected by surrogate pairs.\n            return [...input].slice(beginIndex, endIndex).join('');\n        }\n        else if (isValidNativeType(input, ['array'])) {\n            return input.slice(beginIndex, endIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        }\n        else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        }\n        else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar unitbezier;\nvar hasRequiredUnitbezier;\n\nfunction requireUnitbezier () {\n\tif (hasRequiredUnitbezier) return unitbezier;\n\thasRequiredUnitbezier = 1;\n\n\tunitbezier = UnitBezier;\n\n\tfunction UnitBezier(p1x, p1y, p2x, p2y) {\n\t    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n\t    this.cx = 3.0 * p1x;\n\t    this.bx = 3.0 * (p2x - p1x) - this.cx;\n\t    this.ax = 1.0 - this.cx - this.bx;\n\n\t    this.cy = 3.0 * p1y;\n\t    this.by = 3.0 * (p2y - p1y) - this.cy;\n\t    this.ay = 1.0 - this.cy - this.by;\n\n\t    this.p1x = p1x;\n\t    this.p1y = p1y;\n\t    this.p2x = p2x;\n\t    this.p2y = p2y;\n\t}\n\n\tUnitBezier.prototype = {\n\t    sampleCurveX: function (t) {\n\t        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n\t        return ((this.ax * t + this.bx) * t + this.cx) * t;\n\t    },\n\n\t    sampleCurveY: function (t) {\n\t        return ((this.ay * t + this.by) * t + this.cy) * t;\n\t    },\n\n\t    sampleCurveDerivativeX: function (t) {\n\t        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n\t    },\n\n\t    solveCurveX: function (x, epsilon) {\n\t        if (epsilon === undefined) epsilon = 1e-6;\n\n\t        if (x < 0.0) return 0.0;\n\t        if (x > 1.0) return 1.0;\n\n\t        var t = x;\n\n\t        // First try a few iterations of Newton's method - normally very fast.\n\t        for (var i = 0; i < 8; i++) {\n\t            var x2 = this.sampleCurveX(t) - x;\n\t            if (Math.abs(x2) < epsilon) return t;\n\n\t            var d2 = this.sampleCurveDerivativeX(t);\n\t            if (Math.abs(d2) < 1e-6) break;\n\n\t            t = t - x2 / d2;\n\t        }\n\n\t        // Fall back to the bisection method for reliability.\n\t        var t0 = 0.0;\n\t        var t1 = 1.0;\n\t        t = x;\n\n\t        for (i = 0; i < 20; i++) {\n\t            x2 = this.sampleCurveX(t);\n\t            if (Math.abs(x2 - x) < epsilon) break;\n\n\t            if (x > x2) {\n\t                t0 = t;\n\t            } else {\n\t                t1 = t;\n\t            }\n\n\t            t = (t1 - t0) * 0.5 + t0;\n\t        }\n\n\t        return t;\n\t    },\n\n\t    solve: function (x, epsilon) {\n\t        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n\t    }\n\t};\n\treturn unitbezier;\n}\n\nvar unitbezierExports = requireUnitbezier();\nvar UnitBezier = /*@__PURE__*/getDefaultExportFromCjs(unitbezierExports);\n\nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        }\n        else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        }\n        else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        }\n        else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        }\n        else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        }\n        else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if ((operator === 'interpolate-hcl' || operator === 'interpolate-lab') && context.expectedType != ColorArrayType) {\n            outputType = ColorType;\n        }\n        else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        if (!verifyType(outputType, NumberType) &&\n            !verifyType(outputType, ProjectionDefinitionType) &&\n            !verifyType(outputType, ColorType) &&\n            !verifyType(outputType, PaddingType) &&\n            !verifyType(outputType, NumberArrayType) &&\n            !verifyType(outputType, ColorArrayType) &&\n            !verifyType(outputType, VariableAnchorOffsetCollectionType) &&\n            !verifyType(outputType, array(NumberType))) {\n            return context.error(`Type ${typeToString(outputType)} is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        switch (this.operator) {\n            case 'interpolate':\n                switch (this.type.kind) {\n                    case 'number':\n                        return interpolateNumber(outputLower, outputUpper, t);\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t);\n                    case 'padding':\n                        return Padding.interpolate(outputLower, outputUpper, t);\n                    case 'colorArray':\n                        return ColorArray.interpolate(outputLower, outputUpper, t);\n                    case 'numberArray':\n                        return NumberArray.interpolate(outputLower, outputUpper, t);\n                    case 'variableAnchorOffsetCollection':\n                        return VariableAnchorOffsetCollection.interpolate(outputLower, outputUpper, t);\n                    case 'array':\n                        return interpolateArray(outputLower, outputUpper, t);\n                    case 'projectionDefinition':\n                        return ProjectionDefinition.interpolate(outputLower, outputUpper, t);\n                }\n            case 'interpolate-hcl':\n                switch (this.type.kind) {\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t, 'hcl');\n                    case 'colorArray':\n                        return ColorArray.interpolate(outputLower, outputUpper, t, 'hcl');\n                }\n            case 'interpolate-lab':\n                switch (this.type.kind) {\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t, 'lab');\n                    case 'colorArray':\n                        return ColorArray.interpolate(outputLower, outputUpper, t, 'lab');\n                }\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nconst interpolateFactory = {\n    color: Color.interpolate,\n    number: interpolateNumber,\n    padding: Padding.interpolate,\n    numberArray: NumberArray.interpolate,\n    colorArray: ColorArray.interpolate,\n    variableAnchorOffsetCollection: VariableAnchorOffsetCollection.interpolate,\n    array: interpolateArray\n};\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        if (!outputType)\n            throw new Error('No output type');\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    }\n    else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.');\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${typeToString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${typeToString(rhs.type)}'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${typeToString(lhs.type)}' and '${typeToString(rhs.type)}'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                }\n                else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value') {\n                    return context.error('Cannot use collator to compare non-string types.');\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error('Expected one argument.');\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.');\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n}\n\nclass NumberFormat {\n    constructor(number, locale, currency, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.');\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.');\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency ? 'currency' : 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error('First argument must be an image or text section.');\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                let verticalAlign = null;\n                if (arg['vertical-align']) {\n                    if (typeof arg['vertical-align'] === 'string' && !VERTICAL_ALIGN_OPTIONS.includes(arg['vertical-align'])) {\n                        return context.error(`'vertical-align' must be one of: 'bottom', 'center', 'top' but found '${arg['vertical-align']}' instead.`);\n                    }\n                    verticalAlign = context.parse(arg['vertical-align'], 1, StringType);\n                    if (!verticalAlign)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n                lastExpression.verticalAlign = verticalAlign;\n            }\n            else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.');\n                nextTokenMayBeObject = true;\n                sections.push({ content, scale: null, font: null, textColor: null, verticalAlign: null });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n            }\n            return new FormattedSection(valueToString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n            if (section.verticalAlign) {\n                fn(section.verticalAlign);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n}\n\nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.');\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error('No image name provided.');\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n}\n\nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${typeToString(input.type)} instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            // The length may be affected by surrogate pairs.\n            return [...input].length;\n        }\n        else if (Array.isArray(input)) {\n            return input.length;\n        }\n        else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst EXTENT = 8192;\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction getLngLatFromTileCoord(coord, canonical) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord[0] / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord[1] / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorXfromLng(x), latFromMercatorY(y)];\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction lngFromMercatorXfromLng(mercatorX) {\n    return mercatorX * 360 - 180;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\nfunction latFromMercatorY(mercatorY) {\n    return 360 / Math.PI * Math.atan(Math.exp((180 - mercatorY * 360) * Math.PI / 180)) - 90;\n}\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\nfunction pointOnBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction segmentIntersectSegment(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (segmentIntersectSegment(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings, trueIfOnBoundary = false) {\n    let inside = false;\n    for (const ring of rings) {\n        for (let j = 0; j < ring.length - 1; j++) {\n            if (pointOnBoundary(point, ring[j], ring[j + 1]))\n                return trueIfOnBoundary;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (const polygon of polygons) {\n        if (pointWithinPolygon(point, polygon))\n            return true;\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (const point of line) {\n        if (!pointWithinPolygon(point, polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (const polygon of polygons) {\n        if (lineStringWithinPolygon(line, polygon))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 = (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0))\n        return true;\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                const polygonsCoords = [];\n                for (const polygon of geojson.features) {\n                    const { type, coordinates } = polygon.geometry;\n                    if (type === 'Polygon') {\n                        polygonsCoords.push(coordinates);\n                    }\n                    if (type === 'MultiPolygon') {\n                        polygonsCoords.push(...coordinates);\n                    }\n                }\n                if (polygonsCoords.length) {\n                    const multipolygonWrapper = {\n                        type: 'MultiPolygon',\n                        coordinates: polygonsCoords\n                    };\n                    return new Within(geojson, multipolygonWrapper);\n                }\n            }\n            else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            }\n            else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nfunction quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings - the rings to classify\n * @param maxRings - the maximum number of rings to include in a polygon, use 0 to include all rings\n * @returns an array of polygons with internal rings as holes\n */\nfunction classifyRings(rings, maxRings) {\n    const len = rings.length;\n    if (len <= 1)\n        return [rings];\n    const polygons = [];\n    let polygon;\n    let ccw;\n    for (const ring of rings) {\n        const area = calculateSignedArea(ring);\n        if (area === 0)\n            continue;\n        ring.area = Math.abs(area);\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon)\n                polygons.push(polygon);\n            polygon = [ring];\n        }\n        else {\n            polygon.push(ring);\n        }\n    }\n    if (polygon)\n        polygons.push(polygon);\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings)\n                continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n    return polygons;\n}\nfunction compareAreas(a, b) {\n    return b.area - a.area;\n}\n/**\n * Returns the signed area for the polygon ring.  Positive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n *\n * @param ring - Exterior or interior ring\n * @returns Signed area\n */\nfunction calculateSignedArea(ring) {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n// This is taken from https://github.com/mapbox/cheap-ruler/ in order to take only the relevant parts\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\nclass CheapRuler {\n    constructor(lat) {\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * 1000;\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat; // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridional radius of curvature\n    }\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param a - point [longitude, latitude]\n     * @param b - point [longitude, latitude]\n     * @returns distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = this.wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param line - an array of points that form the line\n     * @param p - point [longitude, latitude]\n     * @returns the nearest point, its index in the array and the proportion along the line\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX, minY, minI, minT;\n        for (let i = 0; i < line.length - 1; i++) {\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = this.wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n            if (dx !== 0 || dy !== 0) {\n                t = (this.wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n                }\n                else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n            dx = this.wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n    wrap(deg) {\n        while (deg < -180)\n            deg += 360;\n        while (deg > 180)\n            deg -= 360;\n        return deg;\n    }\n}\n\nconst MinPointsSize = 100;\nconst MinLinePointsSize = 50;\nfunction compareDistPair(a, b) {\n    return b[0] - a[0];\n}\nfunction getRangeSize(range) {\n    return range[1] - range[0] + 1;\n}\nfunction isRangeSafe(range, threshold) {\n    return range[1] >= range[0] && range[1] < threshold;\n}\nfunction splitRange(range, isLine) {\n    if (range[0] > range[1]) {\n        return [null, null];\n    }\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        return [[range[0], range[0] + size1],\n            [range[0] + size1, range[1]]];\n    }\n    if (size === 1) {\n        return [range, null];\n    }\n    const size1 = Math.floor(size / 2) - 1;\n    return [[range[0], range[0] + size1],\n        [range[0] + size1 + 1, range[1]]];\n}\nfunction getBBox(coords, range) {\n    if (!isRangeSafe(range, coords.length)) {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, coords[i]);\n    }\n    return bbox;\n}\nfunction getPolygonBBox(polygon) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const ring of polygon) {\n        for (const coord of ring) {\n            updateBBox(bbox, coord);\n        }\n    }\n    return bbox;\n}\nfunction isValidBBox(bbox) {\n    return bbox[0] !== -Infinity && bbox[1] !== -Infinity && bbox[2] !== Infinity && bbox[3] !== Infinity;\n}\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0}\n// and {dx, dy} to calculate the distance. Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1, bbox2, ruler) {\n    if (!isValidBBox(bbox1) || !isValidBBox(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\nfunction pointToLineDistance(point, line, ruler) {\n    const nearestPoint = ruler.pointOnLine(line, point);\n    return ruler.distance(point, nearestPoint.point);\n}\nfunction segmentToSegmentDistance(p1, p2, q1, q2, ruler) {\n    const dist1 = Math.min(pointToLineDistance(p1, [q1, q2], ruler), pointToLineDistance(p2, [q1, q2], ruler));\n    const dist2 = Math.min(pointToLineDistance(q1, [p1, p2], ruler), pointToLineDistance(q2, [p1, p2], ruler));\n    return Math.min(dist1, dist2);\n}\nfunction lineToLineDistance(line1, range1, line2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, line1.length) && isRangeSafe(range2, line2.length);\n    if (!rangeSafe) {\n        return Infinity;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        const p1 = line1[i];\n        const p2 = line1[i + 1];\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            const q1 = line2[j];\n            const q2 = line2[j + 1];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return 0.0;\n            }\n            dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n        }\n    }\n    return dist;\n}\nfunction pointsToPointsDistance(points1, range1, points2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, points1.length) && isRangeSafe(range2, points2.length);\n    if (!rangeSafe) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            dist = Math.min(dist, ruler.distance(points1[i], points2[j]));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction pointToPolygonDistance(point, polygon, ruler) {\n    if (pointWithinPolygon(point, polygon, true)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const front = ring[0];\n        const back = ring[ring.length - 1];\n        if (front !== back) {\n            dist = Math.min(dist, pointToLineDistance(point, [back, front], ruler));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n        const nearestPoint = ruler.pointOnLine(ring, point);\n        dist = Math.min(dist, ruler.distance(point, nearestPoint.point));\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineToPolygonDistance(line, range, polygon, ruler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true)) {\n            return 0.0;\n        }\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        const p1 = line[i];\n        const p2 = line[i + 1];\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                const q1 = ring[k];\n                const q2 = ring[j];\n                if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                    return 0.0;\n                }\n                dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n            }\n        }\n    }\n    return dist;\n}\nfunction polygonIntersect(poly1, poly2) {\n    for (const ring of poly1) {\n        for (const point of ring) {\n            if (pointWithinPolygon(point, poly2, true)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction polygonToPolygonDistance(polygon1, polygon2, ruler, currentMiniDist = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) {\n            return 0.0;\n        }\n    }\n    else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            const p1 = ring1[l];\n            const p2 = ring1[i];\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    const q1 = ring2[k];\n                    const q2 = ring2[j];\n                    if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                        return 0.0;\n                    }\n                    dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\nfunction updateQueue(distQueue, miniDist, ruler, points, polyBBox, rangeA) {\n    if (!rangeA) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(points, rangeA), polyBBox, ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, rangeA, [0, 0]]);\n    }\n}\nfunction updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, range1, range2) {\n    if (!range1 || !range2) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, range1), getBBox(pointSet2, range2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, range1, range2]);\n    }\n}\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force\n// O(n*n) Most of the time, use index for in-place processing.\nfunction pointsToPolygonDistance(points, isLine, polygon, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(ruler.distance(points[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, points.length - 1], [0, 0]]], compareDistPair);\n    const polyBBox = getPolygonBBox(polygon);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const range = distPair[1];\n        // In case the set size are relatively small, we could use brute-force directly\n        const threshold = isLine ? MinLinePointsSize : MinPointsSize;\n        if (getRangeSize(range) <= threshold) {\n            if (!isRangeSafe(range, points.length)) {\n                return NaN;\n            }\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(points, range, polygon, ruler);\n                if (isNaN(tempDist) || tempDist === 0.0) {\n                    return tempDist;\n                }\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(points[i], polygon, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return 0.0;\n                    }\n                }\n            }\n        }\n        else {\n            const newRangesA = splitRange(range, isLine);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[0]);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointSetToPointSetDistance(pointSet1, isLine1, pointSet2, isLine2, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, pointSet1.length - 1], [0, pointSet2.length - 1]]], compareDistPair);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const rangeA = distPair[1];\n        const rangeB = distPair[2];\n        const threshold1 = isLine1 ? MinLinePointsSize : MinPointsSize;\n        const threshold2 = isLine2 ? MinLinePointsSize : MinPointsSize;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= threshold1 && getRangeSize(rangeB) <= threshold2) {\n            if (!isRangeSafe(rangeA, pointSet1.length) && isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            let tempDist;\n            if (isLine1 && isLine2) {\n                tempDist = lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else if (isLine1 && !isLine2) {\n                const sublibe = pointSet1.slice(rangeA[0], rangeA[1] + 1);\n                for (let i = rangeB[0]; i <= rangeB[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet2[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else if (!isLine1 && isLine2) {\n                const sublibe = pointSet2.slice(rangeB[0], rangeB[1] + 1);\n                for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet1[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else {\n                tempDist = pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n        }\n        else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointToGeometryDistance(ctx, geometries) {\n    const tilePoints = ctx.geometry();\n    const pointPosition = tilePoints.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tilePoints.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(pointPosition[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(pointPosition, false, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineStringToGeometryDistance(ctx, geometries) {\n    const tileLine = ctx.geometry();\n    const linePositions = tileLine.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tileLine.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(linePositions[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(linePositions, true, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction polygonToGeometryDistance(ctx, geometries) {\n    const tilePolygon = ctx.geometry();\n    if (tilePolygon.length === 0 || tilePolygon[0].length === 0) {\n        return NaN;\n    }\n    const polygons = classifyRings(tilePolygon, 0).map(polygon => {\n        return polygon.map(ring => {\n            return ring.map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n        });\n    });\n    const ruler = new CheapRuler(polygons[0][0][0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        for (const polygon of polygons) {\n            switch (geometry.type) {\n                case 'Point':\n                    dist = Math.min(dist, pointsToPolygonDistance([geometry.coordinates], false, polygon, ruler, dist));\n                    break;\n                case 'LineString':\n                    dist = Math.min(dist, pointsToPolygonDistance(geometry.coordinates, true, polygon, ruler, dist));\n                    break;\n                case 'Polygon':\n                    dist = Math.min(dist, polygonToPolygonDistance(polygon, geometry.coordinates, ruler, dist));\n                    break;\n            }\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction toSimpleGeometry(geometry) {\n    if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.map(polygon => {\n            return {\n                type: 'Polygon',\n                coordinates: polygon\n            };\n        });\n    }\n    if (geometry.type === 'MultiLineString') {\n        return geometry.coordinates.map(lineString => {\n            return {\n                type: 'LineString',\n                coordinates: lineString\n            };\n        });\n    }\n    if (geometry.type === 'MultiPoint') {\n        return geometry.coordinates.map(point => {\n            return {\n                type: 'Point',\n                coordinates: point\n            };\n        });\n    }\n    return [geometry];\n}\nclass Distance {\n    constructor(geojson, geometries) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'distance' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                return new Distance(geojson, geojson.features.map(feature => toSimpleGeometry(feature.geometry)).flat());\n            }\n            else if (geojson.type === 'Feature') {\n                return new Distance(geojson, toSimpleGeometry(geojson.geometry));\n            }\n            else if ('type' in geojson && 'coordinates' in geojson) {\n                return new Distance(geojson, toSimpleGeometry(geojson));\n            }\n        }\n        return context.error('\\'distance\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return lineStringToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'Polygon') {\n                return polygonToGeometryDistance(ctx, this.geometries);\n            }\n        }\n        return NaN;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass GlobalState {\n    constructor(key) {\n        this.type = ValueType;\n        this.key = key;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        }\n        const key = args[1];\n        if (key === undefined || key === null) {\n            return context.error('Global state property must be defined.');\n        }\n        if (typeof key !== 'string') {\n            return context.error(`Global state property must be string, but found ${typeof args[1]} instead.`);\n        }\n        return new GlobalState(key);\n    }\n    evaluate(ctx) {\n        var _a;\n        const globalState = (_a = ctx.globals) === null || _a === void 0 ? void 0 : _a.globalState;\n        if (!globalState || Object.keys(globalState).length === 0)\n            return null;\n        return getOwn(globalState, this.key);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst expressions$1 = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance,\n    'global-state': GlobalState\n};\n\nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => (!Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, isExpressionConstant, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        }\n        else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(typeToString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError(error);\n    return new Color(r / 255, g / 255, b / 255, alpha, false);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression.register(expressions$1, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            const [r, g, b, a] = v.evaluate(ctx).rgb;\n            return [r * 255, g * 255, b * 255, a];\n        },\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'elevation': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.elevation || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(typeToString).join(', ')})`;\n    }\n    else {\n        return `(${typeToString(signature.type)}...)`;\n    }\n}\nfunction isExpressionConstant(expression) {\n    if (expression instanceof Var) {\n        return isExpressionConstant(expression.boundExpression);\n    }\n    else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    }\n    else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n    else if (expression instanceof Within) {\n        return false;\n    }\n    else if (expression instanceof Distance) {\n        return false;\n    }\n    else if (expression instanceof GlobalState) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isExpressionConstant(child);\n        }\n        else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'elevation', 'line-progress', 'accumulated', 'is-supported-script']);\n}\nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'feature-state') {\n            return false;\n        }\n        else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id') {\n            return false;\n        }\n        else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within) {\n        return false;\n    }\n    if (e instanceof Distance) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\nfunction success(value) {\n    return { result: 'success', value };\n}\nfunction error(value) {\n    return { result: 'error', value };\n}\n\nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    }\n    else if (val instanceof String) {\n        return 'string';\n    }\n    else if (val instanceof Boolean) {\n        return 'boolean';\n    }\n    else if (Array.isArray(val)) {\n        return 'array';\n    }\n    else if (val === null) {\n        return 'null';\n    }\n    else {\n        return typeof val;\n    }\n}\n\nfunction isFunction$1(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value) && typeOf(value) === ObjectType;\n}\nfunction identityFunction(x) {\n    return x;\n}\nfunction getParseFunction(propertySpec) {\n    switch (propertySpec.type) {\n        case 'color':\n            return Color.parse;\n        case 'padding':\n            return Padding.parse;\n        case 'numberArray':\n            return NumberArray.parse;\n        case 'colorArray':\n            return ColorArray.parse;\n        default:\n            return null;\n    }\n}\nfunction getInnerFunction(type) {\n    switch (type) {\n        case 'exponential':\n            return evaluateExponentialFunction;\n        case 'interval':\n            return evaluateIntervalFunction;\n        case 'categorical':\n            return evaluateCategoricalFunction;\n        case 'identity':\n            return evaluateIdentityFunction;\n        default:\n            throw new Error(`Unknown function type \"${type}\"`);\n    }\n}\nfunction createFunction(parameters, propertySpec) {\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n    const parseFn = getParseFunction(propertySpec);\n    if (parseFn) {\n        parameters = extendBy({}, parameters);\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], parseFn(stop[1])];\n            });\n        }\n        if (parameters.default) {\n            parameters.default = parseFn(parameters.default);\n        }\n        else {\n            parameters.default = parseFn(propertySpec.default);\n        }\n    }\n    if (parameters.colorSpace && !isSupportedInterpolationColorSpace(parameters.colorSpace)) {\n        throw new Error(`Unknown color space: \"${parameters.colorSpace}\"`);\n    }\n    const innerFun = getInnerFunction(type);\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'categorical') {\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n    }\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n        const interpolationType = { name: 'linear' };\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({ zoom }, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    }\n    else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            { name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1 } : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({ zoom }) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    }\n    else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce$1(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\nfunction coalesce$1(a, b, c) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n    if (c !== undefined)\n        return c;\n}\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce$1(evaluated, parameters.default, propertySpec.default);\n}\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    return parameters.stops[index][1];\n}\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(input, base, parameters.stops[index][0], parameters.stops[index + 1][0]);\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    const interp = interpolateFactory[propertySpec.type] || identityFunction;\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t, parameters.colorSpace);\n            }\n        };\n    }\n    return interp(outputLower, outputUpper, t, parameters.colorSpace);\n}\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    switch (propertySpec.type) {\n        case 'color':\n            input = Color.parse(input);\n            break;\n        case 'formatted':\n            input = Formatted.fromString(input.toString());\n            break;\n        case 'resolvedImage':\n            input = ResolvedImage.fromString(input.toString());\n            break;\n        case 'padding':\n            input = Padding.parse(input);\n            break;\n        case 'colorArray':\n            input = ColorArray.parse(input);\n            break;\n        case 'numberArray':\n            input = NumberArray.parse(input);\n            break;\n        default:\n            if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n                input = undefined;\n            }\n    }\n    return coalesce$1(input, parameters.default, propertySpec.default);\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        }\n        catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in expressions$1;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext(expressions$1, isExpressionConstant, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n        this.globalStateRefs = findGlobalStateRefs(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.globalStateRefs = findGlobalStateRefs(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isZoomExpression(expression) {\n    return expression._styleExpression !== undefined;\n}\nfunction createPropertyExpression(expressionInput, propertySpec) {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstantResult = isFeatureConstant(parsed);\n    if (!isFeatureConstantResult && !supportsPropertyExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    }\n    else if (zoomCurve instanceof ExpressionParsingError) {\n        return error([zoomCurve]);\n    }\n    else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ExpressionParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstantResult ?\n            new ZoomConstantExpression('constant', expression.value) :\n            new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstantResult ?\n        new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) :\n        new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nclass StylePropertyFunction {\n    constructor(parameters, specification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extendBy(this, createFunction(this._parameters, this._specification));\n    }\n    static deserialize(serialized) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n    static serialize(input) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\nfunction normalizePropertyExpression(value, specification) {\n    if (isFunction$1(value)) {\n        return new StylePropertyFunction(value, specification);\n    }\n    else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n    }\n    else {\n        let constant = value;\n        if (specification.type === 'color' && typeof value === 'string') {\n            constant = Color.parse(value);\n        }\n        else if (specification.type === 'padding' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = Padding.parse(value);\n        }\n        else if (specification.type === 'numberArray' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = NumberArray.parse(value);\n        }\n        else if (specification.type === 'colorArray' && (typeof value === 'string' || Array.isArray(value))) {\n            constant = ColorArray.parse(value);\n        }\n        else if (specification.type === 'variableAnchorOffsetCollection' && Array.isArray(value)) {\n            constant = VariableAnchorOffsetCollection.parse(value);\n        }\n        else if (specification.type === 'projectionDefinition' && typeof value === 'string') {\n            constant = ProjectionDefinition.parse(value);\n        }\n        return {\n            globalStateRefs: new Set(),\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n    }\n    else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    }\n    else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ExpressionParsingError) {\n        return result;\n    }\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ExpressionParsingError) {\n            result = childResult;\n        }\n        else if (!result && childResult) {\n            result = new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        }\n        else if (result && childResult && result !== childResult) {\n            result = new ExpressionParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction findGlobalStateRefs(expression, results = new Set()) {\n    if (expression instanceof GlobalState) {\n        results.add(expression.key);\n    }\n    expression.eachChild(childExpression => {\n        findGlobalStateRefs(childExpression, results);\n    });\n    return results;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        padding: PaddingType,\n        numberArray: NumberArrayType,\n        colorArray: ColorArrayType,\n        projectionDefinition: ProjectionDefinitionType,\n        resolvedImage: ResolvedImageType,\n        variableAnchorOffsetCollection: VariableAnchorOffsetCollectionType\n    };\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && isFunction$1(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    }\n    switch (spec.type) {\n        case 'color':\n            return Color.parse(spec.default) || null;\n        case 'padding':\n            return Padding.parse(spec.default) || null;\n        case 'numberArray':\n            return NumberArray.parse(spec.default) || null;\n        case 'colorArray':\n            return ColorArray.parse(spec.default) || null;\n        case 'variableAnchorOffsetCollection':\n            return VariableAnchorOffsetCollection.parse(spec.default) || null;\n        case 'projectionDefinition':\n            return ProjectionDefinition.parse(spec.default) || null;\n        default:\n            return (spec.default === undefined ? null : spec.default);\n    }\n}\n\nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return true;\n    }\n}\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter MapLibre filter\n * @returns {Function} filter-evaluating function\n */\nfunction featureFilter(filter) {\n    if (filter === null || filter === undefined) {\n        return { filter: () => true, needGeometry: false, getGlobalStateRefs: () => new Set() };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter$1(filter);\n    }\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    }\n    else {\n        const needGeometry = geometryNeeded(filter);\n        return {\n            filter: (globalProperties, feature, canonical) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry,\n            getGlobalStateRefs: () => findGlobalStateRefs(compiled.value.expression)\n        };\n    }\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within' || filter[0] === 'distance')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter$1(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    const converted = op === '==' ? convertComparisonOp$1(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp$1(filter[1], filter[2], '==')) :\n            op === '<' ||\n                op === '>' ||\n                op === '<=' ||\n                op === '>=' ? convertComparisonOp$1(filter[1], filter[2], op) :\n                op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                    op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter$1)) :\n                        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter$1).map(convertNegation)) :\n                            op === 'in' ? convertInOp$1(filter[1], filter.slice(2)) :\n                                op === '!in' ? convertNegation(convertInOp$1(filter[1], filter.slice(2))) :\n                                    op === 'has' ? convertHasOp$1(filter[1]) :\n                                        op === '!has' ? convertNegation(convertHasOp$1(filter[1])) :\n                                            true;\n    return converted;\n}\nfunction convertComparisonOp$1(property, value, op) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter$1));\n}\nfunction convertInOp$1(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            }\n            else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\nfunction convertHasOp$1(property) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\nfunction convertNegation(filter) {\n    return ['!', filter];\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evaluation error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction convertFilter(filter, expectedTypes = {}) {\n    if (isExpressionFilter(filter))\n        return filter;\n    if (!filter)\n        return true;\n    const legacyFilter = filter;\n    const legacyOp = legacyFilter[0];\n    if (filter.length <= 1)\n        return (legacyOp !== 'any');\n    switch (legacyOp) {\n        case '==':\n        case '!=':\n        case '<':\n        case '>':\n        case '<=':\n        case '>=': {\n            const [, property, value] = filter;\n            return convertComparisonOp(property, value, legacyOp, expectedTypes);\n        }\n        case 'any': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map((f) => {\n                const types = {};\n                const child = convertFilter(f, types);\n                const typechecks = runtimeTypeChecks(types);\n                return typechecks === true ? child : ['case', typechecks, child, false];\n            });\n            return ['any', ...children];\n        }\n        case 'all': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map(f => convertFilter(f, expectedTypes));\n            return children.length > 1 ? ['all', ...children] : children[0];\n        }\n        case 'none': {\n            const [, ...conditions] = legacyFilter;\n            return ['!', convertFilter(['any', ...conditions], {})];\n        }\n        case 'in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values);\n        }\n        case '!in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values, true);\n        }\n        case 'has':\n            return convertHasOp(legacyFilter[1]);\n        case '!has':\n            return ['!', convertHasOp(legacyFilter[1])];\n        default:\n            return true;\n    }\n}\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0)\n        return true;\n    if (conditions.length === 1)\n        return conditions[0];\n    return ['all', ...conditions];\n}\nfunction convertComparisonOp(property, value, op, expectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    if (expectedTypes && value !== null) {\n        const type = typeof value;\n        expectedTypes[property] = type;\n    }\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    }\n    else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n    return [op, get, value];\n}\nfunction convertInOp(property, values, negate = false) {\n    if (values.length === 0)\n        return negate;\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n    if (negate) {\n        return ['all', ...values.map(v => ['!=', get, v])];\n    }\n    else {\n        return ['any', ...values.map(v => ['==', get, v])];\n    }\n}\nfunction convertHasOp(property) {\n    if (property === '$type') {\n        return true;\n    }\n    else if (property === '$id') {\n        return ['!=', ['id'], null];\n    }\n    else {\n        return ['has', property];\n    }\n}\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    }\n    else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    }\n    else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = ['get', parameters.property];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    }\n    else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    }\n    else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    }\n    else {\n        const expression = ['step', ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n    }\n    else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    }\n    else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push(['get', match[1]]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    }\n    else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n    return result;\n}\n\nfunction getPropertyReference(propertyName) {\n    for (let i = 0; i < v8Spec.layout.length; i++) {\n        for (const key in v8Spec[v8Spec.layout[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.layout[i]][key];\n        }\n    }\n    for (let i = 0; i < v8Spec.paint.length; i++) {\n        for (const key in v8Spec[v8Spec.paint[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.paint[i]][key];\n        }\n    }\n    return null;\n}\nfunction eachSource(style, callback) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\nfunction eachLayer(style, callback) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\nfunction eachProperty(style, options, callback) {\n    function inner(layer, propertyType) {\n        const properties = layer[propertyType];\n        if (!properties)\n            return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n\nfunction stringify$1(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify$1(val)},`;\n        }\n        return `${str}]`;\n    }\n    const keys = Object.keys(obj).sort();\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify$1(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify$1(layer[k])}`;\n    }\n    return key;\n}\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @param {Object} [cachedKeys] - an object to keep already calculated keys.\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers, cachedKeys) {\n    const groups = {};\n    for (let i = 0; i < layers.length; i++) {\n        const k = (cachedKeys && cachedKeys[layers[i].id]) || getKey(layers[i]);\n        // update the cache if there is one\n        if (cachedKeys)\n            cachedKeys[layers[i].id] = k;\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n    const result = [];\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n    return result;\n}\n\nfunction emptyStyle() {\n    const style = {};\n    const version = v8Spec['$version'];\n    for (const styleKey in v8Spec['$root']) {\n        const specification = v8Spec['$root'][styleKey];\n        if (specification.required) {\n            let value = null;\n            if (styleKey === 'version') {\n                value = version;\n            }\n            else {\n                if (specification.type === 'array') {\n                    value = [];\n                }\n                else {\n                    value = {};\n                }\n            }\n            if (value != null) {\n                style[styleKey] = value;\n            }\n        }\n    }\n    return style;\n}\n\nfunction validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    }\n    else {\n        return [];\n    }\n}\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    }\n    else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nfunction validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const validateSpec = options.validateSpec;\n    let errors = [];\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        // objectKey comes from the user controlled style input, so elementSpecKey may be e.g. \"__proto__\"\n        const elementSpec = getOwn(elementSpecs, elementSpecKey) || elementSpecs['*'];\n        let validateElement;\n        if (getOwn(elementValidators, elementSpecKey)) {\n            validateElement = elementValidators[elementSpecKey];\n        }\n        else if (getOwn(elementSpecs, elementSpecKey)) {\n            validateElement = validateSpec;\n        }\n        else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        }\n        else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n        else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey,\n            validateSpec,\n        }, object));\n    }\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n    return errors;\n}\n\nfunction validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validateSpec;\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            validateSpec: options.validateSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n\nfunction validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n    return [];\n}\n\nfunction validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        validateSpec: options.validateSpec,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        }\n        else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n    return errors;\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n        let errors = [];\n        const value = options.value;\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n        return errors;\n    }\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        }\n        else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n        return errors.concat(options.validateSpec({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n        const reportValue = options.value !== null ? options.value : stop;\n        if (!stopKeyType) {\n            stopKeyType = type;\n        }\n        else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        }\n        else {\n            previousStopDomainValue = value;\n        }\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        }\n        else {\n            stopDomainValues[value] = true;\n        }\n        return [];\n    }\n    function validateFunctionDefault(options) {\n        return options.validateSpec({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n\nfunction validateExpression(options) {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n    const expressionObj = expression.value.expression || expression.value._styleExpression.expression;\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n    return [];\n}\n\nfunction validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n    if (!Color.parse(String(value))) { // cast String object to string primitive\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n    return [];\n}\n\nfunction validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n\nfunction validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extendBy({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    }\n    else {\n        return validateNonExpressionFilter(options);\n    }\n}\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n    const styleSpec = options.styleSpec;\n    let type;\n    let errors = [];\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                }\n                else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n\nfunction validateProperty(options, propertyType) {\n    const key = options.key;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n    if (!layerSpec)\n        return [];\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validateSpec({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(key, value, `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n    const errors = [];\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction$1(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n    return errors.concat(validateSpec({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n\nfunction validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n\nfunction validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n\nfunction validateLayer(options) {\n    let errors = [];\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    if (getType(layer) !== 'object') {\n        return [new ValidationError(key, layer, `object expected, ${getType(layer)} found`)];\n    }\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n        let parent;\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref)\n                parent = layer;\n        });\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        }\n        else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        }\n        else {\n            type = unbundle(parent.type);\n        }\n    }\n    else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        }\n        else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            }\n            else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'color-relief') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            }\n            else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            }\n            else if (sourceType === 'raster-dem' && (type !== 'hillshade' && type !== 'color-relief')) {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\' or \\'color-relief\\'.'));\n            }\n            else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        validateSpec: options.validateSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return options.validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n    return errors;\n}\n\nfunction validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateRasterDEMSource(options) {\n    var _a;\n    const sourceName = (_a = options.sourceName) !== null && _a !== void 0 ? _a : '';\n    const rasterDEM = options.value;\n    const styleSpec = options.styleSpec;\n    const rasterDEMSpec = styleSpec.source_raster_dem;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(rasterDEM);\n    if (rasterDEM === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors.push(new ValidationError('source_raster_dem', rasterDEM, `object expected, ${rootType} found`));\n        return errors;\n    }\n    const encoding = unbundle(rasterDEM.encoding);\n    const isCustomEncoding = encoding === 'custom';\n    const customEncodingKeys = ['redFactor', 'greenFactor', 'blueFactor', 'baseShift'];\n    const encodingName = options.value.encoding ? `\"${options.value.encoding}\"` : 'Default';\n    for (const key in rasterDEM) {\n        if (!isCustomEncoding && customEncodingKeys.includes(key)) {\n            errors.push(new ValidationError(key, rasterDEM[key], `In \"${sourceName}\": \"${key}\" is only valid when \"encoding\" is set to \"custom\". ${encodingName} encoding found`));\n        }\n        else if (rasterDEMSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: rasterDEM[key],\n                valueSpec: rasterDEMSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors.push(new ValidationError(key, rasterDEM[key], `unknown property \"${key}\"`));\n        }\n    }\n    return errors;\n}\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\nfunction validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    const validateSpec = options.validateSpec;\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n    const type = unbundle(value.type);\n    let errors;\n    switch (type) {\n        case 'vector':\n        case 'raster':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators,\n                validateSpec,\n            });\n            return errors;\n        case 'raster-dem':\n            errors = validateRasterDEMSource({\n                sourceName: key,\n                value,\n                style: options.style,\n                styleSpec,\n                validateSpec,\n            });\n            return errors;\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                validateSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: { values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image'] }});\n    }\n}\nfunction validatePromoteId({ key, value }) {\n    if (getType(value) === 'string') {\n        return validateString({ key, value });\n    }\n    else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({ key: `${key}.${prop}`, value: value[prop] }));\n        }\n        return errors;\n    }\n}\n\nfunction validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else if (lightSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateSky(options) {\n    const sky = options.value;\n    const styleSpec = options.styleSpec;\n    const skySpec = styleSpec.sky;\n    const style = options.style;\n    const rootType = getType(sky);\n    if (sky === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('sky', sky, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in sky) {\n        if (skySpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: sky[key],\n                valueSpec: skySpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, sky[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateTerrain(options) {\n    const terrain = options.value;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in terrain) {\n        if (terrainSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateFormatted(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validateImage(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validatePadding(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1 || value.length > 4) {\n            return [new ValidationError(key, value, `padding requires 1 to 4 values; ${value.length} values found`)];\n        }\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateNumberArray(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        if (value.length < 1) {\n            return [new ValidationError(key, value, 'array length at least 1 expected, length 0 found')];\n        }\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateColorArray(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1) {\n            return [new ValidationError(key, value, 'array length at least 1 expected, length 0 found')];\n        }\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(validateColor({\n                key: `${key}[${i}]`,\n                value: value[i]}));\n        }\n        return errors;\n    }\n    else {\n        return validateColor({\n            key,\n            value});\n    }\n}\n\nfunction validateVariableAnchorOffsetCollection(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    const styleSpec = options.styleSpec;\n    if (type !== 'array' || value.length < 1 || value.length % 2 !== 0) {\n        return [new ValidationError(key, value, 'variableAnchorOffsetCollection requires a non-empty array of even length')];\n    }\n    let errors = [];\n    for (let i = 0; i < value.length; i += 2) {\n        // Elements in even positions should be values from text-anchor enum\n        errors = errors.concat(validateEnum({\n            key: `${key}[${i}]`,\n            value: value[i],\n            valueSpec: styleSpec['layout_symbol']['text-anchor']\n        }));\n        // Elements in odd positions should be points (2-element numeric arrays)\n        errors = errors.concat(validateArray({\n            key: `${key}[${i + 1}]`,\n            value: value[i + 1],\n            valueSpec: {\n                length: 2,\n                value: 'number'\n            },\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec\n        }));\n    }\n    return errors;\n}\n\nfunction validateSprite(options) {\n    let errors = [];\n    const sprite = options.value;\n    const key = options.key;\n    if (!Array.isArray(sprite)) {\n        return validateString({\n            key,\n            value: sprite\n        });\n    }\n    else {\n        const allSpriteIds = [];\n        const allSpriteURLs = [];\n        for (const i in sprite) {\n            if (sprite[i].id && allSpriteIds.includes(sprite[i].id))\n                errors.push(new ValidationError(key, sprite, `all the sprites' ids must be unique, but ${sprite[i].id} is duplicated`));\n            allSpriteIds.push(sprite[i].id);\n            if (sprite[i].url && allSpriteURLs.includes(sprite[i].url))\n                errors.push(new ValidationError(key, sprite, `all the sprites' URLs must be unique, but ${sprite[i].url} is duplicated`));\n            allSpriteURLs.push(sprite[i].url);\n            const pairSpec = {\n                id: {\n                    type: 'string',\n                    required: true,\n                },\n                url: {\n                    type: 'string',\n                    required: true,\n                }\n            };\n            errors = errors.concat(validateObject({\n                key: `${key}[${i}]`,\n                value: sprite[i],\n                valueSpec: pairSpec,\n                validateSpec: options.validateSpec,\n            }));\n        }\n        return errors;\n    }\n}\n\nfunction validateProjection(options) {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n    const rootType = getType(projection);\n    if (projection === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('projection', projection, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in projection) {\n        if (projectionSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, projection[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateProjectionDefinition(options) {\n    const key = options.key;\n    let value = options.value;\n    value = value instanceof String ? value.valueOf() : value;\n    const type = getType(value);\n    if (type === 'array' && !isProjectionDefinitionValue(value) && !isPropertyValueSpecification(value)) {\n        return [new ValidationError(key, value, `projection expected, invalid array ${JSON.stringify(value)} found`)];\n    }\n    else if (!['array', 'string'].includes(type)) {\n        return [new ValidationError(key, value, `projection expected, invalid type \"${type}\" found`)];\n    }\n    return [];\n}\nfunction isPropertyValueSpecification(value) {\n    if (['interpolate', 'step', 'literal'].includes(value[0])) {\n        return true;\n    }\n    return false;\n}\nfunction isProjectionDefinitionValue(value) {\n    return Array.isArray(value) &&\n        value.length === 3 &&\n        typeof value[0] === 'string' &&\n        typeof value[1] === 'string' &&\n        typeof value[2] === 'number';\n}\n\nfunction isObjectLiteral(anything) {\n    return Boolean(anything) && anything.constructor === Object;\n}\n\nfunction validateState(options) {\n    if (!isObjectLiteral(options.value)) {\n        return [\n            new ValidationError(options.key, options.value, `object expected, ${getType(options.value)} found`),\n        ];\n    }\n    return [];\n}\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'sky': validateSky,\n    'terrain': validateTerrain,\n    'projection': validateProjection,\n    'projectionDefinition': validateProjectionDefinition,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'padding': validatePadding,\n    'numberArray': validateNumberArray,\n    'colorArray': validateColorArray,\n    'variableAnchorOffsetCollection': validateVariableAnchorOffsetCollection,\n    'sprite': validateSprite,\n    'state': validateState\n};\n/**\n * Main recursive validation function used internally.\n * You should use `validateStyleMin` in the browser or `validateStyle` in node env.\n * @param options - the options object\n * @param options.key - string representing location of validation in style tree. Used only\n * for more informative error reporting.\n * @param options.value - current value from style being evaluated. May be anything from a\n * high level object that needs to be descended into deeper or a simple\n * scalar value.\n * @param options.valueSpec - current spec being evaluated. Tracks value.\n * @param options.styleSpec - current full spec being evaluated.\n * @param options.validateSpec - the validate function itself\n * @param options.style - the style object\n * @param options.objectElementValidators - optional object of functions that will be called\n * @returns an array of errors, or an empty array if no errors are found.\n */\nfunction validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    options.validateSpec = validate;\n    if (valueSpec.expression && isFunction$1(unbundle(value))) {\n        return validateFunction(options);\n    }\n    else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    }\n    else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n    }\n    else {\n        const valid = validateObject(extendBy({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n\nfunction validateGlyphsUrl(options) {\n    const value = options.value;\n    const key = options.key;\n    const errors = validateString(options);\n    if (errors.length)\n        return errors;\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n    return errors;\n}\n\n/**\n * Validate a MapLibre style against the style specification.\n * Use this when running in the browser.\n *\n * @param style - The style to be validated.\n * @param styleSpec - The style specification to validate against.\n * If omitted, the latest style spec is used.\n * @returns an array of errors, or an empty array if no errors are found.\n * @example\n *   const validate = require('@maplibre/maplibre-gl-style-spec/').validateStyleMin;\n *   const errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = v8Spec) {\n    let errors = [];\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        validateSpec: validate,\n        objectElementValidators: {\n            glyphs: validateGlyphsUrl,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n    if (style['constants']) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style['constants']}));\n    }\n    return sortErrors(errors);\n}\nvalidateStyleMin.source = wrapCleanErrors(injectValidateSpec(validateSource));\nvalidateStyleMin.sprite = wrapCleanErrors(injectValidateSpec(validateSprite));\nvalidateStyleMin.glyphs = wrapCleanErrors(injectValidateSpec(validateGlyphsUrl));\nvalidateStyleMin.light = wrapCleanErrors(injectValidateSpec(validateLight));\nvalidateStyleMin.sky = wrapCleanErrors(injectValidateSpec(validateSky));\nvalidateStyleMin.terrain = wrapCleanErrors(injectValidateSpec(validateTerrain));\nvalidateStyleMin.state = wrapCleanErrors(injectValidateSpec(validateState));\nvalidateStyleMin.layer = wrapCleanErrors(injectValidateSpec(validateLayer));\nvalidateStyleMin.filter = wrapCleanErrors(injectValidateSpec(validateFilter));\nvalidateStyleMin.paintProperty = wrapCleanErrors(injectValidateSpec(validatePaintProperty));\nvalidateStyleMin.layoutProperty = wrapCleanErrors(injectValidateSpec(validateLayoutProperty));\nfunction injectValidateSpec(validator) {\n    return function (options) {\n        return validator({\n            ...options,\n            validateSpec: validate,\n        });\n    };\n}\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\nfunction wrapCleanErrors(inner) {\n    return function (...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nfunction stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n/**\n * Format a MapLibre Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a MapLibre Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, v8Spec.$root);\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, v8Spec.layer));\n    }\n    return stringify(style, { indent: space });\n}\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    }\n    else {\n        return value;\n    }\n}\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from];\n    delete obj[from];\n}\nfunction migrateV8(style) {\n    style.version = 8;\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n    // Inline Constants\n    eachProperty(style, { paint: true, layout: true }, (property) => {\n        const value = resolveConstant(style, property.value);\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n        property.set(value);\n    });\n    delete style['constants'];\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n            if (paint['icon-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n        }\n        else if (typeof font === 'string') {\n            return splitAndTrim(font);\n        }\n        else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n        }\n        else {\n            throw new Error('unexpected font value');\n        }\n    }\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n    return style;\n}\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n * @param style The style object to migrate.\n * @returns The migrated style object.\n */\nfunction expressions(style) {\n    const converted = [];\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n    eachProperty(style, { paint: true, layout: true }, ({ path, value, reference, set }) => {\n        if (isExpression(value))\n            return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        }\n        else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n    return style;\n}\n\n/**\n * Migrate color style values to supported format.\n *\n * @param colorToMigrate Color value to migrate, could be a string or an expression.\n * @returns Color style value in supported format.\n */\nfunction migrateColors(colorToMigrate) {\n    return JSON.parse(migrateHslColors(JSON.stringify(colorToMigrate)));\n}\n/**\n * Created to migrate from colors supported by the former CSS color parsing\n * library `csscolorparser` but not compliant with the CSS Color specification,\n * like `hsl(900, 0.15, 90%)`.\n *\n * @param colorToMigrate Serialized color style value.\n * @returns A serialized color style value in which all non-standard hsl color values\n * have been converted to a format that complies with the CSS Color specification.\n *\n * @example\n * migrateHslColors('\"hsl(900, 0.15, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsla(900, .15, .9)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsl(900, 15%, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"' - no changes\n */\nfunction migrateHslColors(colorToMigrate) {\n    return colorToMigrate.replace(/\"hsla?\\((.+?)\\)\"/gi, (match, hslArgs) => {\n        const argsMatch = hslArgs.match(/^(.+?)\\s*,\\s*(.+?)\\s*,\\s*(.+?)(?:\\s*,\\s*(.+))?$/i);\n        if (argsMatch) {\n            let [h, s, l, a] = argsMatch.slice(1);\n            [s, l] = [s, l].map(v => v.endsWith('%') ? v : `${parseFloat(v) * 100}%`);\n            return `\"hsl${typeof a === 'string' ? 'a' : ''}(${[h, s, l, a].filter(Boolean).join(',')})\"`;\n        }\n        return match;\n    });\n}\n\n/**\n * Migrate a Mapbox/MapLibre GL Style to the latest version.\n *\n * @param style - a MapLibre Style\n * @returns a migrated style\n * @example\n * const fs = require('fs');\n * const migrate = require('@maplibre/maplibre-gl-style-spec').migrate;\n * const style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nfunction migrate(style) {\n    let migrated = false;\n    if (style.version === 7) {\n        style = migrateV8(style);\n        migrated = true;\n    }\n    if (style.version === 8) {\n        migrated = !!expressions(style);\n        migrated = true;\n    }\n    eachProperty(style, { paint: true, layout: true }, ({ value, reference, set }) => {\n        if (reference.type === 'color') {\n            set(migrateColors(value));\n        }\n    });\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n    return style;\n}\n\nconst v8 = v8Spec;\nconst expression = {\n    StyleExpression,\n    StylePropertyFunction,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    createExpression,\n    createPropertyExpression,\n    isExpression,\n    isExpressionFilter,\n    isZoomExpression,\n    normalizePropertyExpression,\n};\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction: isFunction$1\n};\nconst visit = { eachLayer, eachProperty, eachSource };\n\nexport { Color, ColorArray, ColorType, CompoundExpression, EvaluationContext, FormatExpression, Formatted, FormattedSection, FormattedType, Interpolate, Literal, NullType, NumberArray, Padding, ParsingError, ProjectionDefinition, ProjectionDefinitionType, ResolvedImage, Step, StyleExpression, StylePropertyFunction, ValidationError, VariableAnchorOffsetCollection, ZoomConstantExpression, ZoomDependentExpression, classifyRings, convertFilter, convertFunction, createExpression, createFunction, createPropertyExpression, derefLayers, diff, emptyStyle, expression, expressions$1 as expressions, featureFilter, format, styleFunction as function, groupByLayout, interpolateFactory as interpolates, isExpression, isFunction$1 as isFunction, isZoomExpression, v8Spec as latest, migrate, normalizePropertyExpression, supportsPropertyExpression, typeToString as toString, typeOf, v8, validate, validateStyleMin, visit };\n//# sourceMappingURL=index.mjs.map\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\n/**\n * @param {string|Array<string>} fonts Mapbox GL Style fontstack or single font, e.g. `['Open Sans Regular', 'Arial Unicode MS Regular']` or `'Open Sans Regular'`.\n * @param {number} size Font size in pixels.\n * @param {string|number} [lineHeight] Line height as css line-height.\n * @returns {string} CSS font definition, e.g. `'normal 400 16px/1.2 \"Open Sans\"'`.\n */\nexport default function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans')\n        .replace('DIN Pro', 'Barlow')\n        .replace('Arial Unicode MS', 'Arial');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * @typedef {Object} Sprite\n * @property {string} id Id of the sprite source.\n * @property {string} url URL to the sprite source.\n */\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Normalizes legacy string-based or new-style array based sprite definitions into array-based.\n * @param {string|Array<Sprite>} sprite the sprite source.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {Array<Sprite>} An array of sprite definitions with normalized URLs.\n * @private\n */\nexport function normalizeSpriteDefinition(sprite, token, styleUrl) {\n  if (typeof sprite === 'string') {\n    return [\n      {\n        'id': 'default',\n        'url': normalizeSpriteUrl(sprite, token, styleUrl),\n      },\n    ];\n  }\n\n  for (const spriteObj of sprite) {\n    spriteObj.url = normalizeSpriteUrl(spriteObj.url, token, styleUrl);\n  }\n\n  return sprite;\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\nconst mapboxSubdomains = ['a', 'b', 'c', 'd'];\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {Array<string>} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl || location.href);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return [decodeURI(urlObject.href)];\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return [decodeURI(urlObject.href)];\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return [\n      `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`,\n    ];\n  }\n  return mapboxSubdomains.map(\n    (sub) =>\n      `https://${sub}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`,\n  );\n}\n","import {VectorTile} from 'ol';\nimport TileState from 'ol/TileState.js';\nimport {toPromise} from 'ol/functions.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nexport const emptyObj = Object.freeze({});\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options] Options.\n * @param {{url?: string}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.url = pendingRequests[url][0].url;\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const handleError = function (error) {\n    delete pendingRequests[url];\n    return Promise.reject(new Error('Error fetching source ' + url));\n  };\n  const handleResponse = function (response) {\n    delete pendingRequests[url];\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Error fetching source ' + url));\n  };\n  const pendingRequest = toPromise(() => transformedRequest)\n    .then((transformedRequest) => {\n      if (transformedRequest instanceof Response) {\n        if (metadata) {\n          metadata.url = transformedRequest.url;\n        }\n        return handleResponse(transformedRequest);\n      }\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.url = transformedRequest.url;\n      }\n      return fetch(transformedRequest).then(handleResponse).catch(handleError);\n    })\n    .catch(handleError);\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            const handleResponse = function (response) {\n              response.arrayBuffer().then((data) => {\n                const format = tile.getFormat();\n                const features = format.readFeatures(data, {\n                  extent: extent,\n                  featureProjection: projection,\n                });\n                // @ts-ignore\n                tile.setFeatures(features);\n              });\n            };\n            toPromise(() => transformedRequest)\n              .then((transformedRequest) => {\n                if (transformedRequest instanceof Response) {\n                  return handleResponse(transformedRequest);\n                }\n                fetch(transformedRequest)\n                  .then(handleResponse)\n                  .catch((e) => tile.setState(TileState.ERROR));\n              })\n              .catch((e) => tile.setState(TileState.ERROR));\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest)\n            .then((transformedRequest) => {\n              if (typeof transformedRequest === 'string') {\n                img.src = transformedRequest;\n                return;\n              }\n              const handleResponse = (response) =>\n                response.blob().then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                });\n              if (transformedRequest instanceof Response) {\n                return handleResponse(transformedRequest);\n              }\n              fetch(transformedRequest)\n                .then(handleResponse)\n                .catch((e) => tile.setState(TileState.ERROR));\n            })\n            .catch((e) => tile.setState(TileState.ERROR));\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl,\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl[0],\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.url,\n            )[0];\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else if (glSource.tiles) {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          )[0];\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    } else {\n      promise = Promise.reject(new Error('source has no `tiles` nor `url`'));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\ncheckedFonts.on('propertychange', () => {\n  for (const key in measureCache) {\n    delete measureCache[key];\n  }\n});\n\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst webSafeFonts = [\n  'Arial',\n  'Courier New',\n  'Times New Roman',\n  'Verdana',\n  'sans-serif',\n  'serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n];\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  let fontDescriptions;\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    const font = fonts[i];\n    if (font in processedFontFamilies) {\n      continue;\n    }\n    processedFontFamilies[font] = true;\n    const cssFont = mb2css(font, 16);\n    const parts = cssFont.split(' ');\n    if (!fontDescriptions) {\n      fontDescriptions = [];\n    }\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  if (!fontDescriptions) {\n    return fonts;\n  }\n\n  (async () => {\n    await document.fonts.ready;\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n      const fontDescription = fontDescriptions[i];\n      const family = fontDescription[0];\n      if (webSafeFonts.includes(family)) {\n        continue;\n      }\n      const weight = fontDescription[1];\n      const style = fontDescription[2];\n      const loaded = await document.fonts.load(\n        `${style} ${weight} 16px \"${family}\"`,\n      );\n      if (\n        !loaded.some(\n          (f) =>\n            f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase() ===\n              family.toLowerCase() &&\n            f.weight == weight &&\n            f.style === style,\n        )\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', weight)\n          .replace(\n            '{-fontstyle}',\n            style.replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', style);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  })();\n\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {\n  Color,\n  CompoundExpression,\n  convertFunction,\n  createPropertyExpression,\n  derefLayers,\n  expressions,\n  featureFilter as createFilter,\n  isExpression,\n  isFunction,\n  v8 as spec,\n} from '@maplibre/maplibre-gl-style-spec';\nimport mb2css from 'mapbox-to-css-font';\nimport Map from 'ol/Map.js';\nimport {distance} from 'ol/coordinate.js';\nimport {getCenter} from 'ol/extent.js';\nimport {toPromise} from 'ol/functions.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  emptyObj,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\n/** @typedef {string|Request|Response|Promise<string|Request|Response>|Object<string, string|Request|Response|Promise<string|Request|Response>>} SpriteImageUrl */\n\n/**\n * @typedef {Object} SpriteImage\n * @property {HTMLImageElement|HTMLCanvasElement} image Image\n * @property {Array<number>} size Size\n * @property {boolean} [unSDFed] Image has been unSDFed\n */\n\n/** @typedef {Object<string, SpriteImage>} SpriteImages */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\n// Shared camera object for global expression evaluation context\nexport const cameraObj = {zoom: 0, distanceFromCenter: 0};\n\n// Add unsupported expressions to the MapLibre GL Style spec\nCompoundExpression.register(expressions, {\n  ...CompoundExpression.definitions,\n  'pitch': [{kind: 'number'}, [], (ctx) => cameraObj.pitch || 90],\n  'distance-from-center': [\n    {kind: 'number'},\n    [],\n    (ctx) => cameraObj.distanceFromCenter || 0,\n  ],\n});\n\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); // eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  return functions[property](cameraObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); // eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    try {\n      filterCache[layerId] = createFilter(filter).filter;\n    } catch (e) {\n      console.warn('Filter will evaluate to false: ' + e.message); // eslint-disable-line no-console\n      filterCache[layerId] = function () {\n        return false;\n      };\n    }\n  }\n  return filterCache[layerId](cameraObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\n/**\n * @private\n * @param {string} icon Icon identifier (with prefix if not 'default')\n * @param {SpriteImages} spriteImages Sprite images.\n * @return {SpriteImage} Image.\n */\nexport function getSpriteImageForIcon(icon, spriteImages) {\n  let prefix = icon.split(':')[0];\n  if (prefix === icon) {\n    prefix = 'default';\n  }\n  return spriteImages[prefix];\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {SpriteImageUrl} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object. If multiple `sprite`s\n * are defined in the style object, this has to be an object with the sprite id as key and the\n * sprite image URL as value.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  /** @type {SpriteImages} */\n  const spriteImages = {};\n\n  if (\n    typeof spriteImageUrl === 'string' ||\n    spriteImageUrl instanceof Request ||\n    spriteImageUrl instanceof Response ||\n    spriteImageUrl instanceof Promise\n  ) {\n    spriteImageUrl = {'default': spriteImageUrl};\n  }\n\n  for (const prefix in spriteImageUrl) {\n    const imageUrl = spriteImageUrl[prefix];\n    toPromise(() => imageUrl).then(async (imageUrl) => {\n      let blobUrl;\n      if (typeof Image !== 'undefined') {\n        const img = new Image();\n        if (typeof imageUrl === 'string') {\n          img.crossOrigin = 'anonymous';\n          img.src = imageUrl;\n        } else {\n          let response;\n          if (imageUrl instanceof Request) {\n            response = await fetch(imageUrl);\n          } else if (imageUrl instanceof Response) {\n            response = imageUrl;\n          }\n          const blob = await response.blob();\n          blobUrl = URL.createObjectURL(blob);\n          img.src = blobUrl;\n        }\n        img.addEventListener('load', function load() {\n          img.removeEventListener('load', load);\n          spriteImages[prefix] = {\n            image: img,\n            size: [img.width, img.height],\n          };\n          olLayer.changed();\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        });\n        img.addEventListener('error', function error() {\n          URL.revokeObjectURL(blobUrl);\n          img.removeEventListener('error', error);\n        });\n      } else if (\n        typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope // eslint-disable-line\n      ) {\n        const worker = /** @type {*} */ (self);\n        // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n        worker.postMessage({\n          action: 'loadImage',\n          src: imageUrl,\n        });\n        worker.addEventListener('message', function handler(event) {\n          if (\n            event.data.action === 'imageLoaded' &&\n            event.data.src === imageUrl\n          ) {\n            spriteImages[prefix] = {\n              image: event.data.image,\n              size: [event.data.image.width, event.data.image.height],\n            };\n          }\n        });\n      }\n    });\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties['mvt:layer']];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    cameraObj.zoom = zoom;\n    cameraObj.distanceFromCenter = 0;\n    const featureGeometry = feature.getGeometry();\n    const type = types[featureGeometry.getType()];\n    const map = olLayer.get('map');\n    if (map && map instanceof Map && type === 1) {\n      const size = map.getSize();\n      if (size) {\n        const mapCenter = map.getView().getCenter();\n        const featureCenter = getCenter(featureGeometry.getExtent());\n        cameraObj.distanceFromCenter =\n          distance(mapCenter, featureCenter) / resolution / size[1];\n      }\n    }\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              const spriteImage = getSpriteImageForIcon(icon, spriteImages);\n              if (spriteData && spriteData[icon] && spriteImage) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage.image,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            const spriteImage = getSpriteImageForIcon(icon, spriteImages);\n            if (\n              (spriteData && spriteData[icon] && spriteImage) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct =\n                          (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (\n                          Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                          xM <= maxX &&\n                          xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage.image,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage.image,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImage.unSDFed) {\n                            const spriteImageUnSDFed = drawSDF(\n                              spriteImage.image,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImage.size[0],\n                                height: spriteImage.size[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                            spriteImage.image = spriteImageUnSDFed;\n                            spriteImage.unSDFed = true;\n                          }\n                        }\n                        img = spriteImage.image;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImage.size,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(\n              layer,\n              'layout',\n              'text-keep-upright',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport PBF from 'pbf';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport {get} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/layer/Image\n */\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport BaseImageLayer from './BaseImage.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ascending} from '../../array.js';\nimport {wrapX} from '../../coordinate.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {toSize} from '../../size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(layer);\n    const declutter = layer.getDeclutter();\n    const declutteredFeatures = declutter\n      ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n      : null;\n    let found;\n    foundFeature: for (let i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const executorGroups = tile.executorGroups[layerUid];\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        found = executorGroups[t].forEachFeatureAtCoordinate(\n          coordinate,\n          resolution,\n          rotation,\n          hitTolerance,\n          featureCallback,\n          declutteredFeatures,\n        );\n        if (found) {\n          break foundFeature;\n        }\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    if (this.renderedTiles.length === 0) {\n      return Promise.resolve([]);\n    }\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoordString = tileGrid\n        .getTileCoordForCoordAndResolution(coordinate, resolution)\n        .toString();\n      const tile =\n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n          this.renderedTiles\n        ).find(\n          (tile) =>\n            tile.tileCoord.toString() === tileCoordString &&\n            tile.getState() === TileState.LOADED,\n        );\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      if (\n        source.getWrapX() &&\n        projection.canWrapX() &&\n        !containsExtent(\n          projectionExtent,\n          tileGrid.getTileCoordExtent(tile.tileCoord),\n        )\n      ) {\n        wrapX(coordinate, projection);\n      }\n      const layerUid = getUid(layer);\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      const features = tile\n        .getSourceTiles()\n        .reduce(\n          (accumulator, sourceTile) =>\n            accumulator.concat(sourceTile.getFeatures()),\n          /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */ ([]),\n        );\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    /** @type {Array<import('../../Feature.js').FeatureLike>} */\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      this.frameState.viewState.projection,\n    );\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    /** @type {Object<string, true>} */\n    const visitedSourceTiles = {};\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const key = sourceTile.getKey();\n        if (key in visitedSourceTiles) {\n          continue;\n        }\n        visitedSourceTiles[key] = true;\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const scaledCanvasSize = [\n      this.context.canvas.width,\n      this.context.canvas.height,\n    ];\n    const declutter = this.getLayer().getDeclutter();\n    const declutterTree = declutter\n      ? frameState.declutter?.[declutter]\n      : undefined;\n    const layerUid = getUid(this.getLayer());\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[layerUid];\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            scaledCanvasSize,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutterTree,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(this.getLayer());\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[layerUid].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, /** @type {Array<{executorGroup: CanvasExecutorGroup, index: number}>} */ ([]));\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    /** @type {Object<number, true>} */\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).map(Number).sort(ascending);\n    zIndexKeys.forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile The tile\n   * @param {import('../../Map.js').FrameState} frameState Current frame state\n   * @return {import('../../transform.js').Transform} Transform to use to render this tile\n   */\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    const layerUid = getUid(layer);\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = tiles[i];\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[layerUid].filter((group) =>\n        group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport {assert} from '../asserts.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer\n * style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {ceil} from '../math.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {create as createTransform} from '../transform.js';\nimport {getUid} from '../util.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileSource from './Tile.js';\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = new ImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.imageOps_ = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this.imageOps_) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this.onWorkerMessage_.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this.onWorkerMessage_.bind(this, 0),\n      );\n    }\n    /**\n     * @type {Array<Worker>}\n     * @private\n     */\n    this.workers_ = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this.queue_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxQueueLength_ = config.queue || Infinity;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.running_ = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this.dataLookup_ = {};\n\n    /**\n     * @type {Job|null}\n     * @private\n     */\n    this.job_ = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this.enqueue_({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this.dispatch_();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  enqueue_(job) {\n    this.queue_.push(job);\n    while (this.queue_.length > this.maxQueueLength_) {\n      this.queue_.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  dispatch_() {\n    if (this.running_ || this.queue_.length === 0) {\n      return;\n    }\n\n    const job = this.queue_.shift();\n    this.job_ = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this.workers_.length;\n    this.running_ = threads;\n    if (threads === 1) {\n      this.workers_[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this.workers_[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  onWorkerMessage_(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this.dataLookup_[index] = event.data;\n    --this.running_;\n    if (this.running_ === 0) {\n      this.resolveJob_();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  resolveJob_() {\n    const job = this.job_;\n    const threads = this.workers_.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this.dataLookup_[0]['buffer']);\n      meta = this.dataLookup_[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this.dataLookup_[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this.dataLookup_[i]['meta'];\n      }\n    }\n    this.job_ = null;\n    this.dataLookup_ = {};\n    job.callback(\n      null,\n      new ImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this.dispatch_();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   * @override\n   */\n  disposeInternal() {\n    for (let i = 0; i < this.workers_.length; ++i) {\n      this.workers_[i].terminate();\n    }\n    this.workers_.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     * @private\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      /** @type {Array<string>} */\n      const attributions = [];\n      for (let i = 0, iMax = options.sources.length; i < iMax; ++i) {\n        const sourceOrLayer = options.sources[i];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const sourceAttributions = source.getAttributions()?.(frameState);\n        if (typeof sourceAttributions === 'string') {\n          attributions.push(sourceAttributions);\n        } else if (sourceAttributions !== undefined) {\n          attributions.push(...sourceAttributions);\n        }\n      }\n      return attributions;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {isEmpty} from '../obj.js';\nimport {equivalent} from '../proj.js';\nimport {toSize} from '../size.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @type {Object<string, Array<string>>}\n     * @private\n     */\n    this.tileKeysBySourceTileUrl_ = {};\n\n    /**\n     @type {Object<string, Tile<FeatureType>>}\n     */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector render tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        if (!this.sourceTiles_[tileUrl]) {\n          this.sourceTiles_[tileUrl] = new this.tileClass(\n            sourceTileCoord,\n            tileUrl ? TileState.IDLE : TileState.EMPTY,\n            tileUrl,\n            this.format_,\n            this.tileLoadFunction,\n          );\n        }\n        const sourceTile = this.sourceTiles_[tileUrl];\n        tile.sourceTiles.push(sourceTile);\n        if (!this.tileKeysBySourceTileUrl_[tileUrl]) {\n          this.tileKeysBySourceTileUrl_[tileUrl] = [];\n        }\n        this.tileKeysBySourceTileUrl_[tileUrl].push(tile.getKey());\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {VectorRenderTile} tile Vector render tile.\n   */\n  removeSourceTiles(tile) {\n    const tileKey = tile.getKey();\n    const sourceTiles = tile.sourceTiles;\n    for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n      const sourceTileUrl = sourceTiles[i].getTileUrl();\n      if (!this.tileKeysBySourceTileUrl_[sourceTileUrl]) {\n        return;\n      }\n      const index =\n        this.tileKeysBySourceTileUrl_[sourceTileUrl].indexOf(tileKey);\n      if (index === -1) {\n        continue;\n      }\n      this.tileKeysBySourceTileUrl_[sourceTileUrl].splice(index, 1);\n      if (this.tileKeysBySourceTileUrl_[sourceTileUrl].length === 0) {\n        delete this.tileKeysBySourceTileUrl_[sourceTileUrl];\n        delete this.sourceTiles_[sourceTileUrl];\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n      this.removeSourceTiles.bind(this),\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      const sourceProjection = this.getProjection();\n      assert(\n        sourceProjection === null || equivalent(sourceProjection, projection),\n        'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n      );\n\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   * @override\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * @param {boolean} overlaps The source has overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @param {import(\"../VectorTile.js\").default<FeatureType>} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {derefLayers} from '@maplibre/maplibre-gl-style-spec';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport {getCenter, getTopLeft} from 'ol/extent.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport MVT from 'ol/format/MVT.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {METERS_PER_UNIT} from 'ol/proj/Units.js';\nimport {\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getPointResolution,\n  getUserProjection,\n} from 'ol/proj.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteDefinition,\n  normalizeStyleUrl,\n} from './mapbox.js';\nimport {hillshade} from './shaders.js';\nimport {\n  _colorWithOpacity,\n  cameraObj,\n  getValue,\n  styleFunctionArgs,\n  stylefunction as applyStylefunction,\n} from './stylefunction.js';\nimport {getFonts} from './text.js';\nimport {\n  defaultResolutions,\n  emptyObj,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getResolutionForZoom,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Response|Promise<Request|string|Response>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request`, a url `string` or a `Response`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox/MapLibre style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox/MapLibre Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the same source as the first layer matching the provided `layer` type will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined,\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer'),\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.source && glStyle.sources[layer.source].type === type;\n          }).source;\n\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options,\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction(),\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection(),\n                  )\n                ) {\n                  //@ts-ignore\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              const tileGrid = layer.getSource().getTileGrid();\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom()) &&\n                tileGrid.getMinZoom() > 0\n              ) {\n                layer.setMaxResolution(\n                  getResolutionForZoom(\n                    Math.max(0, tileGrid.getMinZoom() - 1e-12),\n                    tileGrid.getResolutions(),\n                  ),\n                );\n              }\n            });\n          }\n\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, style;\n        const spriteData = {};\n        /** @type {import('./stylefunction.js').SpriteImageUrl} */\n        const spriteImageUrl = {};\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units],\n                );\n              }\n            }\n            style = applyStylefunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              (fonts, templateUrl = options.webfonts) =>\n                getFonts(fonts, templateUrl),\n              options.getImage,\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprites = normalizeSpriteDefinition(\n            glStyle.sprite,\n            options.accessToken,\n            styleUrl || location.href,\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n\n          Promise.all(\n            sprites.map(function (sprite) {\n              const spriteBaseUrl = new URL(sprite.url);\n              let spriteUrl =\n                spriteBaseUrl.origin +\n                spriteBaseUrl.pathname +\n                sizeFactor +\n                '.json' +\n                spriteBaseUrl.search;\n\n              return new Promise(function (resolve, reject) {\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(function (error) {\n                    spriteUrl =\n                      spriteBaseUrl.origin +\n                      spriteBaseUrl.pathname +\n                      '.json' +\n                      spriteBaseUrl.search;\n                    fetchResource('Sprite', spriteUrl, options)\n                      .then(resolve)\n                      .catch(reject);\n                  });\n              })\n                .then(function (spritesJson) {\n                  if (spritesJson === undefined) {\n                    reject(new Error('No sprites found.'));\n                  }\n\n                  let imageUrl;\n                  imageUrl =\n                    spriteBaseUrl.origin +\n                    spriteBaseUrl.pathname +\n                    sizeFactor +\n                    '.png' +\n                    spriteBaseUrl.search;\n\n                  if (options.transformRequest) {\n                    const transformed =\n                      options.transformRequest(imageUrl, 'SpriteImage') ||\n                      imageUrl;\n                    if (\n                      transformed instanceof Request ||\n                      transformed instanceof Promise\n                    ) {\n                      imageUrl = transformed;\n                    }\n                  }\n                  spriteImageUrl[sprite.id] = imageUrl;\n\n                  // add sprite data with prefix according to spec\n                  for (const spriteName in spritesJson) {\n                    const key =\n                      sprite.id == 'default'\n                        ? spriteName\n                        : `${sprite.id}:${spriteName}`;\n                    spriteData[key] = spritesJson[spriteName];\n                  }\n                })\n                .catch(function (err) {\n                  reject(\n                    new Error(\n                      `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`,\n                    ),\n                  );\n                });\n            }),\n          )\n            .then(onChange)\n            .catch(reject);\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer\n          .getLayers()\n          .insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox/MapLibre Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox/MapLibre Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1,\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  cameraObj.zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions,\n  );\n  cameraObj.distanceFromCenter = 0;\n  let opacity;\n  const bg = getValue(\n    background,\n    'paint',\n    'background-color',\n    emptyObj,\n    functionCache,\n  );\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      emptyObj,\n      functionCache,\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox/MapLibre Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache,\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT({layerName: 'mvt:layer'});\n        const source = new VectorTileSource(sourceOptions);\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const source = new TileJSON({\n          interpolate:\n            options.interpolate === undefined ? true : options.interpolate,\n          transition: 0,\n          crossOrigin: 'anonymous',\n          tileJSON: tileJson,\n        });\n        //@ts-ignore\n        source.tileGrid = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        ).tileGrid;\n        if (options.projection) {\n          //@ts-ignore\n          source.projection = getProjection(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        if (tileLoadFunction) {\n          source.setTileLoadFunction(tileLoadFunction);\n        }\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n          const bboxTemplate = getBboxTemplate(projection);\n          let src = getTileUrl(tileCoord, pixelRatio, projection);\n          if (src.indexOf(bboxTemplate) != -1) {\n            const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n            src = src.replace(bboxTemplate, bbox.toString());\n          }\n          return src;\n        });\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(function (error) {\n        reject(error);\n      });\n  });\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function () {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const [geoJsonUrl] = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href,\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions,\n    ),\n  );\n  source.set('mapbox-source', glSource);\n  return /** @type {VectorSource} */ (source);\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  cameraObj.zoom = zoom;\n  cameraObj.distanceFromCenter = 0;\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    emptyObj,\n    functionCache,\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = getPointResolution(\n        options.projection || 'EPSG:3857',\n        event.resolution,\n        getCenter(event.extent),\n        'm',\n      );\n      cameraObj.zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions,\n      );\n      cameraObj.distanceFromCenter = 0;\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          emptyObj,\n          functionCache,\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        emptyObj,\n        functionCache,\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        emptyObj,\n        functionCache,\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        emptyObj,\n        functionCache,\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        emptyObj,\n        functionCache,\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox/MapLibre Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        }),\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom),\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options,\n            ),\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options),\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox/MapLibre Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox/MapLibre Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox/MapLibre Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox/MapLibre Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox/MapLibre Style document). When passed\n * as style url, layers will be added to the map when the Mapbox/MapLibre Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options,\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {},\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source'),\n          ),\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                getResolutionForZoom(\n                  Math.max(0, minZoom - 1e-12),\n                  defaultResolutions,\n                ),\n                getResolutionForZoom(\n                  Math.max(0, sourceMinZoom - 1e-12),\n                  tileGrid.getResolutions(),\n                ),\n              ),\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(\n              getResolutionForZoom(maxZoom, defaultResolutions),\n            );\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(\n            getResolutionForZoom(\n              Math.max(0, minZoom - 1e-12),\n              defaultResolutions,\n            ),\n          );\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options),\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options,\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId),\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.',\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id),\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nexport function updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = /** @type {Array<VectorLayer|TileLayer|VectorTileLayer>} */ (\n    mapOrGroup\n      .getLayers()\n      .getArray()\n      .filter(function (layer) {\n        return (\n          (layer instanceof VectorLayer ||\n            layer instanceof TileLayer ||\n            layer instanceof VectorTileLayer) &&\n          layer.getSource() === currentSource\n        );\n      })\n  );\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(\n        setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options),\n      );\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    default:\n      return Promise.reject(\n        new Error('Unsupported source type ' + mapboxSource.type),\n      );\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.',\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1,\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1,\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox/MapLibre Style\n * `layer`. Note that multiple Mapbox/MapLibre Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox/MapLibre Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|LayerGroup|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|LayerGroup|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","/**\n * @module ol/interaction/Draw\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","import './style.css';\nimport {Map, View} from 'ol';\nimport {defaults as defaultControls} from 'ol/control/defaults.js';\nimport ScaleLine from 'ol/control/ScaleLine.js';\nimport Link from 'ol/interaction/Link.js';\nimport TileLayer from 'ol/layer/Tile';\nimport {apply} from 'ol-mapbox-style';\nimport {fromLonLat} from 'ol/proj.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Fill from 'ol/style/Fill.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Point from 'ol/geom/Point.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport Draw from 'ol/interaction/Draw';\nimport Polygon from 'ol/geom/Polygon';\n\n// --- Config ---\nconst venueLonLat = [0.029912, 51.508144];\nconst extentValue = 1500;\nconst defaultZoom = 17;\n// const defaultRotation = 1.570796;  // 90 degrees in radians\nconst defaultRotation = 0; // No rotation\nconst link = new Link();\n\n// --- Center & Extents ---\nlet center = fromLonLat(venueLonLat);\nlet zoom = defaultZoom;\nlet rotation = defaultRotation;\nconst [x, y] = center;\nconst extents = [x - extentValue, y - extentValue, x + extentValue, y + extentValue];\n\n// --- Setup Colors ---\nconst venueStyle = new Style({\n    fill: new Fill({ color: '#E5E5E5' }),\n    stroke: new Stroke({ color: '#205a4dff', width: 2}),\n  });\n  \n// Colour palette for product codes\nconst productColors = {\n  \"1000004\": \"rgba(0, 123, 255, 0.7)\",   // blue\n  \"1000057\": \"rgba(255, 193, 7, 0.7)\",   // yellow\n  \"1000059\": \"rgba(108, 117, 125, 0.7)\", // gray\n  \"1000001\": \"rgba(40, 167, 69, 0.7)\",   // green\n  \"1000002\": \"rgba(220, 53, 69, 0.7)\",   // red\n  \"1000007\": \"rgba(23, 162, 184, 0.7)\",  // teal\n};\n// Colour palette for Stand Status  \nconst statusColors = {\n  'Sold': 'rgba(242, 166, 166, 1)',\n  'Held': 'rgba(237, 255, 194, 1)',\n  'Available': 'rgba(205, 239, 244, 1)',\n};\n// Colour palette for Stand Status  \nconst standTypeColors = {\n  'Shell': 'rgba(115, 212, 171, 1)',\n  'Space': 'rgba(251, 202, 239, 1)',\n  'ShellFur': 'rgba(40, 167, 69, 0.7)',\n};\n\n// --- Styling stands ---\nlet showStatusFill = false;\nlet showProductFill = false;\nlet showStandTypeFill = false;\n\nfunction getStandFillStyle(feature) {\n  const defaultStyle = new Style({\n    fill: new Fill({ color: 'rgba(255, 255, 255, 1)' }),\n    stroke: new Stroke({ color: '#8a8a8aff', width: 1 }),\n  });\n  if (showStatusFill) {\n    const status = feature.get('Status');\n    const fillColor = statusColors[status] || 'rgba(255, 255, 255, 1)';\n    return new Style({\n      fill: new Fill({ color: fillColor }),\n      stroke: new Stroke({ color: '#319FD3', width: 1 }),\n    });\n  }\n  if (showProductFill) {\n    const code = feature.get('Product: Product Code');\n    const fillColor = productColors[code] || 'rgba(108, 117, 125, 0.7)';\n    return new Style({\n      fill: new Fill({ color: fillColor }),\n      stroke: new Stroke({ color: '#319FD3', width: 1 }),\n    });\n  }\n  if (showStandTypeFill) {\n    const type = feature.get('Stand Type');\n    const fillColor = standTypeColors[type] || 'rgba(255, 255, 255, 1)';\n    return new Style({\n      fill: new Fill({ color: fillColor }),\n      stroke: new Stroke({ color: '#319FD3', width: 1 }),\n    });\n  }\n  return defaultStyle;\n}\n\n// -- Function to wrap Exhibitor Name so it runs multiple lines ---\nconst standNameLabel = (feature) => {\n  function wrapExhibitorName(text, maxLen) {\n  if (!text) return '';\n  \n  // If text is shorter than maxLen, return as-is\n  if (text.length <= maxLen) return text;\n  \n  const words = text.split(' ');\n  let lines = [];\n  let line = '';\n  \n  words.forEach(word => {\n    if ((line + word).length > maxLen) {\n      if (line.trim()) lines.push(line.trim());\n      line = word + ' ';\n    } else {\n      line += word + ' ';\n    }\n  });\n  \n  if (line.trim()) lines.push(line.trim());\n  return lines.join('\\n');\n}\n\n// -- Exhibitor and StandID Labels ---\n  const displayName = wrapExhibitorName(feature.get('Display Name'), 16);\n  const standID = feature.get('standID');\n  const geometry = feature.getGeometry();\n  const center = geometry.getInteriorPoint ? geometry.getInteriorPoint() : geometry.getClosestPoint();\n\n  // Get current map resolution (smaller = more zoomed in)\n  const resolution = map.getView().getResolution();\n\n  // Calculate feature dimensions\n  const extent = geometry.getExtent();\n  const width = extent[2] - extent[0];\n  const height = extent[3] - extent[1];\n\n  // Convert to pixels for better font size calculation\n  const widthInPixels = width / resolution;\n  const heightInPixels = height / resolution;\n\n  // --- Count lines in displayName ---\n  const displayNameLines = displayName.split('\\n').length;\n\n // Calculate font size that fits within the feature bounds\n  const minFont = 8;\n  const maxFont = 16;\n  \n  // Calculate max font size based on width (longest line should fit within feature bounds)\n  const longestLine = displayName.split('\\n').reduce((longest, line) => \n    line.length > longest.length ? line : longest, '');\n  const maxFontByWidth = Math.floor(widthInPixels / (longestLine.length * 0.6)); // 0.6 is char width ratio\n  \n  // Calculate max font size based on height (all lines should fit)\n  const totalTextHeight = displayNameLines + (standID ? 1 : 0); // +1 for standID if exists\n  const maxFontByHeight = Math.floor(heightInPixels / (totalTextHeight * 1.4)); // 1.4 is line height ratio\n  \n  // Use the smaller of the two constraints\n  let fontSize = Math.min(maxFontByWidth, maxFontByHeight);\n  fontSize = Math.max(minFont, Math.min(maxFont, fontSize));\n \n  // Calculate vertical offset with the new fontSize\n  const lineHeight = fontSize * 1.1;\n  let displayNameOffset = 0;\n  let standIDOffset = 0;\n\n  // if (displayName && displayName.trim()) {\n  //   // Calculate the total height of the displayName block\n  //   const displayNameHeight = (displayNameLines - 1) * lineHeight;\n  //   // Center the displayName above the center point\n  //   displayNameOffset = -(displayNameHeight / 2) - (fontSize * 0.3);\n  //   // Place standID below the displayName with proper spacing\n  //   standIDOffset = (fontSize * 1.2);\n  // } else {\n  //   // If no displayName, center the standID\n  //   standIDOffset = 0;\n  // }\n\n  if (displayName && displayName.trim()) {\n  // Calculate total heights\n  const displayNameHeight = displayNameLines * lineHeight;\n  const standIDHeight = standID ? fontSize * 0.8 : 0; // standID font is 0.8 of fontSize\n  const totalTextHeight = displayNameHeight + standIDHeight;\n  const gapBetweenTexts = standID ? fontSize * 0.8 : 0; // Small gap between texts\n  \n  // Center the entire text block within the feature\n  const blockStartY = -(totalTextHeight + gapBetweenTexts) / 2;\n  \n  // Position displayName at the top of the centered block\n  displayNameOffset = blockStartY + (displayNameHeight / 2);\n  \n  // Position standID below displayName\n  standIDOffset = blockStartY + displayNameHeight + gapBetweenTexts + (standIDHeight / 2);\n} else {\n  // If no displayName, center the standID\n  standIDOffset = 0;\n}\n\n  // Style for displayName\n  const styles = [];\n\n  if (displayName && displayName.trim()) {\n    const displayNameStyle = new Style({\n      geometry: center,\n      text: new Text({\n        text: displayName,\n        font: `800 ${fontSize}px Lato, sans-serif`,\n        fill: new Fill({ color: '#14213D'}),\n        stroke: new Stroke({ color: '#fff', width: 2}),\n        textAlign: 'center',\n        textBaseline: 'middle',\n        offsetY: displayNameOffset,\n        overflow: false,\n      }),\n    });\n    styles.push(displayNameStyle);\n  }\n\n // Style for standID\n  if (standID) {\n    const standIDStyle = new Style({\n      geometry: center,\n      text: new Text({\n        text: String(standID),\n        font: `italic 400 ${fontSize * 0.8}px Lato, sans-serif`,\n        fill: new Fill({ color: '#14213D' }),\n        stroke: new Stroke({ color: '#fff', width: 2 }),\n        textAlign: 'center',\n        textBaseline: 'middle',\n        offsetY: standIDOffset,\n        overflow: false,\n      }),\n    });\n    styles.push(standIDStyle);\n  }\n\nreturn styles;\n};\n\n// --- Scale Control ---\nconst scaleControl = () =>\n  new ScaleLine({\n    units: \"metric\",\n    bar: true,\n    steps: 5,\n    text: false,\n    minWidth: 140,\n  });\n\n// --- Venue Layer ---\nconst venueLayer = new VectorLayer({\n  source: new VectorSource({\n    url: '/WTMKT25venue.geojson',\n    format: new GeoJSON(),\n  }),\n  // maxResolution: 0.4,\n  style: venueStyle,\n});\n\n// --- Stands Layer ---\nconst standsLayer = new VectorLayer({\n  declutter: true,\n  source: new VectorSource({\n    url: '/WTMKT25.geojson',\n    format: new GeoJSON(),\n  }),\n  style: feature => [\n    ...standNameLabel(feature),\n    getStandFillStyle(feature),\n  ],\n});\n\n // --- Stand Area Labels ---\nconst standAreaLayer = new VectorLayer({\n  source: new VectorSource({\n    url: '/WTMKT25.geojson',\n    format: new GeoJSON(),\n  }),\n  maxResolution: 0.15,\n  style: feature => {\n    const area = feature.get('Area') || '';\n    const extent = feature.getGeometry().getExtent();\n    const bottomRight = [extent[2], extent[1]];\n    // Create a new style with the label at the bottom right corner\n    return new Style({\n      geometry: new Point(bottomRight),\n      text: new Text({\n        text: String(area),\n        font: 'italic 8px Calibri,sans-serif',\n        fill: new Fill({ color: '#000' }),\n        stroke: new Stroke({ color: '#fff', width: 4 }),\n        offsetX: -8, // adjust as needed to avoid clipping\n        offsetY: -6,  // adjust as needed to avoid clipping\n        textAlign: 'right',\n        textBaseline: 'bottom',\n      }),\n    });\n  }\n});\n\n// --- Map ---\nconst map = new Map({\n  controls: defaultControls().extend([scaleControl()]),\n  target: 'map',\n  view: new View({\n    center: center,\n    zoom: zoom,\n    rotation: rotation,\n    extent: extents,\n  })\n});\n// Apply MapTiler Streets v2 style\napply(map, 'https://api.maptiler.com/maps/0198936d-95b3-7462-83fb-1066bb038158/style.json?key=IxIgfuNbODR6NTdYRuNZ')\n  .then(() => {\n    // Store references to basemap layers (all layers added by apply())\n    basemapLayers = map.getLayers().getArray().slice(); // Copy current layers\n    \n    // Add your custom layers after the style is loaded\n    map.addLayer(venueLayer);\n    map.addLayer(standsLayer);\n    // map.addLayer(standAreaLayer);\n    \n    // Add interactions after map is ready\n    map.addInteraction(link);\n\n       // --- Highlight Feature on Hover ---\n    map.on('pointermove', evt => {\n      if (!evt.dragging) {\n        highlightFeatureAtPixel(evt.pixel);\n      }\n    });\n\n    map.on('click', evt => {\n      const feature = map.forEachFeatureAtPixel(evt.pixel, f => {\n        return standsLayer.getSource().hasFeature(f) ? f : null;\n      });\n\n      if (feature) {\n        showStandEditForm(feature);\n      } else {\n        highlightFeatureAtPixel(evt.pixel);\n      }\n    });\n    \n    console.log('Map loaded successfully!');\n    console.log('Map projection:', map.getView().getProjection().getCode());\n    console.log('Map units:', map.getView().getProjection().getUnits());\n  })\n  .catch(error => {\n    console.error('Error loading MapTiler style:', error);\n  });\n\n  // Basemap toggle function\nfunction toggleBasemap(show) {\n  showBasemap = show;\n  basemapLayers.forEach(layer => {\n    layer.setVisible(show);\n  });\n}\n\n// Add basemap toggle event listener\ndocument.getElementById('basemap-toggle').addEventListener('change', function(e) {\n  toggleBasemap(e.target.checked);\n});\n\n// --- Highlight Feature on Hover ---\nconst highlightStyle = new Style({\n  fill: new Fill({ color: 'rgba(255,255,0,0.3)' }),\n  stroke: new Stroke({ color: '#f00', width: 2 }),\n});\n\nconst featureOverlay = new VectorLayer({\n  source: new VectorSource(),\n  map: map,\n  style: highlightStyle,\n});\n\nlet highlightedFeature = null;\n\nconst highlightFeatureAtPixel = pixel => {\n  const feature = map.forEachFeatureAtPixel(pixel, f => {\n    // Only highlight if feature is from standsLayer\n    return standsLayer.getSource().hasFeature(f) ? f : null;\n  });\n  const overlaySource = featureOverlay.getSource();\n\n  if (highlightedFeature && highlightedFeature !== feature) {\n    overlaySource.removeFeature(highlightedFeature);\n    highlightedFeature = null;\n  }\n  if (feature && feature !== highlightedFeature) {\n    overlaySource.addFeature(feature);\n    highlightedFeature = feature;\n  }\n};\n\n// map.on('pointermove', evt => {\n//   if (!evt.dragging) {\n//     highlightFeatureAtPixel(evt.pixel);\n//   }\n// });\n\n// map.on('click', evt => {\n//   highlightFeatureAtPixel(evt.pixel);\n// });\n\n// --- Toggle Configurations ---\n// --- Basemap Toggle ---\nlet showBasemap = true;\nlet basemapLayers = []; // Store reference to basemap layers\n// These toggles will allow users to show/hide different fill styles for the stands\nconst toggleConfig = {\n  'status-toggle': () => (showStatusFill = false),\n  'product-toggle': () => (showProductFill = false),\n  'type-toggle': () => (showStandTypeFill = false),\n};\n\nconst updateToggleState = {\n  'status-toggle': isChecked => (showStatusFill = isChecked),\n  'product-toggle': isChecked => (showProductFill = isChecked),\n  'type-toggle': isChecked => (showStandTypeFill = isChecked),\n};\n\nfunction handleToggleChange(event, currentToggleId) {\n  const isChecked = event.target.checked;\n  if (isChecked) {\n    Object.keys(toggleConfig).forEach(toggleId => {\n      if (toggleId !== currentToggleId) {\n        document.getElementById(toggleId).checked = false;\n        toggleConfig[toggleId]();\n      }\n    });\n  }\n  updateToggleState[currentToggleId](isChecked);\n  standsLayer.changed();\n  updateLegend();\n}\n\n// Attach event listeners for the stand toggles\nObject.keys(toggleConfig).forEach(toggleId => {\n  document.getElementById(toggleId).addEventListener('change', e => handleToggleChange(e, toggleId));\n});\n\n// --- Legend ---\nfunction updateLegend() {\n  const legendDiv = document.getElementById('legend');\n  legendDiv.innerHTML = ''; // Clear previous\n\n  if (showStatusFill) {\n    legendDiv.innerHTML = `<b>Status</b><br>` +\n      Object.entries(statusColors).map(([status, color]) =>\n        `<span style=\"display:inline-block;width:18px;height:18px;background:${color};border:1px solid #ccc;margin-right:6px;vertical-align:middle;\"></span>${status}`\n      ).join('<br>');\n  } else if (showProductFill) {\n    legendDiv.innerHTML = `<b>Product Code</b><br>` +\n      Object.entries(productColors).map(([code, color]) =>\n        `<span style=\"display:inline-block;width:18px;height:18px;background:${color};border:1px solid #ccc;margin-right:6px;vertical-align:middle;\"></span>${code}`\n      ).join('<br>');\n  } else if (showStandTypeFill) {\n    legendDiv.innerHTML = `<b>Stand Type</b><br>` +\n      Object.entries(standTypeColors).map(([type, color]) =>\n        `<span style=\"display:inline-block;width:18px;height:18px;background:${color};border:1px solid #ccc;margin-right:6px;vertical-align:middle;\"></span>${type}`\n      ).join('<br>');\n  } else {\n    legendDiv.innerHTML = '<b>Legend</b>';\n  }\n}\n\n// Show width, length, and area of stand when drawing\nfunction showDrawInfo(length, width, area) {\n  const infoDiv = document.getElementById('stand-draw-info');\n  const dimsSpan = document.getElementById('stand-draw-dimensions');\n  dimsSpan.innerHTML = `\n    <b>Length:</b> ${length.toFixed(2)} m<br>\n    <b>Width:</b> ${width.toFixed(2)} m<br>\n    <b>Area:</b> ${area.toFixed(2)} m²\n  `;\n  infoDiv.style.display = 'block';\n}\n\nfunction hideDrawInfo() {\n  document.getElementById('stand-draw-info').style.display = 'none';\n}\n\n// --- Rectangle Drawing Interaction ---\nlet drawStandInteraction = null;\n\n// --- Add Draw Interaction for rectangles ---\nconst gridSize = 0.5; // 2 meter grid\n\nfunction snapToGrid(coord) {\n  // Assuming your map units are meters\n  return coord.map(c => Math.round(c / gridSize) * gridSize);\n}\n\nfunction activateDrawStand() {\n  // Remove previous interaction if exists\n  if (drawStandInteraction) {\n    map.removeInteraction(drawStandInteraction);\n  }\n  drawStandInteraction = new Draw({\n    source: standsLayer.getSource(),\n    type: 'Circle',\n    geometryFunction: function(coordinates, geometry) {\n      const start = snapToGrid(coordinates[0]);\n      const end = snapToGrid(coordinates[1]);\n      const minX = Math.min(start[0], end[0]);\n      const minY = Math.min(start[1], end[1]);\n      const maxX = Math.max(start[0], end[0]);\n      const maxY = Math.max(start[1], end[1]);\n      const boxCoords = [\n        [minX, minY],\n        [minX, maxY],\n        [maxX, maxY],\n        [maxX, minY],\n        [minX, minY]\n      ];\n\n      const length = Math.abs(maxY - minY);\n      const width = Math.abs(maxX - minX);\n      const area = length * width;\n      showDrawInfo(length, width, area);\n\n      if (!geometry) {\n        geometry = new Polygon([boxCoords]);\n      } else {\n        geometry.setCoordinates([boxCoords]);\n      }\n      return geometry;\n    }\n  });\n  map.addInteraction(drawStandInteraction);\n\n // Prompt for standID when drawing ends\n  drawStandInteraction.once('drawend', (evt) => {\n    hideDrawInfo();\n    map.removeInteraction(drawStandInteraction);\n    const feature = evt.feature;\n    const standID = prompt('Enter standID for this stand:', '');\n    if (standID !== null) {\n      feature.set('standID', standID);\n    }\n  });\n}\n\n// --- Button event listener ---\ndocument.getElementById('draw-stand-btn').addEventListener('click', activateDrawStand);\n\n// --- Stand Edit Form ---\n// This form will allow users to edit stand properties when clicking on a stand\nlet editingFeature = null;\n\nfunction showStandEditForm(feature) {\n  editingFeature = feature;\n  const props = feature.getProperties();\n  delete props.geometry;\n\n  const fieldsDiv = document.getElementById('stand-properties-fields');\n  fieldsDiv.innerHTML = '';\n\n  Object.keys(props).forEach(key => {\n    const value = props[key] ?? '';\n    fieldsDiv.innerHTML += `\n      <label class=\"form-group\" style=\"display:block; margin-bottom:8px;\">\n        ${key}:<br>\n        <input class=\"form-control\" name=\"${key}\" value=\"${value}\" style=\"width:180px;\" />\n      </label>\n    `;\n  });\n\n  document.getElementById('stand-edit-form').style.display = 'block';\n}\n\nfunction hideStandEditForm() {\n  document.getElementById('stand-edit-form').style.display = 'none';\n  editingFeature = null;\n}\n\n// Handle form submit\ndocument.getElementById('stand-properties-form').addEventListener('submit', function(e) {\n  e.preventDefault();\n  if (!editingFeature) return;\n  const formData = new FormData(e.target);\n  for (const [key, value] of formData.entries()) {\n    editingFeature.set(key, value);\n  }\n  standsLayer.changed();\n  hideStandEditForm();\n});\n\n// Handle cancel button\ndocument.getElementById('close-stand-form').addEventListener('click', function() {\n  hideStandEditForm();\n});\n\n// Update map click handler to use the form\n// map.on('click', evt => {\n//   const feature = map.forEachFeatureAtPixel(evt.pixel, f => {\n//     return standsLayer.getSource().hasFeature(f) ? f : null;\n//   });\n\n//   if (feature) {\n//     showStandEditForm(feature);\n//   } else {\n//     highlightFeatureAtPixel(evt.pixel);\n//   }\n// });"],"names":["CollectionEventType","ObjectEventType","EventType","Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","descending","linearFindNearest","arr","target","direction","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","toPromise","getter","promiseGetter","value","err","clear","object","property","isEmpty","BaseEvent","type","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","len","keys","unByKey","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","eventType","silent","source","Property","CollectionEvent","element","Collection","array","options","f","elem","n","prev","except","assert","assertion","errorMessage","Feature","geometryOrProperties","geometry","properties","clone","style","createStyleFunction","id","name","styles","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","minY","maxX","maxY","createOrUpdate","buffer","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","multiWorld","clamp","min","max","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","j","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","wrap","range","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","warn","args","add","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","distance","worldsAway","getWorldsAway","sourceExtentWidth","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","transforms","destination","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","d","d2","d3","d4","d5","d6","latitude","longitude","zoneToCentralLongitude","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","match","number","north","makeTransformFunction","transformer","coord","makeProjection","makeTransforms","transformFactories","makeUTMTransforms","projectionFactories","makeUTMProjection","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","metersPerUnit","projUnits","getTransformFromProjections","vertices","width","height","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","transform","equivalent","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","sourceProjection","destinationProjection","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmp_","create","reset","set","multiply","transform1","transform2","a1","b1","d1","e1","f1","b2","e2","f2","e","setFromArray","apply","translate","compose","dx1","dy1","sx","sy","dx2","dy2","sin","cos","makeInverse","det","determinant","matrixPrecision","toString","fromString","cssTransform","cssTransform1","cssTransform2","mat1","mat2","transform2D","destinationStride","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","createTransform","tmpPoint","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","transformed","projTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","LinearRing","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","interpolatePoint","fraction","o","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","LineString","lineString","RenderEventType","ua","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","CREATE_IMAGE_BITMAP","PASSIVE_EVENT_LISTENERS","passive","ImageState","createCanvasContext2D","canvasPool","settings","canvas","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","replaceNode","newNode","oldNode","parent","removeChildren","node","replaceChildren","children","oldChildren","oldChild","newChild","NO_COLOR","colorParseContext","getColorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","s","divider","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","invalidCheckFillStyle","colorString","colorFromImage","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","v","rgbaToLcha","g","q","h","lchaToRgba","z","asArray","ImageWrapper","pixelRatio","stateOrLoader","requestResolution","image","error","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","load","src","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","iconImage","crossOrigin","getCacheKey","pattern","update","maxCacheSize","shared","taintedTestContext","IconImage","imageState","ctx","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","VectorContext","feature","renderer","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","strokeStyle","imageStyle","declutterImageWithText","textStyle","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","fontWeights","getFontParameters","fontSpec","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","genericFontFamilies","getFontKey","weight","family","registerFont","timeout","fontFaceSet","isAvailable","fontFaces","font","checkFamily","checkWeight","check","done","checkedFontsProperties","fonts","currentRetries","families","needCheck","measureTextHeight","measureElement","metrics","measureText","text","measureTextWidth","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","opacity","labelOrImage","originX","originY","w","executeLabelInstructions","label","contextInstructions","CanvasImmediateRenderer","viewRotation","userTransform","pixelCoordinates","localTransform","centerX","centerY","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","lineDash","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","declutter","loadingPromises","loading","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","features","dataProjection","all","bbox","Circle","circle","circleExtent","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiPoint","multiPoint","points","MultiPolygon","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","RenderFeature","quickselect","left","defaultCompare","sd","newLeft","newRight","swap","RBush$1","maxEntries","result","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","RBush","RBush_","extents","uid","rbush","Source","adaptAttributions","self","attributions","state","attributionLike","frameState","VectorEventType","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","collection","featureKey","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","clearEvent","anExtent","filter","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","removed","idString","loader","overlaps","Fill","patternImage","fill","Stroke","lineCap","lineDashOffset","lineJoin","miterLimit","hasArea","ratio","toSize","ImageStyle","displacement","rotateWithView","RegularShape","fillKey","renderOptions","stroke","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","maxRadius","radius2","startAngle","angle0","radiusC","CircleStyle","Style","defaultGeometryFunction","zIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","offsetX","offsetY","placement","repeat","keepUpright","justify","textBaseline","padding","ViewHint","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxExtent","dashArray","dash","tmpCoord","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","CanvasInstruction","hitDetectionInstructions","instruction","createFill","applyStroke","endGeometryInstruction","CanvasImageBuilder","myBegin","filteredFlatCoordinates","sharedData","origin","CanvasLineStringBuilder","moveToLineToInstruction","CanvasPolygonBuilder","numEnds","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","geometryType","flatOffset","oo","cc","chunk","chunkBegin","geometryWidths","beg","keep","backgroundFill","backgroundStroke","p0","p1","p2","p3","hitDetectionBackgroundFill","strokeKey","textKey","baseline","textKeepUpright","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","ZIndexContext","render","instructionsAtIndex","instructionAtIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","richTextToPlainText","part","Executor","deferredRendering","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","featureCallback","hitExtent","declutterTree","zIndexContext","transformSetFromArray","declutterMode","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","coords","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","hitTolerance","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","calculateScale","wantedWidth","wantedHeight","Icon","onload","iconImageSize","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","pixel","resultFeatures","RenderEvent","inversePixelTransform","maxStaleKeys","LayerRenderer","layer","matches","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","background","backgroundColor","layerClassName","container","topLeft","topRight","bottomRight","bottomLeft","inverted","canvasTransform","toTransformString","CanvasVectorLayerRenderer","vectorLayer","executorGroup","declutterable","viewState","vectorSource","viewHints","endWorld","world","layerState","layerExtent","intersectsExtent","getSquaredRenderTolerance","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","ready","dirty","replayGroupInstructions","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","isSpecific","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","parse","encoded","expectedType","colorFromString","parseCallExpression","Ops","parsers","createCallExpressionParser","hasArgsCount","withGetArgs","withVarArgs","usesFeatureId","withNoArgs","withArgsOfType","usesGeometryType","usesMapState","withArgsOfReturnType","hasEvenArgs","withMatchArgs","withInterpolateArgs","hasOddArgs","withCaseArgs","withInArgs","withPaletteArgs","returnType","argsCount","operation","minArgs","maxArgs","argCount","plural","expression","argType","inputType","fallback","interpolationType","base","interpolation","stop","condition","needleType","arg","colors","parsedColors","validators","parsed","parser","computeGeometryType","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","ViewProperty","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","none","easeIn","easeOut","inAndOut","linear","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","oldPadding","newPadding","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","minZoom","maxZoom","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","LayerProperty","BaseLayer","managed","states","visible","zindex","Layer","baseOptions","view","map","inView","getAttributions","layerRenderer","renderEvent","layerStatesArray","arrayLayerState","BaseVectorLayer","declutterGroup","renderOrder","styleLike","toStyleLike","toStyleFunction","VectorLayer","ImageCanvas","TileState","Tile","tileCoord","time","ImageTile","tileLoadFunction","getBlankImage","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","Control","mapEvent","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","activeLabel","cssClasses","layers","visibleAttributions","collapsible","attribution","collapsed","Rotate","compassClassName","button","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","defaults","controls","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","stopEvent","browserEvent","conditions","pass","altShiftKeysOnly","focus","targetElement","rootNode","activeElement","focusWithTabindex","mouseActionButton","never","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","DragPan","targetPointers","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","RenderBox","startPixel","endPixel","px","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragZoom","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardZoom","DELTA_LINE_MULTIPLIER","DELTA_PAGE_MULTIPLIER","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","interactions","kinetic","GroupEvent","LayerGroup","layersArray","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","order","expireIconCache","CompositeMapRenderer","renderedLayerStates","previousElement","sourceState","removeLayerMapProperty","setLayerMapProperty","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","group","viewCoordinate","currentDoc","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","targetRoot","previousFrameState","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","TileRange","tileRange","VectorRenderTile","urlTileCoord","getSourceTiles","removeSourceTiles","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","dpi","pointResolutionUnits","minWidth","maxWidth","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","html","resolutionScale","mapScale","steps","stepWidth","scaleSteps","cls","isLast","lengthString","inchesPerMeter","to5","readNumber","string","writeNumber","differentNumber","differentArray","Link","animationOptions","params","oldMap","updateView","viewProperties","layersParam","visibilities","asImageLike","disposedError","defaultSize","DataTile","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetProj","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","ud","vd","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","transformInvCache","transformInv","applyMatrix","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","LRUCache","highWaterMark","entry","getKeyZXY","hash","hashZXY","withinExtentAndZ","sourceKey","addTileToLookup","tilesByZ","existing","removeTileFromLookup","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","createTileCoord","tileCache","tileSource","tilePixelRatio","tileOrigin","tileSize","sourceRevision","initialZ","preload","wantedTiles","minZ","viewport","tileQueueKey","staleKeys","altZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","targetZ","nextExtent","renderExtent","tileState","parentZ","canvasScale","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","postRenderFunction","tilesCount","tileCount","alphaChanged","usedTiles","TileProperty","BaseTileLayer","useInterimTilesOnError","TileLayer","$version","$root","source_vector","source_raster","source_raster_dem","source_geojson","source_video","source_image","layout_background","layout_fill","layout_circle","layout_heatmap","layout_line","layout_symbol","layout_raster","layout_hillshade","filter_operator","geometry_type","function_stop","expression$1","light","sky","terrain","paint","paint_fill","paint_line","paint_circle","paint_heatmap","paint_symbol","paint_raster","paint_hillshade","paint_background","promoteId","v8Spec","refProperties","deref","derefLayers","ExpressionParsingError","message","Scope","bindings","NullType","ProjectionDefinitionType","ObjectType","ValueType","ErrorType","CollatorType","FormattedType","PaddingType","ColorArrayType","ResolvedImageType","VariableAnchorOffsetCollectionType","itemType","typeToString","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","verifyType","sample","Xn","Yn","Zn","t0","t3","deg2rad","rad2deg","constrainAngle","rgbToLab","rgb2xyz","xyz2lab","labToRgb","lab2xyz","xyz2rgb","rgbToHcl","rgbColor","hclToRgb","hslToRgb","hasOwnProperty","getOwn","parseCssColor","namedColorsMatch","namedColors","parseHex","rgbRegExp","rgbMatch","_","rp","gp","bp","f3","ap","argFormat","valFormat","maxValue","rgba","parseAlpha","validateNumbers","hslRegExp","hslMatch","hsla","asPercentage","from","to","interpolateArray","Color","premultiplied","getterKey","lazyValue","spaceKey","hue0","chroma0","light0","alphaF","hue1","chroma1","light1","alphaT","hue","chroma","dh","Collator","caseSensitive","diacriticSensitive","locale","lhs","rhs","VERTICAL_ALIGN_OPTIONS","FormattedSection","fontStack","textColor","verticalAlign","Formatted","sections","unformatted","section","Padding","NumberArray","ColorArray","parsed_val","RuntimeError","anchors","VariableAnchorOffsetCollection","anchorValue","offsetValue","fromValues","toValues","fx","fy","tx","ty","ResolvedImage","ProjectionDefinition","validateRGBA","isValue","mixed","typeOf","valueToString","Literal","types$1","Assertion","types","Coercion","pad","coll","num","geometryTypes","EvaluationContext","cached","ParsingContext","registry","isConstantFunc","scope","errors","expr","annotate","typeAnnotation","Expr","actual","ec","Let","binding","Var","boundExpression","At","In","IndexOf","fromIndex","rawIndex","Match","outputType","cases","outputs","otherwise","labels","labelContext","out","Case","branches","test","Slice","beginIndex","endIndex","findStopLessThanOrEqualTo","lowerIndex","upperIndex","currentIndex","currentValue","nextValue","Step","labelKey","valueKey","stopCount","getDefaultExportFromCjs","unitbezier","hasRequiredUnitbezier","requireUnitbezier","UnitBezier","p1x","p1y","p2x","p2y","epsilon","unitbezierExports","Interpolate","lower","upper","exponentialInterpolation","rest","controlPoints","outputLower","outputUpper","lowerValue","upperValue","difference","Coalesce","parsedArgs","requestedImageName","isComparableType","eq","neq","lt","gt","lteq","gteq","eqCollate","neqCollate","ltCollate","gtCollate","lteqCollate","gteqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","collator","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","CollatorExpression","NumberFormat","currency","minFractionDigits","maxFractionDigits","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","kind","evaluateSection","evaluatedContent","ImageExpression","evaluatedImageName","Length","getTileCoordinates","canonical","mercatorXfromLng","mercatorYfromLat","tilesAtZoom","getLngLatFromTileCoord","lngFromMercatorXfromLng","latFromMercatorY","lng","mercatorX","lat","mercatorY","updateBBox","boxWithinBox","rayIntersect","pointOnBoundary","segmentIntersectSegment","vectorP","vectorQ","perp","twoSided","lineIntersectPolygon","ring","pointWithinPolygon","rings","trueIfOnBoundary","inside","pointWithinPolygons","lineStringWithinPolygon","lineStringWithinPolygons","q1","q2","det1","det2","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","resetBBox","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","pointsWithinPolygons","tilePolygon","tilePolygons","linesWithinPolygons","Within","geojson","polygonsCoords","multipolygonWrapper","TinyQueue","top","bottom","current","halfLength","bestChild","classifyRings","maxRings","ccw","calculateSignedArea","sum","RE","FE","RAD","CheapRuler","coslat","w2","minDist","minI","minT","sqDist","deg","MinPointsSize","MinLinePointsSize","compareDistPair","getRangeSize","isRangeSafe","threshold","splitRange","isLine","size1","getBBox","getPolygonBBox","isValidBBox","bboxToBBoxDistance","ruler","pointToLineDistance","nearestPoint","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","range1","line2","range2","dist","pointsToPointsDistance","points1","points2","pointToPolygonDistance","front","back","lineToPolygonDistance","polygonIntersect","poly1","poly2","polygonToPolygonDistance","polygon1","polygon2","currentMiniDist","ring1","ring2","len2","updateQueue","distQueue","miniDist","rangeA","tempDist","updateQueueTwoSets","pointSet1","pointSet2","pointsToPolygonDistance","distPair","newRangesA","pointSetToPointSetDistance","isLine1","isLine2","rangeB","threshold1","threshold2","sublibe","newRangesB","pointToGeometryDistance","pointPosition","lineStringToGeometryDistance","linePositions","polygonToGeometryDistance","toSimpleGeometry","Distance","GlobalState","_a","globalState","expressions$1","CompoundExpression","evaluate","definition","availableOverloads","overloads","signature","signatureContext","isExpressionConstant","argParseFailed","signatures","stringifySignature","actualTypes","definitions","has","varargs","isSupportedScript","isTypeAnnotation","childrenConstant","isFeatureConstant","isGlobalPropertyConstant","isStateConstant","supportsPropertyExpression","spec","supportsZoomExpression","supportsInterpolation","isFunction$1","StyleExpression","propertySpec","getDefaultValue","globals","featureState","availableImages","formattedSection","isExpression","createExpression","getExpectedType","ZoomConstantExpression","findGlobalStateRefs","ZoomDependentExpression","zoomStops","createPropertyExpression","expressionInput","isFeatureConstantResult","isZoomConstant","zoomCurve","findZoomCurve","childResult","results","childExpression","isExpressionFilter","filterSpec","featureFilter","convertFilter$1","compiled","needGeometry","geometryNeeded","globalProperties","convertComparisonOp$1","convertNegation","convertDisjunctionOp","convertInOp$1","convertHasOp$1","filters","convertLiteral","convertFunction","parameters","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","convertTokenString","convertZoomAndPropertyFunction","convertZoomFunction","convertPropertyFunction","getInterpolateOperator","featureFunctionParameters","featureFunctionStops","getFunctionType","appendStopPair","fixupDegenerateStepCurve","coalesce","getFallback","defaultValue","isStep","curve","literal","v8","sp","italicRE","fontCache","mb2css","cssData","fontFamilies","haveWeight","haveStyle","maybeWeight","previousPart","fontFamily","mapboxBaseUrl","getMapboxPath","startsWith","normalizeSpriteDefinition","sprite","token","styleUrl","normalizeSpriteUrl","spriteObj","mapboxPath","normalizeStyleUrl","mapboxSubdomains","normalizeSourceUrl","tokenParam","urlObject","sizeFactor","sub","emptyObj","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getFunctionCache","functionCache","getFilterCache","filterCache","degrees","defaultResolutions","createCanvas","getZoomForResolution","getResolutionForZoom","pendingRequests","fetchResource","resourceType","metadata","transformedRequest","handleResponse","response","pendingRequest","getGlStyle","glStyleOrUrl","tilejsonCache","getTileJson","glSource","promise","VectorTile","blob","normalizedSourceUrl","tileJson","tileUrl","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","webSafeFonts","processedFontFamilies","getFonts","templateUrl","fontDescriptions","fontDescription","fontUrl","markup","expressionData","rawExpression","compiledExpression","cameraObj","expressions","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","isFunction","getDeclutterMode","evaluateFilter","createFilter","colorWithOpacity","templateRegEx","fromTemplate","getSpriteImageForIcon","spriteImages","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getImage","imageUrl","blobUrl","worker","allLayers","layersBySourceLayer","mapboxLayers","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureGeometry","Map","mapCenter","featureCenter","stylesLength","layerData","strokeColor","fillIcon","icon_cache_key","placementAngle","iconImg","skipLabel","styleGeom","imageElement","iconRotationAlignment","geom","xM","yM","dotProduct","iconSize","iconColor","iconCacheKey","iconOptions","spriteImageUnSDFed","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","textLineHeight","textSize","maxTextWidth","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","FeatureFormat","transformGeometryWithOptions","write","featureProjection","equivalentProjection","fromProjection","toProjection","GeometryConstructor","orientFlatCoordinates","createRenderFeature","createGeometry","JSONFeature","getObject","GeoJSON","geoJSONFeature","readGeometryInternal","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","featureObject","readGeometry","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geometryObject","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","SHIFT_LEFT_32","SHIFT_RIGHT_32","TEXT_DECODER_MIN_LENGTH","utf8TextDecoder","PBF_VARINT","PBF_FIXED64","PBF_BYTES","PBF_FIXED32","Pbf","buf","readField","tag","startPos","isSigned","readVarintRemainder","readUtf8","writeBigVarint","str","writeUtf8","makeRoomForExtraLength","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","toNum","pbf","writeBigVarintLow","writeBigVarintHigh","lsb","extraLen","b0","bytesPerSequence","b3","lead","MVT","cmd","coordsLen","currentEnd","cmdLen","rawFeature","getGeometryType","ctor","PBF","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","clipped","dw","BaseImageLayer","ImageLayer","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","layerRevision","builderState","tileExtent","sourceTiles","layerUid","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","renderedTiles","foundFeature","executorGroups","tileCoordString","tilePixel","accumulator","hitDetectionImageData","visitedSourceTiles","tileFeatures","hifi","tiles","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","clipContext","replayState","renderPixelRatio","renderScale","resetTransform","scaleTransform","pixelScale","translateTransform","VectorTileLayer","fromResolutionLike","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","DECIMALS","ImageSourceEventType","ImageSourceEvent","ImageSource","requestExtent","getRequestExtent","marginWidth","requestWidth","marginHeight","requestHeight","tmpTileCoord","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","getTileGridForProjection","scaleSize","gridProjection","TileSourceEvent","createMinion","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","createFauxWorker","minion","terminated","Processor","threads","workers","inputs","job","slices","RasterEventType","RasterSourceEvent","RasterSource","createLayers","changed","getLayerStatesArray","iMax","sourceOrLayer","sourceAttributions","lib","renderedResolution","imageDatas","getImageData","sharedContext","createLayer","layerOrSource","jsonp","errback","callbackParam","script","cleanup","timer","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","template","expandUrl","urls","startCharCode","stopCharCode","charCode","createFromTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","TileEventType","UrlTile","tileUrlFunction","TileImage","defaultTileLoadFunction","thisProj","projKey","tilegrid","proj","imageTile","TileJSON","requestJSONP","client","tileJSON","epsg4326Projection","attributionExtent","defaultLoadFunction","bufferExtent","sourceZ","sourceTileState","listenChange","sourceTileKey","sourceTileUrl","newTile","origins","tileSizes","hillshade","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","getTileResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","applyStylefunction","sprites","spriteBaseUrl","spriteUrl","spritesJson","spriteName","getSourceIdByRef","ref","extentFromTileJSON","bounds","tr","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","sourceOptions","getBackgroundColor","glLayer","bg","_colorWithOpacity","setupBackgroundLayer","div","VectorTileSource","setupVectorLayer","getBboxTemplate","setupRasterSource","getTileUrl","bboxTemplate","setupRasterLayer","setupHillshadeLayer","Raster","geoJsonFormat","geoJsonUrl","extentUrl","json","bboxStrategy","setupGeoJSONLayer","prerenderRasterLayer","updateRasterLayerProperties","manageVisibility","mapOrGroup","layerMapboxLayerids","mapboxLayer","setupLayer","glLayers","hillshadeLayer","glSourceId","processStyle","promises","layerIds","finalizeLayer","mapOrGroupOrElement","setStyle","sourceMinZoom","DrawEventType","DrawEvent","getTraceTargets","targets","appendGeometryTraceTargets","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendTraceTarget","polys","sharedUpdateInfo","getTraceTargetUpdate","traceState","snapTolerance","closestTargetDistance","newTargetIndex","newEndIndex","targetIndex","minSegmentDistance","coordinateIndex","rel","getPointSegmentRelationship","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","sharedRel","py","Draw","getMode","geometryFunction","mode","squaredLength","squaredCoordinateDistance","getDefaultStyleFunction","trace","move","lowerLeft","upperRight","previouslyForward","currentlyForward","toIndex","remove","updatedTraceTarget","oldTarget","tracing","startingToDraw","downPx","clickPx","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchLineGeom","sketchFeature","newDrawing","ending","sketchFeatures","overlaySource","venueLonLat","extentValue","defaultZoom","defaultRotation","link","venueStyle","productColors","statusColors","standTypeColors","showStatusFill","showProductFill","showStandTypeFill","getStandFillStyle","defaultStyle","status","fillColor","standNameLabel","wrapExhibitorName","maxLen","displayName","standID","widthInPixels","heightInPixels","displayNameLines","minFont","maxFont","longestLine","longest","maxFontByWidth","totalTextHeight","maxFontByHeight","fontSize","displayNameOffset","standIDOffset","displayNameHeight","standIDHeight","gapBetweenTexts","blockStartY","displayNameStyle","standIDStyle","scaleControl","venueLayer","standsLayer","basemapLayers","highlightFeatureAtPixel","showStandEditForm","toggleBasemap","show","highlightStyle","featureOverlay","highlightedFeature","toggleConfig","updateToggleState","isChecked","handleToggleChange","currentToggleId","toggleId","updateLegend","legendDiv","showDrawInfo","infoDiv","dimsSpan","hideDrawInfo","drawStandInteraction","gridSize","snapToGrid","activateDrawStand","boxCoords","editingFeature","props","fieldsDiv","hideStandEditForm","formData"],"mappings":"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eAAgB,CACf,KAAM,QACR,EACC,KAAM,CACL,KAAM,QACR,EACC,QAAS,CACR,KAAM,SACN,QAAW,EACX,OAAQ,IACR,MAAO,SACT,EACC,MAAO,CACN,KAAM,SACN,QAAW,EACX,MAAO,SACT,EACC,KAAM,CACL,KAAM,SACN,QAAW,EACX,MAAO,SACT,EACC,MAAO,CACN,KAAM,QACN,QAAW,CACb,CACA,EACC,MAAO,CACN,KAAM,OACR,EACC,IAAK,CACJ,KAAM,KACR,EACC,WAAY,CACX,KAAM,YACR,EACC,QAAS,CACR,KAAM,SACR,EACC,QAAS,CACR,SAAU,GACV,KAAM,SACR,EACC,OAAQ,CACP,KAAM,QACR,EACC,OAAQ,CACP,KAAM,QACR,EACC,WAAY,CACX,KAAM,YACR,EACC,OAAQ,CACP,SAAU,GACV,KAAM,QACN,MAAO,OACT,CACA,EACIpJ,GAAU,CACb,IAAK,CACJ,KAAM,QACR,CACA,EACIl3D,GAAS,CACZ,gBACA,gBACA,oBACA,iBACA,eACA,cACD,EACIugE,GAAgB,CACnB,KAAM,CACL,SAAU,GACV,KAAM,OACN,OAAQ,CACP,OAAQ,CACX,CACA,CACA,EACC,IAAK,CACJ,KAAM,QACR,EACC,MAAO,CACN,KAAM,QACN,MAAO,QACT,EACC,OAAQ,CACP,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,KACA,WACA,IACA,SACH,CACA,EACC,OAAQ,CACP,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,IAAK,CACR,CACA,EACE,QAAW,KACb,EACC,QAAS,CACR,KAAM,SACN,QAAW,CACb,EACC,QAAS,CACR,KAAM,SACN,QAAW,EACb,EACC,YAAa,CACZ,KAAM,QACR,EACC,UAAW,CACV,KAAM,WACR,EACC,SAAU,CACT,KAAM,UACN,QAAW,EACb,EACC,IAAK,CACJ,KAAM,GACR,CACA,EACIC,GAAgB,CACnB,KAAM,CACL,SAAU,GACV,KAAM,OACN,OAAQ,CACP,OAAQ,CACX,CACA,CACA,EACC,IAAK,CACJ,KAAM,QACR,EACC,MAAO,CACN,KAAM,QACN,MAAO,QACT,EACC,OAAQ,CACP,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,KACA,WACA,IACA,SACH,CACA,EACC,QAAS,CACR,KAAM,SACN,QAAW,CACb,EACC,QAAS,CACR,KAAM,SACN,QAAW,EACb,EACC,SAAU,CACT,KAAM,SACN,QAAW,IACX,MAAO,QACT,EACC,OAAQ,CACP,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,IAAK,CACR,CACA,EACE,QAAW,KACb,EACC,YAAa,CACZ,KAAM,QACR,EACC,SAAU,CACT,KAAM,UACN,QAAW,EACb,EACC,IAAK,CACJ,KAAM,GACR,CACA,EACIC,GAAoB,CACvB,KAAM,CACL,SAAU,GACV,KAAM,OACN,OAAQ,CACP,aAAc,CACjB,CACA,CACA,EACC,IAAK,CACJ,KAAM,QACR,EACC,MAAO,CACN,KAAM,QACN,MAAO,QACT,EACC,OAAQ,CACP,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,KACA,WACA,IACA,SACH,CACA,EACC,QAAS,CACR,KAAM,SACN,QAAW,CACb,EACC,QAAS,CACR,KAAM,SACN,QAAW,EACb,EACC,SAAU,CACT,KAAM,SACN,QAAW,IACX,MAAO,QACT,EACC,YAAa,CACZ,KAAM,QACR,EACC,SAAU,CACT,KAAM,OACN,OAAQ,CACP,UAAW,CACd,EACG,OAAQ,CACX,EACG,OAAQ,CACX,CACA,EACE,QAAW,QACb,EACC,UAAW,CACV,KAAM,SACN,QAAW,CACb,EACC,WAAY,CACX,KAAM,SACN,QAAW,CACb,EACC,YAAa,CACZ,KAAM,SACN,QAAW,CACb,EACC,UAAW,CACV,KAAM,SACN,QAAW,CACb,EACC,SAAU,CACT,KAAM,UACN,QAAW,EACb,EACC,IAAK,CACJ,KAAM,GACR,CACA,EACIC,GAAiB,CACpB,KAAM,CACL,SAAU,GACV,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,CACA,CACA,EACC,KAAM,CACL,SAAU,GACV,KAAM,GACR,EACC,QAAS,CACR,KAAM,SACN,QAAW,EACb,EACC,YAAa,CACZ,KAAM,QACR,EACC,OAAQ,CACP,KAAM,SACN,QAAW,IACX,QAAS,IACT,QAAS,CACX,EACC,OAAQ,CACP,KAAM,GACR,EACC,UAAW,CACV,KAAM,SACN,QAAW,IACb,EACC,QAAS,CACR,KAAM,UACN,QAAW,EACb,EACC,cAAe,CACd,KAAM,SACN,QAAW,GACX,QAAS,CACX,EACC,eAAgB,CACf,KAAM,QACR,EACC,iBAAkB,CACjB,KAAM,QACR,EACC,kBAAmB,CAClB,KAAM,GACR,EACC,YAAa,CACZ,KAAM,UACN,QAAW,EACb,EACC,WAAY,CACX,KAAM,UACN,QAAW,EACb,EACC,UAAW,CACV,KAAM,WACR,CACA,EACIC,GAAe,CAClB,KAAM,CACL,SAAU,GACV,KAAM,OACN,OAAQ,CACP,MAAO,CACV,CACA,CACA,EACC,KAAM,CACL,SAAU,GACV,KAAM,QACN,MAAO,QACT,EACC,YAAa,CACZ,SAAU,GACV,KAAM,QACN,OAAQ,EACR,MAAO,CACN,KAAM,QACN,OAAQ,EACR,MAAO,QACV,CACA,CACA,EACIC,GAAe,CAClB,KAAM,CACL,SAAU,GACV,KAAM,OACN,OAAQ,CACP,MAAO,CACV,CACA,CACA,EACC,IAAK,CACJ,SAAU,GACV,KAAM,QACR,EACC,YAAa,CACZ,SAAU,GACV,KAAM,QACN,OAAQ,EACR,MAAO,CACN,KAAM,QACN,OAAQ,EACR,MAAO,QACV,CACA,CACA,EACInzB,GAAQ,CACX,GAAI,CACH,KAAM,SACN,SAAU,EACZ,EACC,KAAM,CACL,KAAM,OACN,OAAQ,CACP,KAAM,CACT,EACG,KAAM,CACT,EACG,OAAQ,CACX,EACG,OAAQ,CACX,EACG,QAAS,CACZ,EACG,iBAAkB,CACrB,EACG,OAAQ,CACX,EACG,UAAW,CACd,EACG,eAAgB,CACnB,EACG,WAAY,CACf,CACA,EACE,SAAU,EACZ,EACC,SAAU,CACT,KAAM,GACR,EACC,OAAQ,CACP,KAAM,QACR,EACC,eAAgB,CACf,KAAM,QACR,EACC,QAAS,CACR,KAAM,SACN,QAAS,EACT,QAAS,EACX,EACC,QAAS,CACR,KAAM,SACN,QAAS,EACT,QAAS,EACX,EACC,OAAQ,CACP,KAAM,QACR,EACC,OAAQ,CACP,KAAM,QACR,EACC,MAAO,CACN,KAAM,OACR,CACA,EACIl0B,GAAS,CACZ,cACA,cACA,gBACA,iBACA,wBACA,gBACA,gBACA,mBACA,sBACA,mBACD,EACIsnD,GAAoB,CACvB,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACIC,GAAc,CACjB,gBAAiB,CAChB,KAAM,SACN,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACIC,GAAgB,CACnB,kBAAmB,CAClB,KAAM,SACN,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACIC,GAAiB,CACpB,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACIC,GAAc,CACjB,WAAY,CACX,KAAM,OACN,OAAQ,CACP,KAAM,CACT,EACG,MAAO,CACV,EACG,OAAQ,CACX,CACA,EACE,QAAW,OACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,YAAa,CACZ,KAAM,OACN,OAAQ,CACP,MAAO,CACV,EACG,MAAO,CACV,EACG,MAAO,CACV,CACA,EACE,QAAW,QACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,mBAAoB,CACnB,KAAM,SACN,QAAW,EACX,SAAU,CACT,CACC,YAAa,OACjB,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,mBAAoB,CACnB,KAAM,SACN,QAAW,KACX,SAAU,CACT,CACC,YAAa,OACjB,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,gBAAiB,CAChB,KAAM,SACN,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACIC,GAAgB,CACnB,mBAAoB,CACnB,KAAM,OACN,OAAQ,CACP,MAAO,CACV,EACG,KAAM,CACT,EACG,cAAe,CAClB,CACA,EACE,QAAW,QACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,iBAAkB,CACjB,KAAM,SACN,QAAW,IACX,QAAS,EACT,MAAO,SACP,SAAU,CACT,CACC,mBAAoB,MACxB,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,qBAAsB,CACrB,KAAM,UACN,QAAW,GACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,kBAAmB,CAClB,KAAM,SACN,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,OACN,OAAQ,CACP,KAAM,CACT,EACG,aAAc,CACjB,EACG,OAAQ,CACX,CACA,EACE,QAAW,OACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,qBAAsB,CACrB,KAAM,UACN,QAAW,GACX,SAAU,CACT,aACA,CACC,IAAK,cACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,eAAgB,CACf,KAAM,OACN,OAAQ,CACP,MAAO,CACV,EACG,OAAQ,CACX,EACG,YAAa,CAChB,CACA,EACE,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,UACN,QAAW,GACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,gBAAiB,CAChB,KAAM,UACN,QAAW,GACX,SAAU,CACT,aACA,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,0BAA2B,CAC1B,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,EACG,KAAM,CACT,CACA,EACE,QAAW,OACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,YAAa,CACZ,KAAM,SACN,QAAW,EACX,QAAS,EACT,MAAO,mCACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,gBAAiB,CAChB,KAAM,OACN,OAAQ,CACP,KAAM,CACT,EACG,MAAO,CACV,EACG,OAAQ,CACX,EACG,KAAM,CACT,CACA,EACE,QAAW,OACX,SAAU,CACT,aACA,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,EACA,EACA,EACA,CACH,EACE,MAAO,SACP,SAAU,CACT,aACA,aACA,CACC,gBAAiB,CAChB,OACA,QACA,QACL,CACA,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,aAAc,CACb,KAAM,gBACN,OAAQ,GACR,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,cAAe,CACd,KAAM,SACN,QAAW,EACX,OAAQ,IACR,MAAO,UACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,eAAgB,CACf,KAAM,UACN,QAAW,CACV,CACH,EACE,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,oBAAqB,CACpB,KAAM,UACN,QAAW,GACX,SAAU,CACT,aACA,CACC,0BAA2B,KAC/B,EACG,CACC,mBAAoB,CACnB,OACA,aACL,CACA,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,cAAe,CACd,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,EACA,CACH,EACE,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,cAAe,CACd,KAAM,OACN,OAAQ,CACP,OAAQ,CACX,EACG,KAAM,CACT,EACG,MAAO,CACV,EACG,IAAK,CACR,EACG,OAAQ,CACX,EACG,WAAY,CACf,EACG,YAAa,CAChB,EACG,cAAe,CAClB,EACG,eAAgB,CACnB,CACA,EACE,QAAW,SACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,uBAAwB,CACvB,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,EACG,KAAM,CACT,CACA,EACE,QAAW,OACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,uBAAwB,CACvB,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,EACG,KAAM,CACT,CACA,EACE,QAAW,OACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,0BAA2B,CAC1B,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,EACG,iBAAkB,CACrB,EACG,KAAM,CACT,CACA,EACE,QAAW,OACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,aAAc,CACb,KAAM,YACN,QAAW,GACX,OAAQ,GACR,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,YAAa,CACZ,KAAM,QACN,MAAO,SACP,QAAW,CACV,oBACA,0BACH,EACE,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,YAAa,CACZ,KAAM,SACN,QAAW,GACX,QAAS,EACT,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,SACN,QAAW,GACX,QAAS,EACT,MAAO,MACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,mBAAoB,CACnB,KAAM,SACN,QAAW,IACX,MAAO,MACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,sBAAuB,CACtB,KAAM,SACN,QAAW,EACX,MAAO,MACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,eAAgB,CACf,KAAM,OACN,OAAQ,CACP,KAAM,CACT,EACG,KAAM,CACT,EACG,OAAQ,CACX,EACG,MAAO,CACV,CACA,EACE,QAAW,SACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,qBAAsB,CACrB,KAAM,SACN,MAAO,MACP,QAAW,EACX,SAAU,CACT,YACH,EACE,gBAAiB,cACjB,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,CACA,EACC,uBAAwB,CACvB,KAAM,QACN,MAAO,OACP,OAAQ,CACP,OAAQ,CACX,EACG,KAAM,CACT,EACG,MAAO,CACV,EACG,IAAK,CACR,EACG,OAAQ,CACX,EACG,WAAY,CACf,EACG,YAAa,CAChB,EACG,cAAe,CAClB,EACG,eAAgB,CACnB,CACA,EACE,SAAU,CACT,aACA,CACC,mBAAoB,CACnB,OACL,CACA,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,8BAA+B,CAC9B,KAAM,iCACN,SAAU,CACT,aACA,CACC,mBAAoB,CACnB,OACL,CACA,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,cAAe,CACd,KAAM,OACN,OAAQ,CACP,OAAQ,CACX,EACG,KAAM,CACT,EACG,MAAO,CACV,EACG,IAAK,CACR,EACG,OAAQ,CACX,EACG,WAAY,CACf,EACG,YAAa,CAChB,EACG,cAAe,CAClB,EACG,eAAgB,CACnB,CACA,EACE,QAAW,SACX,SAAU,CACT,aACA,CACC,IAAK,sBACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,SACN,QAAW,GACX,MAAO,UACP,SAAU,CACT,aACA,CACC,mBAAoB,CACnB,OACA,aACL,CACA,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,oBAAqB,CACpB,KAAM,QACN,MAAO,OACP,OAAQ,CACP,WAAY,CACf,EACG,SAAU,CACb,CACA,EACE,SAAU,CACT,aACA,CACC,mBAAoB,CACnB,OACL,CACA,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,cAAe,CACd,KAAM,SACN,QAAW,EACX,OAAQ,IACR,MAAO,UACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,eAAgB,CACf,KAAM,SACN,QAAW,EACX,QAAS,EACT,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,oBAAqB,CACpB,KAAM,UACN,QAAW,GACX,SAAU,CACT,aACA,CACC,0BAA2B,KAC/B,EACG,CACC,mBAAoB,CACnB,OACA,aACL,CACA,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,iBAAkB,CACjB,KAAM,OACN,OAAQ,CACP,KAAM,CACT,EACG,UAAW,CACd,EACG,UAAW,CACd,CACA,EACE,QAAW,OACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,cAAe,CACd,KAAM,QACN,MAAO,SACP,MAAO,MACP,OAAQ,EACR,QAAW,CACV,EACA,CACH,EACE,SAAU,CACT,aACA,CACC,IAAK,oBACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,aACnB,EACC,qBAAsB,CACrB,KAAM,UACN,QAAW,GACX,SAAU,CACT,aACA,CACC,IAAK,cACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,eAAgB,CACf,KAAM,OACN,OAAQ,CACP,MAAO,CACV,EACG,OAAQ,CACX,EACG,YAAa,CAChB,CACA,EACE,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,UACN,QAAW,GACX,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,gBAAiB,CAChB,KAAM,UACN,QAAW,GACX,SAAU,CACT,aACA,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACIC,GAAgB,CACnB,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACIC,GAAmB,CACtB,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACInnC,GAAS,CACZ,KAAM,QACN,MAAO,GACR,EACIonC,GAAkB,CACrB,KAAM,OACN,OAAQ,CACP,KAAM,CACR,EACE,KAAM,CACR,EACE,IAAK,CACP,EACE,KAAM,CACR,EACE,IAAK,CACP,EACE,KAAM,CACR,EACE,GAAM,CACR,EACE,MAAO,CACT,EACE,IAAK,CACP,EACE,IAAK,CACP,EACE,KAAM,CACR,EACE,IAAK,CACP,EACE,OAAQ,CACV,CACA,CACA,EACIC,GAAgB,CACnB,KAAM,OACN,OAAQ,CACP,MAAO,CACT,EACE,WAAY,CACd,EACE,QAAS,CACX,CACA,CACA,EACIC,GAAgB,CACnB,KAAM,QACN,QAAS,EACT,QAAS,GACT,MAAO,CACN,SACA,OACF,EACC,OAAQ,CACT,EACIC,GAAe,CAClB,KAAM,QACN,MAAO,IACP,QAAS,CACV,EACIC,GAAQ,CACX,OAAQ,CACP,KAAM,OACN,QAAW,WACX,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,gBAAiB,gBACjB,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,CACA,EACC,SAAU,CACT,KAAM,QACN,QAAW,CACV,KACA,IACA,EACH,EACE,OAAQ,EACR,MAAO,SACP,gBAAiB,gBACjB,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,CACA,EACC,MAAO,CACN,KAAM,QACN,gBAAiB,gBACjB,QAAW,UACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,EACC,UAAW,CACV,KAAM,SACN,gBAAiB,gBACjB,QAAW,GACX,QAAS,EACT,QAAS,EACT,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,CACA,EACIC,GAAM,CACT,YAAa,CACZ,KAAM,QACN,gBAAiB,gBACjB,QAAW,UACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,EACC,gBAAiB,CAChB,KAAM,QACN,gBAAiB,gBACjB,QAAW,UACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,EACC,YAAa,CACZ,KAAM,QACN,gBAAiB,gBACjB,QAAW,UACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,EACC,mBAAoB,CACnB,KAAM,SACN,gBAAiB,gBACjB,QAAW,GACX,QAAS,EACT,QAAS,EACT,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,EACC,oBAAqB,CACpB,KAAM,SACN,gBAAiB,gBACjB,QAAW,GACX,QAAS,EACT,QAAS,EACT,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,EACC,oBAAqB,CACpB,KAAM,SACN,gBAAiB,gBACjB,QAAW,GACX,QAAS,EACT,QAAS,EACT,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,EACC,mBAAoB,CACnB,KAAM,SACN,gBAAiB,gBACjB,QAAW,GACX,QAAS,EACT,QAAS,EACT,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,WAAY,EACd,CACA,EACIC,GAAU,CACb,OAAQ,CACP,KAAM,SACN,SAAU,EACZ,EACC,aAAc,CACb,KAAM,SACN,QAAS,EACT,QAAW,CACb,CACA,EACI16D,GAAa,CAChB,KAAM,CACL,KAAM,uBACN,QAAW,WACX,gBAAiB,gBACjB,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,CACA,CACA,EACI26D,GAAQ,CACX,aACA,aACA,eACA,gBACA,uBACA,eACA,eACA,kBACA,qBACA,kBACD,EACIC,GAAa,CAChB,iBAAkB,CACjB,KAAM,UACN,QAAW,GACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,eAAgB,CACf,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,aAAc,CACb,KAAM,QACN,QAAW,UACX,WAAY,GACZ,SAAU,CACT,CACC,IAAK,cACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,qBAAsB,CACrB,KAAM,QACN,WAAY,GACZ,SAAU,CACT,CACC,IAAK,cACT,EACG,CACC,iBAAkB,EACtB,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,EACA,CACH,EACE,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,MACX,SAAU,CACT,gBACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,eAAgB,CACf,KAAM,gBACN,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,yBACnB,CACA,EACIC,GAAa,CAChB,eAAgB,CACf,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,aAAc,CACb,KAAM,QACN,QAAW,UACX,WAAY,GACZ,SAAU,CACT,CACC,IAAK,cACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,EACA,CACH,EACE,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,MACX,SAAU,CACT,gBACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,aAAc,CACb,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,cAAe,CACd,KAAM,SACN,QAAW,EACX,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,YAAa,CACZ,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,QACN,MAAO,SACP,QAAS,EACT,WAAY,GACZ,MAAO,cACP,SAAU,CACT,CACC,IAAK,cACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,aACnB,EACC,eAAgB,CACf,KAAM,gBACN,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,yBACnB,EACC,gBAAiB,CAChB,KAAM,QACN,WAAY,GACZ,SAAU,CACT,CACC,IAAK,gBACT,EACG,CACC,IAAK,cACT,EACG,CACC,OAAQ,UACR,IAAK,CACJ,YAAa,EAClB,CACA,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,eACJ,CACA,EACE,gBAAiB,YACnB,CACA,EACIC,GAAe,CAClB,gBAAiB,CAChB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,eAAgB,CACf,KAAM,QACN,QAAW,UACX,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,cAAe,CACd,KAAM,SACN,QAAW,EACX,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,mBAAoB,CACnB,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,EACA,CACH,EACE,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,0BAA2B,CAC1B,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,MACX,SAAU,CACT,kBACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,qBAAsB,CACrB,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,MACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,yBAA0B,CACzB,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,WACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,sBAAuB,CACtB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,sBAAuB,CACtB,KAAM,QACN,QAAW,UACX,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,wBAAyB,CACxB,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,CACA,EACIC,GAAgB,CACnB,iBAAkB,CACjB,KAAM,SACN,QAAW,GACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,oBAAqB,CACpB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,gBAAiB,CAChB,KAAM,QACN,QAAW,CACV,cACA,CACC,QACJ,EACG,CACC,iBACJ,EACG,EACA,qBACA,GACA,YACA,GACA,OACA,GACA,OACA,GACA,SACA,EACA,KACH,EACE,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,iBACJ,CACA,EACE,gBAAiB,YACnB,EACC,kBAAmB,CAClB,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,CACA,EACIC,GAAe,CAClB,eAAgB,CACf,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,aAAc,CACb,KAAM,QACN,QAAW,UACX,WAAY,GACZ,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,kBAAmB,CAClB,KAAM,QACN,QAAW,mBACX,WAAY,GACZ,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,kBAAmB,CAClB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,EACA,CACH,EACE,WAAY,GACZ,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,MACX,SAAU,CACT,aACA,gBACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,eAAgB,CACf,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,aAAc,CACb,KAAM,QACN,QAAW,UACX,WAAY,GACZ,YAAa,GACb,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,kBAAmB,CAClB,KAAM,QACN,QAAW,mBACX,WAAY,GACZ,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,kBAAmB,CAClB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,SACN,QAAW,EACX,QAAS,EACT,WAAY,GACZ,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,iBAAkB,CACjB,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,EACA,CACH,EACE,WAAY,GACZ,MAAO,SACP,SAAU,CACT,YACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,MACX,SAAU,CACT,aACA,gBACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,CACA,EACIC,GAAe,CAClB,iBAAkB,CACjB,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,oBAAqB,CACpB,KAAM,SACN,QAAW,EACX,OAAQ,IACR,WAAY,GACZ,MAAO,UACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,wBAAyB,CACxB,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,oBAAqB,CACpB,KAAM,SACN,QAAW,EACX,QAAS,GACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,kBAAmB,CAClB,KAAM,SACN,QAAW,EACX,QAAS,GACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,oBAAqB,CACpB,KAAM,OACN,OAAQ,CACP,OAAQ,CACX,EACG,QAAS,CACZ,CACA,EACE,QAAW,SACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,uBAAwB,CACvB,KAAM,SACN,QAAW,IACX,QAAS,EACT,WAAY,GACZ,MAAO,eACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,CACA,EACIC,GAAkB,CACrB,mCAAoC,CACnC,KAAM,cACN,QAAW,IACX,QAAS,EACT,QAAS,IACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,kCAAmC,CAClC,KAAM,cACN,QAAW,GACX,QAAS,EACT,QAAS,GACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,gCAAiC,CAChC,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,WACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,yBAA0B,CACzB,KAAM,SACN,QAAW,GACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,yBAA0B,CACzB,KAAM,aACN,QAAW,UACX,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,4BAA6B,CAC5B,KAAM,aACN,QAAW,UACX,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,yBAA0B,CACzB,KAAM,QACN,QAAW,UACX,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,mBAAoB,CACnB,KAAM,OACN,OAAQ,CACP,SAAU,CACb,EACG,MAAO,CACV,EACG,SAAU,CACb,EACG,KAAM,CACT,EACG,iBAAkB,CACrB,CACA,EACE,QAAW,WACX,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,CACA,EACIC,GAAmB,CACtB,mBAAoB,CACnB,KAAM,QACN,QAAW,UACX,WAAY,GACZ,SAAU,CACT,CACC,IAAK,oBACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,qBAAsB,CACrB,KAAM,gBACN,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,aACnB,EACC,qBAAsB,CACrB,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,CACA,EACI3C,GAAa,CAChB,SAAU,CACT,KAAM,SACN,QAAW,IACX,QAAS,EACT,MAAO,cACT,EACC,MAAO,CACN,KAAM,SACN,QAAW,EACX,QAAS,EACT,MAAO,cACT,CACA,EACI4C,GAAY,CACf,IAAK,CACJ,KAAM,QACR,CACA,EACIC,GAAS,CACZ,SAAUjC,GACV,MAAOC,GACP,QAASpJ,GACT,OAAQl3D,GACR,cAAeugE,GACf,cAAeC,GACf,kBAAmBC,GACnB,eAAgBC,GAChB,aAAcC,GACd,aAAcC,GACd,MAAOnzB,GACP,OAAQl0B,GACR,kBAAmBsnD,GACnB,YAAaC,GACb,cAAeC,GACf,eAAgBC,GAChB,wBAAyB,CACzB,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACC,YAAaC,GACb,cAAeC,GACf,cAAeC,GACf,iBAAkBC,GAClB,sBAAuB,CACvB,WAAY,CACX,KAAM,OACN,OAAQ,CACP,QAAS,CACZ,EACG,KAAM,CACT,CACA,EACE,QAAW,UACX,gBAAiB,UACnB,CACA,EACC,OAAQnnC,GACR,gBAAiBonC,GACjB,cAAeC,GACf,SAAY,CACZ,WAAY,CACX,KAAM,YACR,EACC,MAAO,CACN,KAAM,QACN,MAAO,eACT,EACC,KAAM,CACL,KAAM,SACN,QAAW,EACX,QAAS,CACX,EACC,SAAU,CACT,KAAM,SACN,QAAW,OACb,EACC,KAAM,CACL,KAAM,OACN,OAAQ,CACP,SAAU,CACb,EACG,YAAa,CAChB,EACG,SAAU,CACb,EACG,YAAa,CAChB,CACA,EACE,QAAW,aACb,EACC,WAAY,CACX,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,IAAK,CACR,EACG,IAAK,CACR,CACA,EACE,QAAW,KACb,EACC,QAAW,CACV,KAAM,IACN,SAAU,EACZ,CACA,EACC,cAAeC,GACf,WAAYC,GACZ,MAAOC,GACP,IAAKC,GACL,QAASC,GACT,WAAY16D,GACZ,MAAO26D,GACP,WAAYC,GACZ,uBAAwB,CACxB,yBAA0B,CACzB,KAAM,SACN,QAAW,EACX,QAAS,EACT,QAAS,EACT,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,uBAAwB,CACvB,KAAM,QACN,QAAW,UACX,WAAY,GACZ,SAAU,CACT,CACC,IAAK,wBACT,CACA,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,2BAA4B,CAC3B,KAAM,QACN,MAAO,SACP,OAAQ,EACR,QAAW,CACV,EACA,CACH,EACE,WAAY,GACZ,MAAO,SACP,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,kCAAmC,CAClC,KAAM,OACN,OAAQ,CACP,IAAK,CACR,EACG,SAAU,CACb,CACA,EACE,QAAW,MACX,SAAU,CACT,0BACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA,EACE,gBAAiB,eACnB,EACC,yBAA0B,CACzB,KAAM,gBACN,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,SACJ,CACA,EACE,gBAAiB,yBACnB,EACC,wBAAyB,CACxB,KAAM,SACN,QAAW,EACX,QAAS,EACT,MAAO,SACP,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,sBAAuB,CACtB,KAAM,SACN,QAAW,EACX,QAAS,EACT,MAAO,SACP,WAAY,GACZ,SAAU,CACT,uBACH,EACE,WAAY,CACX,aAAc,GACd,WAAY,CACX,OACA,UACA,eACJ,CACA,EACE,gBAAiB,aACnB,EACC,mCAAoC,CACnC,KAAM,UACN,QAAW,GACX,WAAY,GACZ,WAAY,CACX,aAAc,GACd,WAAY,CACX,MACJ,CACA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CA9F,CAClB,EACgB,EACA8N,GAAoB/C,GACxBT,EACEn6C,EACA,QACA,sBACAltC,EACA6iF,EACA9F,CACd,EACYsK,EACEn6C,EACA,QACA,wBACAltC,EACA6iF,EACA9F,CACd,CACA,EAEgB+N,GAAkBzD,EACtBn6C,EACA,QACA,mBACAltC,EACA6iF,EACA9F,CACZ,EACgBgO,GAAcjD,GAClBT,EACEn6C,EACA,QACA,eACAltC,EACA6iF,EACA9F,CACd,EACYsK,EACEn6C,EACA,QACA,iBACAltC,EACA6iF,EACA9F,CACd,CACA,EACgBiO,GAAoB3D,EACxBn6C,EACA,QACA,sBACAltC,EACA6iF,EACA9F,CACZ,EACgBkO,EACJL,GACA,IACAC,GACA,IACAE,GACA,IACAC,GACA,IACAF,GAAgB,CAAC,EACjB,IACAA,GAAgB,CAAC,EAEnBhB,GAAUzjE,EAAe4kE,CAAS,EAC7BnB,KACHA,GAAU,IAAIx3D,GAAO,CACnB,OAAQs4D,GACR,aAAc,CAACE,GAAgB,CAAC,EAAG,CAACA,GAAgB,CAAC,CAAC,EACtD,OACED,IAAqBG,GAAoB,EACrC,IAAIvwD,GAAO,CACT,MAAOuwD,GACP,MAAOH,EAC7B,CAAqB,EACD,OACN,KAAME,GACF,IAAIzwD,GAAK,CACP,MAAOywD,EAC3B,CAAmB,EACD,OACJ,cAAe,MAC7B,CAAa,EACD1kE,EAAe4kE,CAAS,EAAInB,IAE9BjpF,EAAM,SAASipF,EAAO,EACtBj/D,GAAOhqB,EAAM,QAAO,EACpBA,EAAM,QAAQ,MAAS,EACvBA,EAAM,YAAY,MAAS,EAC3BA,EAAM,UAAU/E,EAAK,EACrB41B,GAAW,EACb,CAEA,IAAIxF,GAAOnC,GAAMmhE,GAAgBC,GAAU/F,GAAegG,GAC1D,GAAI,eAAgBpyE,EAAQ,CAC1BmyE,GAAW,KAAK,MACd9D,EACEn6C,EACA,SACA,YACAltC,EACA6iF,EACA9F,CACd,CACA,EACU,MAAMsO,GAAYhE,EAChBn6C,EACA,SACA,YACAltC,EACA6iF,EACA9F,CACZ,EACUmO,GAAiB7D,EACfn6C,EACA,S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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213]}